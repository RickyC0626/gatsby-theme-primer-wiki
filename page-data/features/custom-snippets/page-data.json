{"componentChunkName":"component---packages-theme-src-templates-post-query-js","path":"/features/custom-snippets/","result":{"data":{"mdx":{"id":"af53da63-d5b2-5606-a8f8-2cff8a65d40e","tableOfContents":{"items":[{"url":"#adding-custom-snippets","title":"Adding Custom Snippets"}]},"fields":{"slug":"/features/custom-snippets/"},"frontmatter":{"title":"","description":""},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"adding-custom-snippets\"\n  }, \"Adding Custom Snippets\"), mdx(\"p\", null, \"You can add custom snippets whilst the default set of snippets are decided by following the below steps:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Cmd\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Shift\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"P\"), \" (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Ctrl\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Shift\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"P\"), \" for Windows), type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"snippets\"), \" and select \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Preferences: Configure User Snippets\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The command palette will remain in focus. Search for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"markdown\"), \" and select the entry entitled \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"markdown.json (Markdown)\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A JSON file will open. You can author your own snippets using the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://code.visualstudio.com/docs/editor/userdefinedsnippets#_create-your-own-snippets\"\n  }, \"documentation\"), \" to help you, or if you're using a snippet shared by another Foam user then you can copy and paste it in, as the below GIF demonstrates:\\n\", mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"/0fe05a9adf2a89efc55bf22d860f0706/custom-snippet.gif\",\n    \"alt\": \"Demonstrating adding a custom snippet\"\n  }))), mdx(\"p\", null, \"To get started, you might consider replacing the entire contents of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"markdown.json\"), \" file opened by the steps above with the JSON in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/foambubble/foam/pull/192#issuecomment-666736270\"\n  }, \"this comment\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"pre-defined-user-snippets\"\n  }, \"Pre-defined User Snippets\"), mdx(\"p\", null, \"This #recipe allows us to introduce Roam style commands to Foam, by using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://code.visualstudio.com/docs/editor/userdefinedsnippets\"\n  }, \"VS Code Snippets\"), \". Consider the below snippets:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"Zettelkasten Id\\\": {\\n    \\\"scope\\\": \\\"markdown\\\",\\n    \\\"prefix\\\": \\\"/id\\\",\\n    \\\"description\\\": \\\"Zettelkasten Id\\\",\\n    \\\"body\\\": [\\n      \\\"${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}\\\"\\n    ]\\n  },\\n  \\\"Current date\\\": {\\n    \\\"scope\\\": \\\"markdown\\\",\\n    \\\"prefix\\\": \\\"/date\\\",\\n    \\\"description\\\": \\\"Current date\\\",\\n    \\\"body\\\": [\\n      \\\"${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}\\\"\\n    ]\\n  }\\n}\\n\")), mdx(\"p\", null, \"Which would look like:\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/c651ccc09890883c69b4ddff7916c588/snippets.gif\",\n    \"alt\": \"GIF demonstrating User Snippets\"\n  })), mdx(\"p\", null, \"Using snippets enables Foam users to add \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/features/custom-snippets/\",\n    \"title\": \"custom-snippets\"\n  }, \"[[custom-snippets]]\"), \" themselves so they live alongside the first-class \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/commands\"), \".\"), mdx(\"h2\", {\n    \"id\": \"notes--considerations\"\n  }, \"Notes & Considerations\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"VS Code supplies \\\"commands\\\" already via the command palette\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consider the UX around this. Users less familiar with VS Code are more likely to be familiar with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/\"), \" to trigger a command menu. Experienced VS Code users may be more likely to favour the command palette.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We can use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"TabCompletionProvider\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"snippets\"), \" and mix them (maybe) via the following VS Code setting: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\\"editor.snippetSuggestions\\\": \\\"inline\\\" | \\\"top\\\" | \\\"bottom\\\" | \\\"none\\\"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For more discussion, consult the PR \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/foambubble/foam/pull/192\"\n  }, \"here\"), \".\")), mdx(\"h2\", {\n    \"id\": \"simplifying-markdown-syntax\"\n  }, \"Simplifying Markdown Syntax\"), mdx(\"p\", null, \"Some markdown syntax is difficult for users who have never authored markdown before. Take for example a checkbox/todo. The following syntax is required:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"- [ ] Something todo...\\n\")), mdx(\"p\", null, \"We could provide snippets that expand out into the associated markdown syntax, like in the below GIF:\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/c63d621d251d745b11a03bbde19144bf/markdown-snippets.gif\",\n    \"alt\": \"GIF demonstrating markdown snippets\"\n  })), mdx(\"p\", null, \"The JSON for these snippets can be found \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/foambubble/foam/pull/192#issuecomment-666736270\"\n  }, \"here\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/recipes/predefined-user-snippets/","title":"Pre-defined User Snippets"}}]}},"pageContext":{"slug":"/features/custom-snippets/","editUrl":"https://github.com/theowenyoung/gatsby-theme-primer-wiki/edit/master/example/content/features/custom-snippets.md","contributors":[]}},"staticQueryHashes":["2426452686","3309604493","900254191"]}