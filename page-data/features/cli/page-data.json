{"componentChunkName":"component---packages-theme-src-templates-post-query-js","path":"/features/cli/","result":{"data":{"mdx":{"id":"42bcd608-114c-5b75-92a9-e313bc7932e5","tableOfContents":{"items":[{"url":"#command-line-interface","title":"Command Line Interface"}]},"fields":{"slug":"/features/cli/"},"frontmatter":{"title":"","description":""},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"command-line-interface\"\n  }, \"Command Line Interface\"), mdx(\"p\", null, \"Create a CLI tool to allow running common Foam commands. These may include:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"foam init\"), \" - create a new foam workspace\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"foam janitor\"), \" - run \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/features/workspace-janitor/\",\n    \"title\": \"workspace-janitor\"\n  }, \"[[workspace-janitor]]\"), \" in current workspace\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"foam migrate <tool>\"), \" - migrate from tools like roam exports, obsidian and more\")), mdx(\"p\", null, \"More commands to be added.\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"janitor\"\n  }, \"Janitor\"), mdx(\"p\", null, \"To store your personal knowledge graph in markdown files instead of a database, we need some additional tooling to create and maintain relationships with notes.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Foam Janitor\"), \" (inspired by Andy Matuschak's \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/andymatuschak/note-link-janitor\"\n  }, \"note-link-janitor\"), \") helps you migrate existing notes to Foam, and maintain your Foam's health over time.\"), mdx(\"p\", null, \"Currently, Foam's Janitor helps you to:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ensure your \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/features/link-reference-definitions/\",\n    \"title\": \"link-reference-definitions\"\n  }, \"[[link-reference-definitions]]\"), \" are up to date\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ensure every document has a well-formatted title (required for Markdown Links, Markdown Notes, and Foam Gatsby Template compatibility)\")), mdx(\"p\", null, \"In the future, Janitor can help you with\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Updating \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/materialized-backlinks/\",\n    \"title\": \"materialized-backlinks\"\n  }, \"[[materialized-backlinks]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lint, format and structure notes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rename and move notes around while keeping their references up to date.\")), mdx(\"h2\", {\n    \"id\": \"using-janitor-from-vs-code-experimental\"\n  }, \"Using Janitor from VS Code (Experimental)\"), mdx(\"p\", null, \"Execute the \\\"Foam: Run Janitor\\\" command from the command palette.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/fb14baa5377fbf1ab939d13def09a1c7/foam-janitor-demo.gif\",\n    \"alt\": \"Foam Janitor demo\"\n  })), mdx(\"h2\", {\n    \"id\": \"using-janitor-from-command-line-experimental\"\n  }, \"Using Janitor from command line (Experimental)\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u26A0\\uFE0F Improvements to this documentation are welcome!\")), mdx(\"p\", null, \"The Janitor can be installed from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.npmjs.com/\"\n  }, \"NPM\"), \" and executed as a standalone CLI tool:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"> npm install -g foam-cli\\n> foam janitor path/to/workspace\\n\")), mdx(\"p\", null, \"You can run the Janitor as a git hook on every commit to ensure your workspace links are up to date. This can be especially helpful if you edit your markdown documents from other apps.\"), mdx(\"p\", null, \"You can also run the Janitor from a GitHub action to ensure that all changes coming to your workspace are up to date. This can be useful when editing your Foam notes from mobile (i.e. via \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://gitjournal.io\"\n  }, \"GitJournal\"), \"), or your Foam has multiple contributors and you want to ensure that all changes are correctly integrated.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/features/workspace-janitor/","title":"Janitor"}}],"inboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"foam-core\"\n  }, \"Foam Core\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"foam-core\"), \" is a (future) package that powers the core functionality in Foam across all platforms:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"VS Code Extension\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/features/workspace-janitor/\",\n    \"title\": \"workspace-janitor\"\n  }, \"[[workspace-janitor]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/features/cli/\",\n    \"title\": \"cli\"\n  }, \"[[cli]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Future initiatives\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Visualizations\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tag clouds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Graph\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Should we have a package for visualisation?\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/build-vs-assemble/\",\n    \"title\": \"build-vs-assemble\"\n  }, \"[[build-vs-assemble]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not everything needs to live in the Foam repo\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web based UI (Monaco)\")))), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"foam-core\"), \"'s primary responsibility is to build an API on top of a workspace of markdown files, which allows us to:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Treat files as a graph, based on links\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Can be either \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/wikilinks/\",\n    \"title\": \"wikilinks\"\n  }, \"[[wikilinks]]\"), \" or relative \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[markdown](links.md)\"), \" style\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We need to know about the edges (connections) as well as nodes\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"What link points to what other file, etc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Needs to have the exact link text, e.g. even if \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[some-page]]\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[some-page.md]]\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[Some Page]]\"), \" point to the same document (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"./some-page.md\"), \"), we need to know which format was used, so \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/features/link-reference-definitions/\",\n    \"title\": \"link-reference-definitions\"\n  }, \"[[link-reference-definitions]]\"), \" can be generated correctly\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Treat each file as semi-structured data\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Title, headings, lists, paragraphs, images, links, data, code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Also, possible Foam-specific meta stuff, like \\\"backlinks\\\" or \\\"block references\\\".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This can power advanced search features (e.g. showing entire context of paragraph in back links, find all documents)\")))), mdx(\"p\", null, \"Ideally, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"foam-core\"), \" will be generic enough that in can be used by third parties to build their own tools that operate on markdown directories.\"), mdx(\"h2\", {\n    \"id\": \"technical-requirements\"\n  }, \"Technical requirements\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The graph should be relatively inexpensive to compute (for running in CI, mobile etc)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If necessary, we can implement caching inside a dot folder, but ideally not\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In memory cache already exist, can prime from disk if needed\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The graph should be mutable (or immutable but easy to deep clone) so that persistent processes (VS Code) can cheaply update it when\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Document content changes\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Links update -> Graph change\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Heading changes -> Metadata change\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Anything in the document changes, update AST for individual note\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Files are added\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Files are removed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Files are renamed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Aliasing, call the same thing by multiple names\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Doesn't exist yet, should we support?\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The graph should be observable (EventEmitter?) so changes can be applied\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"EventEmitter w/ cross platform dependency\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wonka (staltz's callbag)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Can be a long term goal\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Short term fix: Just run the build fully on every change\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ideally, the it should accept file/structure changes from the outside from some sort of event source, so we can decouple source of updates (VS Code Workspace events, file system events...)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If this gets complicated, we can delay this for now\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We should not take on platform-specific dependencies\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Should work in any JS environment\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Written in TypeScript (preferably tsdx)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Published to NPM\")), mdx(\"h2\", {\n    \"id\": \"use-cases\"\n  }, \"Use cases\"), mdx(\"p\", null, \"Here are some example use cases that the core should support. They don't need to be built into the core, but may help us design correct solutions:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Adding and editing page content\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/materialized-backlinks/\",\n    \"title\": \"materialized-backlinks\"\n  }, \"[[materialized-backlinks]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/features/link-reference-definitions/\",\n    \"title\": \"link-reference-definitions\"\n  }, \"[[link-reference-definitions]]\"), \" for \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/wikilinks/\",\n    \"title\": \"wikilinks\"\n  }, \"[[wikilinks]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://jekyllrb.com/docs/front-matter/\"\n  }, \"Frontmatter\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Finding all documents with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#tag\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Finding all documents with instances of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[link]]\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Visualisations\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Full text search\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Or, if search is too expensive/complex, when given a list of file names and line/column positions from VS Code search API, can return the document context (e.g. full paragraph, preceding/following line etc)\")))), mdx(\"h2\", {\n    \"id\": \"collaboration\"\n  }, \"Collaboration\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This week\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"List of things to work in order\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Provide more vision on future state\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Write about working and collaboration philosophy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/todo/\",\n    \"title\": \"todo\"\n  }, \"[[todo]]\"), \" Prioritise roadmap\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Week of July 13\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Jani is available full time to work on this\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Janne: Write proposals, maybe more\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Riccardo: Available\")))), mdx(\"h2\", {\n    \"id\": \"configuration-management\"\n  }, \"Configuration management\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Other tools may not be able to use vscode\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/todo/\",\n    \"title\": \"todo\"\n  }, \"[[todo]]\"), \" Discuss with Janne and Riccardo\")), mdx(\"h2\", {\n    \"id\": \"feature-comparison\"\n  }, \"Feature comparison\"), mdx(\"p\", null, \"Useful for knowing what needs to be supported. See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/feature-comparison\",\n    \"title\": \"feature-comparison\"\n  }, \"[[feature-comparison]]\"), \".\"), mdx(\"h2\", {\n    \"id\": \"meeting-notes\"\n  }, \"Meeting notes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/meeting-notes/foam-core-2020-07-11/\",\n    \"title\": \"foam-core-2020-07-11\"\n  }, \"[[foam-core-2020-07-11]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/dev/foam-core/","title":"Foam Core"}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"roadmap\"\n  }, \"Roadmap\"), mdx(\"p\", null, \"Some of these items can be achieved by combining existing tools, but others may require us to build bespoke software solutions. See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dev/build-vs-assemble/\",\n    \"title\": \"build-vs-assemble\"\n  }, \"[[build-vs-assemble]]\"), \" to understand trade-offs between these approaches. If a feature can be implemented by contributing to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/recipes/recipes/\",\n    \"title\": \"recipes\"\n  }, \"[[recipes]]\"), \", it should.\"), mdx(\"h2\", {\n    \"id\": \"in-progress\"\n  }, \"In progress\"), mdx(\"p\", null, \"Items that are already being worked on. Roadmap items in this stage should have an owner.\"), mdx(\"h2\", {\n    \"id\": \"high-priority\"\n  }, \"High priority\"), mdx(\"p\", null, \"Items we plan on working next. Items in this stage don't need to have an owner, but before we start working on them should have enough specification that they can be picked up and worked on without having to seek consensus.\"), mdx(\"p\", null, \"If you want to pick up work in this category, you should have a plan on how long the implementation will approximately take so we don't block progress by sitting on high priority issues.\"), mdx(\"h2\", {\n    \"id\": \"backlog\"\n  }, \"Backlog\"), mdx(\"p\", null, \"Everything else, categorised into themes. Just because something is on this list doesn't mean it'll get done. If you're interested in working on items in this category, check the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/contribution-guide/\",\n    \"title\": \"contribution-guide\"\n  }, \"[[contribution-guide]]\"), \" for how to get started.\"), mdx(\"p\", null, \"If a roadmap item is a stub, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"consider\"), \" opening a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/foambubble/foam/issues\"\n  }, \"GitHub issue\"), \" to start a conversation to avoid situations where the implementation does not fit long term vision and roadmap. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Note that this is optional. The only centralised governance in Foam is to decide what ends up in the official \", mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"https://github.com/foambubble/foam-template\"\n  }, \"template\"), \", \", mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"https://github.com/foambubble/foam\"\n  }, \"documentation\"), \" and \", mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"https://github.com/foambubble/foam/tree/master/packages/foam-vscode\"\n  }, \"extension\"), \". You are free to build whatever you want for yourself, and we'd love if you shared it with us, but you are by no means obligated to do so!\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When creating GitHub issues to discuss roadmap items, link them here.\")), mdx(\"h3\", {\n    \"id\": \"known-issues\"\n  }, \"Known issues\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/improve-default-workspace-settings\",\n    \"title\": \"improve-default-workspace-settings\"\n  }, \"[[improve-default-workspace-settings]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discussion: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/foambubble/foam/issues/270\"\n  }, \"foam#270\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Improve \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/features/git-integration/\",\n    \"title\": \"git-integration\"\n  }, \"[[git-integration]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fix \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/wikilinks/\",\n    \"title\": \"wikilinks\"\n  }, \"[[wikilinks]]\"), \" compatibility issues\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Simplify \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/foam-file-format/\",\n    \"title\": \"foam-file-format\"\n  }, \"[[foam-file-format]]\"), \"\")), mdx(\"h3\", {\n    \"id\": \"core-features\"\n  }, \"Core features\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/renaming-files\",\n    \"title\": \"renaming-files\"\n  }, \"[[renaming-files]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/unlinked-references/\",\n    \"title\": \"unlinked-references\"\n  }, \"[[unlinked-references]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/block-references\",\n    \"title\": \"block-references\"\n  }, \"[[block-references]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/improved-backlinking\",\n    \"title\": \"improved-backlinking\"\n  }, \"[[improved-backlinking]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UX: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/recipes/make-backlinks-more-prominent/\",\n    \"title\": \"make-backlinks-more-prominent\"\n  }, \"[[make-backlinks-more-prominent]]\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/materialized-backlinks/\",\n    \"title\": \"materialized-backlinks\"\n  }, \"[[materialized-backlinks]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/recipes/automatic-git-syncing/\",\n    \"title\": \"automatic-git-syncing\"\n  }, \"[[automatic-git-syncing]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/git-flows-for-teams\",\n    \"title\": \"git-flows-for-teams\"\n  }, \"[[git-flows-for-teams]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/user-settings\",\n    \"title\": \"user-settings\"\n  }, \"[[user-settings]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/features/link-reference-definitions/\",\n    \"title\": \"link-reference-definitions\"\n  }, \"[[link-reference-definitions]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/recipes/predefined-user-snippets/\",\n    \"title\": \"predefined-user-snippets\"\n  }, \"[[predefined-user-snippets]]\"), \"\")), mdx(\"h3\", {\n    \"id\": \"publishing\"\n  }, \"Publishing\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/officially-support-alternative-templates\",\n    \"title\": \"officially-support-alternative-templates\"\n  }, \"[[officially-support-alternative-templates]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/improved-static-site-generation\",\n    \"title\": \"improved-static-site-generation\"\n  }, \"[[improved-static-site-generation]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/mdx-by-default/\",\n    \"title\": \"mdx-by-default\"\n  }, \"[[mdx-by-default]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/search-in-published-workspace\",\n    \"title\": \"search-in-published-workspace\"\n  }, \"[[search-in-published-workspace]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/graph-in-published-workspace\",\n    \"title\": \"graph-in-published-workspace\"\n  }, \"[[graph-in-published-workspace]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discussion: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/foambubble/foam/issues/58\"\n  }, \"foam#58\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/linking-between-published-workspaces\",\n    \"title\": \"linking-between-published-workspaces\"\n  }, \"[[linking-between-published-workspaces]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discussion: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/foambubble/foam/issues/59\"\n  }, \"foam#59\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dev/publishing-permissions/\",\n    \"title\": \"publishing-permissions\"\n  }, \"[[publishing-permissions]]\"), \"\")), mdx(\"h3\", {\n    \"id\": \"platforms\"\n  }, \"Platforms\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/features/cli/\",\n    \"title\": \"cli\"\n  }, \"[[cli]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/mobile-apps\",\n    \"title\": \"mobile-apps\"\n  }, \"[[mobile-apps]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/packaged-desktop-app\",\n    \"title\": \"packaged-desktop-app\"\n  }, \"[[packaged-desktop-app]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/web-editor\",\n    \"title\": \"web-editor\"\n  }, \"[[web-editor]]\"), \"\")), mdx(\"h3\", {\n    \"id\": \"migration\"\n  }, \"Migration\"), mdx(\"p\", null, \"The community is working on a number of automated scripts to help you migrate to Foam. The main work of developing such a method involves exporting your notes, converting them to the Markdown format, and then making sure that the links between notes (if you had those) still work.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/recipes/migrating-from-roam/\",\n    \"title\": \"migrating-from-roam\"\n  }, \"[[migrating-from-roam]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discussion: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/foambubble/foam/issues/55\"\n  }, \"foam#55\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/recipes/migrating-from-obsidian/\",\n    \"title\": \"migrating-from-obsidian\"\n  }, \"[[migrating-from-obsidian]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discussion: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/foambubble/foam/issues/46\"\n  }, \"foam#46\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/recipes/migrating-from-onenote/\",\n    \"title\": \"migrating-from-onenote\"\n  }, \"[[migrating-from-onenote]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discussion: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/foambubble/foam/issues/151\"\n  }, \"foam#151\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Migration from other tools...\"))), mdx(\"h3\", {\n    \"id\": \"integration\"\n  }, \"Integration\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Integrations to third party tools\"), \"...\")), mdx(\"h3\", {\n    \"id\": \"wild-ideas\"\n  }, \"Wild ideas\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/foam-linter\",\n    \"title\": \"foam-linter\"\n  }, \"[[foam-linter]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/refactoring-via-language-server-protocol\",\n    \"title\": \"refactoring-via-language-server-protocol\"\n  }, \"[[refactoring-via-language-server-protocol]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/dev/roadmap/","title":"Roadmap"}}]}},"pageContext":{"slug":"/features/cli/","editUrl":"https://github.com/theowenyoung/gatsby-theme-primer-wiki/edit/master/example/content/features/cli.md","contributors":[]}},"staticQueryHashes":["2426452686","3309604493","900254191"]}