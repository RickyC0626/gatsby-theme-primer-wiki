{
    "componentChunkName": "component---theme-src-templates-post-query-js",
    "path": "/nodejs-monorepo/",
    "result": {"data":{"mdx":{"id":"a884c7b9-e599-56a6-b300-b6a84a4e63cb","tableOfContents":{"items":[{"url":"#nodejs-monorepo","title":"Nodejs Monorepo","items":[{"url":"#tools","title":"Tools"},{"url":"#use-changesets-as-monorepo-manager","title":"Use Changesets as monorepo manager"},{"url":"#with-ci","title":"With CI"}]}]},"fields":{"title":"Nodejs Monorepo","slug":"/nodejs-monorepo/","url":"https://wiki.demo.owenyoung.com/wiki/nodejs-monorepo/","editUrl":"https://github.com/theowenyoung/gatsby-theme-primer-wiki/tree/main/example/content5/nodejs-monorepo.md","lastUpdatedAt":"2021-08-27T03:14:28.000Z","lastUpdated":"8/27/2021","gitCreatedAt":"2021-08-27T03:14:28.000Z"},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":["Monorepo","Nodejs","Workflows"],"date":null,"dateModified":null,"language":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Monorepo\", \"Nodejs\", \"Workflows\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"nodejs-monorepo\"\n  }, \"Nodejs Monorepo\"), mdx(\"h2\", {\n    \"id\": \"tools\"\n  }, \"Tools\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/atlassian/changesets\"\n  }, \"GitHub - atlassian/changesets: \\uD83E\\uDD8B A way to manage your versioning and changelogs with a focus on monorepos\")), mdx(\"h2\", {\n    \"id\": \"use-changesets-as-monorepo-manager\"\n  }, \"Use Changesets as monorepo manager\"), mdx(\"h3\", {\n    \"id\": \"init-a-monorepo\"\n  }, \"Init a monorepo\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"mkdir monorepo && cd monorepo\\ngit init\\n# Add .gitignore file for nodejs <https://github.com/github/gitignore/blob/master/Node.gitignore>\\nnpm init --yes\\n\")), mdx(\"p\", null, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"private\\\":\\\"true\\\"\"), \" to the root \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm init -w packages/a\\nnpm init -w packages/b\\nnpm init -w packages/c\\n\")), mdx(\"p\", null, \"Let \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"c\"), \" depends \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"a\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"b\"), \",\"), mdx(\"p\", null, \"Add\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"\\\"dependencies\\\": {\\n  \\\"a\\\":\\\"^1.0.0\\\",\\n  \\\"b\\\":\\\"^1.0.0\\\"\\n}\\n\")), mdx(\"p\", null, \"to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"packages/c/package.json\")), mdx(\"h3\", {\n    \"id\": \"install-changesets\"\n  }, \"Install changesets\"), mdx(\"p\", null, \"Also see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/atlassian/changesets/blob/main/docs/intro-to-using-changesets.md\"\n  }, \"here\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm install -D @changesets/cli && npx changeset init\\n\")), mdx(\"p\", null, \"This action will add a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".changeset\"), \" folder, and a couple of files to help you out:\"), mdx(\"p\", null, \"You should change the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".changeset/config.json\"), \" -> \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"baseBranch\"), \" to yourself main branch, also change \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"access\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"public\")), mdx(\"p\", null, \"Commit current files.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"git add .\\ngit commit -m \\\"feat: init\\\"\\n\")), mdx(\"p\", null, \"That's done.\"), mdx(\"h3\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"h4\", {\n    \"id\": \"first-publish\"\n  }, \"First publish\"), mdx(\"p\", null, \"First publish you should just use the follow command to publish your module\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npx changeset publish\\n\")), mdx(\"h4\", {\n    \"id\": \"future-changes\"\n  }, \"Future changes\"), mdx(\"p\", null, \"You should see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/atlassian/changesets/blob/main/docs/detailed-explanation.md\"\n  }, \"changesets philosophy\")), mdx(\"p\", null, \"You should first create an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"intent to change\"), \", that said, before what ever changes you want to make, you should create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"intent change\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npx changeset\\n\")), mdx(\"p\", null, \"...Make some changes\"), mdx(\"p\", null, \"Now, generate new version, changeset will take care your dependences,\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Note, by default, if \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"a\"), \" upgrade from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1.0.1\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1.0.2\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"c\"), \" depends on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"a@^1.0.1\"), \", then \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"c\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" will not change, cause npm will auto update \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"a@^1.0.1\"), \" to the last version \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1.0.2\"), \"\\nif you want change to the exact version every time, you can set the config to\"), mdx(\"pre\", {\n    parentName: \"blockquote\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \" \\\"___experimentalUnsafeOptions_WILL_CHANGE_IN_PATCH\\\": {\\n    \\\"updateInternalDependents\\\": \\\"always\\\"\\n }\\n\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npx changeset version\\n\")), mdx(\"p\", null, \"Then, you can publish it.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npx changeset publish\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"git add .\\ngit commit -m \\\"chore: version\\\"\\ngit push --follow-tags\\n\")), mdx(\"h2\", {\n    \"id\": \"with-ci\"\n  }, \"With CI\"), mdx(\"p\", null, \"I'll use Github Actions as example.\"), mdx(\"p\", null, \"The CI workflow assume that you use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/git-workflows/\",\n    \"title\": \"Git workflows\"\n  }, \"git-workflows\"), \" as your git workflow.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Note, you can use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/atlassian/changesets/tree/main/packages/changelog-github\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"@changesets/changelog-github\")), \" as your changelog format log. with this, you can generate a log like \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/theowenyoung/monorepo-example/releases/tag/%40theowenyoung%2Fpackage-example-b%401.1.0\"\n  }, \"this\"), \" , without this, then the log will only include \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/theowenyoung/monorepo-example/releases/tag/%40theowenyoung%2Fpackage-example-c%401.1.2\"\n  }, \"commit link\"), \" > \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm i -D @changesets/changelog-github\")), mdx(\"pre\", {\n    parentName: \"blockquote\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"changelog\\\": [\\n    \\\"@changesets/changelog-github\\\",\\n    { \\\"repo\\\": \\\"theowenyoung/monorepo-example\\\" }\\n  ]\\n}\\n\"))), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create a script in root \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"package.json\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"scripts\\\": {\\n    \\\"version-packages\\\": \\\"changeset version\\\",\\n    \\\"release\\\": \\\"changeset publish\\\"\\n  }\\n}\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create github actions workflows\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"mkdir -p .github/workflows\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"touch .github/workflows/release.yml\\n\")), mdx(\"p\", null, \"With the following content:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"name: Release\\n\\non:\\n  workflow_dispatch:\\n  push:\\n    branches:\\n      - main\\n\\njobs:\\n  release:\\n    name: Release\\n    runs-on: ubuntu-latest\\n    steps:\\n      - name: Checkout Repo\\n        uses: actions/checkout@master\\n        with:\\n          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits\\n          fetch-depth: 0\\n\\n      - name: Setup Node.js 12.x\\n        uses: actions/setup-node@master\\n        with:\\n          node-version: 12.x\\n      - name: Setup NPM Latest\\n        run: npm i -g npm\\n      - name: Install Dependencies\\n        run: npm i\\n\\n      - name: Create Release Pull Request or Publish to npm\\n        uses: changesets/action@master\\n        with:\\n          # this expects you to have a script called release which does a build for your packages and calls changeset publish\\n          publish: npm run release\\n          version: npm run version-packages\\n        env:\\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\\n          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"NPM_TOKEN\"), \" to your github repo secret settings\")), mdx(\"p\", null, \"By \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/nodejs-tips/\",\n    \"title\": \"Nodejs Tips\"\n  }, \"nodejs-tips\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm token create\\n\")), mdx(\"p\", null, \"Done.\"), mdx(\"p\", null, \"Every time you use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npx changeset\"), \" to generate a new changeset intent, and the change is pulled to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"main\"), \" branch, then CI will create a pull request to generate a new version, and after the pull request was merged, CI will publish npm packages, and create a new release.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\ntags:\n  - Monorepo\n  - Nodejs\n  - Workflows\n---\n\n# Nodejs Monorepo\n\n## Tools\n\n[GitHub - atlassian/changesets: 🦋 A way to manage your versioning and changelogs with a focus on monorepos](https://github.com/atlassian/changesets)\n\n## Use Changesets as monorepo manager\n\n### Init a monorepo\n\n```bash\nmkdir monorepo && cd monorepo\ngit init\n# Add .gitignore file for nodejs <https://github.com/github/gitignore/blob/master/Node.gitignore>\nnpm init --yes\n```\n\nAdd `\"private\":\"true\"` to the root `package.json`\n\n```bash\nnpm init -w packages/a\nnpm init -w packages/b\nnpm init -w packages/c\n```\n\nLet `c` depends `a` and `b`,\n\nAdd\n\n```json\n\"dependencies\": {\n  \"a\":\"^1.0.0\",\n  \"b\":\"^1.0.0\"\n}\n```\n\nto `packages/c/package.json`\n\n### Install changesets\n\nAlso see [here](https://github.com/atlassian/changesets/blob/main/docs/intro-to-using-changesets.md)\n\n```bash\nnpm install -D @changesets/cli && npx changeset init\n```\n\nThis action will add a `.changeset` folder, and a couple of files to help you out:\n\nYou should change the `.changeset/config.json` -> `baseBranch` to yourself main branch, also change `access` to `public`\n\nCommit current files.\n\n```bash\ngit add .\ngit commit -m \"feat: init\"\n```\n\nThat's done.\n\n### Usage\n\n#### First publish\n\nFirst publish you should just use the follow command to publish your module\n\n```bash\nnpx changeset publish\n```\n\n#### Future changes\n\nYou should see [changesets philosophy](https://github.com/atlassian/changesets/blob/main/docs/detailed-explanation.md)\n\nYou should first create an `intent to change`, that said, before what ever changes you want to make, you should create a `intent change`\n\n```bash\nnpx changeset\n```\n\n...Make some changes\n\nNow, generate new version, changeset will take care your dependences,\n\n> Note, by default, if `a` upgrade from `1.0.1` to `1.0.2`, `c` depends on `a@^1.0.1`, then `c` `package.json` will not change, cause npm will auto update `a@^1.0.1` to the last version `1.0.2`\n> if you want change to the exact version every time, you can set the config to\n>\n> ```bash\n>  \"___experimentalUnsafeOptions_WILL_CHANGE_IN_PATCH\": {\n>     \"updateInternalDependents\": \"always\"\n>  }\n> ```\n\n```bash\nnpx changeset version\n```\n\nThen, you can publish it.\n\n```bash\nnpx changeset publish\n```\n\n```bash\ngit add .\ngit commit -m \"chore: version\"\ngit push --follow-tags\n```\n\n## With CI\n\nI'll use Github Actions as example.\n\nThe CI workflow assume that you use [[git-workflows]] as your git workflow.\n\n> Note, you can use [`@changesets/changelog-github`](https://github.com/atlassian/changesets/tree/main/packages/changelog-github) as your changelog format log. with this, you can generate a log like [this](https://github.com/theowenyoung/monorepo-example/releases/tag/%40theowenyoung%2Fpackage-example-b%401.1.0) , without this, then the log will only include [commit link](https://github.com/theowenyoung/monorepo-example/releases/tag/%40theowenyoung%2Fpackage-example-c%401.1.2) > `npm i -D @changesets/changelog-github`\n>\n> ```json\n> {\n>   \"changelog\": [\n>     \"@changesets/changelog-github\",\n>     { \"repo\": \"theowenyoung/monorepo-example\" }\n>   ]\n> }\n> ```\n\n1. Create a script in root `package.json`\n\n```json\n{\n  \"scripts\": {\n    \"version-packages\": \"changeset version\",\n    \"release\": \"changeset publish\"\n  }\n}\n```\n\n2. Create github actions workflows\n\n```bash\nmkdir -p .github/workflows\n```\n\n```bash\ntouch .github/workflows/release.yml\n```\n\nWith the following content:\n\n```yaml\nname: Release\n\non:\n  workflow_dispatch:\n  push:\n    branches:\n      - main\n\njobs:\n  release:\n    name: Release\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout Repo\n        uses: actions/checkout@master\n        with:\n          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits\n          fetch-depth: 0\n\n      - name: Setup Node.js 12.x\n        uses: actions/setup-node@master\n        with:\n          node-version: 12.x\n      - name: Setup NPM Latest\n        run: npm i -g npm\n      - name: Install Dependencies\n        run: npm i\n\n      - name: Create Release Pull Request or Publish to npm\n        uses: changesets/action@master\n        with:\n          # this expects you to have a script called release which does a build for your packages and calls changeset publish\n          publish: npm run release\n          version: npm run version-packages\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}\n```\n\n3. Add `NPM_TOKEN` to your github repo secret settings\n\nBy [[nodejs-tips]]:\n\n```bash\nnpm token create\n```\n\nDone.\n\nEvery time you use `npx changeset` to generate a new changeset intent, and the change is pulled to the `main` branch, then CI will create a pull request to generate a new version, and after the pull request was merged, CI will publish npm packages, and create a new release.\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[git-workflows]: git-workflows.md \"Git workflows\"\n[nodejs-tips]: nodejs-tips.md \"Nodejs Tips\"\n[//end]: # \"Autogenerated link references\"\n","excerpt":"Nodejs Monorepo Tools GitHub - atlassian/changesets: 🦋 A way to manage your versioning and changelogs with a focus on monorepos Use Changes…","outboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Git\", \"Workflows\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"git-workflows\"\n  }, \"Git workflows\"), mdx(\"h2\", {\n    \"id\": \"intro\"\n  }, \"Intro\"), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow\"\n  }, \"here\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://wac-cdn.atlassian.com/dam/jcr:8f00f1a4-ef2d-498a-a2c6-8020bb97902f/03%20Release%20branches.svg?cdnVersion=1770\",\n    \"alt\": null\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"fields":{"slug":"/git-workflows/","title":"Git workflows"}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Nodejs\", \"Tips\", \"Programming-Languages\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"nodejs-tips\"\n  }, \"Nodejs Tips\"), mdx(\"h2\", {\n    \"id\": \"answers\"\n  }, \"Answers\"), mdx(\"h3\", {\n    \"id\": \"delete-node_modules-folder-recursively-from-a-specified-path-using-command-line\"\n  }, \"Delete node_modules folder recursively from a specified path using command line\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://stackoverflow.com/questions/42950501/delete-node-modules-folder-recursively-from-a-specified-path-using-command-line\"\n  }, \"Delete node_modules folder recursively from a specified path using command line - Stack Overflow\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"find . -name 'node_modules' -type d -prune -exec rm -rf '{}' +\\n\")), mdx(\"h3\", {\n    \"id\": \"get-npm-token\"\n  }, \"Get NPM Token\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm token create\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"fields":{"slug":"/nodejs-tips/","title":"Nodejs Tips"}}],"inboundReferences":[]},"tagsOutbound":{"nodes":[{"frontmatter":{"title":"","tags":["Git","Workflows"]},"fields":{"slug":"/git-workflows/","title":"Git workflows","lastUpdated":"8/27/2021","lastUpdatedAt":"2021-08-27T03:14:28.000Z","gitCreatedAt":"2021-08-27T03:14:28.000Z"}},{"frontmatter":{"title":"","tags":["Makefile","Templates","Workflows"]},"fields":{"slug":"/makefile-templates/","title":"Makefile Templates","lastUpdated":"8/28/2021","lastUpdatedAt":"2021-08-28T19:48:14.000Z","gitCreatedAt":"2021-08-27T03:14:28.000Z"}},{"frontmatter":{"title":"","tags":["Monorepo","Nodejs","Workflows"]},"fields":{"slug":"/nodejs-monorepo/","title":"Nodejs Monorepo","lastUpdated":"8/27/2021","lastUpdatedAt":"2021-08-27T03:14:28.000Z","gitCreatedAt":"2021-08-27T03:14:28.000Z"}},{"frontmatter":{"title":"","tags":["Server","Nodejs","Setup","Debian","Programming-Languages"]},"fields":{"slug":"/nodejs-setup-for-debian/","title":"Nodejs Setup for Debian","lastUpdated":"8/27/2021","lastUpdatedAt":"2021-08-27T03:14:28.000Z","gitCreatedAt":"2021-08-27T03:14:28.000Z"}},{"frontmatter":{"title":"","tags":["Nodejs","Tips","Programming-Languages"]},"fields":{"slug":"/nodejs-tips/","title":"Nodejs Tips","lastUpdated":"8/27/2021","lastUpdatedAt":"2021-08-27T03:14:28.000Z","gitCreatedAt":"2021-08-27T03:14:28.000Z"}}]}},"pageContext":{"tags":["Monorepo","Nodejs","Workflows"],"slug":"/nodejs-monorepo/","sidebarItems":[],"tagsGroups":[{"title":"API","type":"tag","url":"/tags/api/","items":[{"id":"9301e8df-c96d-5cfe-8660-769737bd75d1","title":"API Tokens","url":"/api-tokens/"}]},{"title":"Approvals","type":"tag","url":"/tags/approvals/","items":[{"id":"e50f2c8c-49bb-526a-8122-2e4035a30000","title":"旅行手续","url":"/travel-approvals/"}]},{"title":"Auth","type":"tag","url":"/tags/auth/","items":[{"id":"9301e8df-c96d-5cfe-8660-769737bd75d1","title":"API Tokens","url":"/api-tokens/"},{"id":"35084b73-ddec-52b5-8757-e9544cb16d01","title":"Auth Gateway","url":"/auth-gateway/"},{"id":"d57b59bc-2403-5e41-abe1-bbecd4e585d7","title":"Use ssh key for Git","url":"/git-sshkey/"}]},{"title":"Awesome","type":"tag","url":"/tags/awesome/","items":[{"id":"52b01f4c-b13c-5ff6-b24e-052d08fd419a","title":"Awesome Backup","url":"/awesome-backup/"},{"id":"2de8c7bb-0b13-5083-b115-7f9fa8d97b8d","title":"Awesome Benchmark","url":"/awesome-benchmark/"},{"id":"3d35cb5d-835e-5cac-8cb3-8e905deee78a","title":"Awesome Bookmarks","url":"/awesome-bookmarks/"},{"id":"417298f4-2abf-575f-a1ae-00fa0626e35d","title":"File Managers","url":"/awesome-file-managers/"},{"id":"a6adfb79-3cd4-562c-94fd-d8ed6add4575","title":"Awesome Gatsby","url":"/awesome-gatsby/"},{"id":"94bbfe8c-fc9d-5b73-a953-60a46e5f31b0","title":"Awesome Jackett Indexes","url":"/awesome-jackett-indexes/"},{"id":"613f5ed0-dc02-5ed0-99d0-1c1cdcc2feb0","title":"Awesome JS Date","url":"/awesome-js-date/"},{"id":"eb263e8b-df67-5ed9-86c6-89bfc8eafbbf","title":"Awesome Socials","url":"/awesome-socials/"},{"id":"c7d88771-ebff-58b1-9fc7-19f72cf7f320","title":"Awesome Static Site Generator","url":"/awesome-static-site-generator/"},{"id":"61209248-5546-5fa6-8125-05928392806e","title":"UI Tools","url":"/awesome-ui/"}]},{"title":"BBR","type":"tag","url":"/tags/bbr/","items":[{"id":"7fb35635-de12-57ea-b709-4da4d7318492","title":"Open BBR for Debian","url":"/open-bbr-for-debian/"}]},{"title":"BT","type":"tag","url":"/tags/bt/","items":[{"id":"ba6d5618-4aed-5b21-8617-3871728d5ab2","title":"Jackett Setup","url":"/jackett-setup/"},{"id":"775a63e3-fc0f-50a6-9640-92018c6c39f9","title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"}]},{"title":"Bash","type":"tag","url":"/tags/bash/","items":[{"id":"2de8c7bb-0b13-5083-b115-7f9fa8d97b8d","title":"Awesome Benchmark","url":"/awesome-benchmark/"},{"id":"017260cb-8985-53e7-a5f1-bbb4119518d6","title":"Linux Common Commands","url":"/linux-common-commands/"}]},{"title":"Benchmark","type":"tag","url":"/tags/benchmark/","items":[{"id":"2de8c7bb-0b13-5083-b115-7f9fa8d97b8d","title":"Awesome Benchmark","url":"/awesome-benchmark/"}]},{"title":"Caddy","type":"tag","url":"/tags/caddy/","items":[{"id":"b4086c65-d94e-59c1-9102-d5d1e3117712","title":"Caddy2 Setup for Debian","url":"/caddy2-setup-for-debian/"}]},{"title":"Commands","type":"tag","url":"/tags/commands/","items":[{"id":"017260cb-8985-53e7-a5f1-bbb4119518d6","title":"Linux Common Commands","url":"/linux-common-commands/"}]},{"title":"Date","type":"tag","url":"/tags/date/","items":[{"id":"613f5ed0-dc02-5ed0-99d0-1c1cdcc2feb0","title":"Awesome JS Date","url":"/awesome-js-date/"}]},{"title":"Debian","type":"tag","url":"/tags/debian/","items":[{"id":"b4086c65-d94e-59c1-9102-d5d1e3117712","title":"Caddy2 Setup for Debian","url":"/caddy2-setup-for-debian/"},{"id":"033b8124-830b-5a84-9092-993829fc8927","title":"Debian Server Setup","url":"/debian-server-setup/"},{"id":"36507a65-d134-5eaa-853f-e6807e7d1cf2","title":"Nodejs Setup for Debian","url":"/nodejs-setup-for-debian/"},{"id":"7fb35635-de12-57ea-b709-4da4d7318492","title":"Open BBR for Debian","url":"/open-bbr-for-debian/"},{"id":"775a63e3-fc0f-50a6-9640-92018c6c39f9","title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"},{"id":"32b20da1-586f-54e1-a44f-db541be8add7","title":"Rust Environment Setup for Debian","url":"/rust-enviroment-setup-for-debian/"},{"id":"dcb30b19-2dce-5c04-80b4-513f821df3ca","title":"Shadowsocks Rust Setup for Debian","url":"/shadowsocks-rust-setup-for-debian/"}]},{"title":"Docker","type":"tag","url":"/tags/docker/","items":[{"id":"5a62d49e-1328-5056-9563-cc281be201ed","title":"Docker Setup","url":"/docker-setup/"}]},{"title":"Downloads","type":"tag","url":"/tags/downloads/","items":[{"id":"775a63e3-fc0f-50a6-9640-92018c6c39f9","title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"},{"id":"27a1f2b1-0b0b-598e-9b41-c6429e4e2c52","title":"Youtube Download","url":"/youtube-download/"}]},{"title":"Editors","type":"tag","url":"/tags/editors/","items":[{"id":"7a7f4322-476d-54b1-8bf5-4a141e9dc246","title":"Vim Tips","url":"/vim-tips/"},{"id":"53a5be9a-c8b1-5569-8dd0-486c38f265cc","title":"VS Code Tips","url":"/vscode-tips/"}]},{"title":"Files","type":"tag","url":"/tags/files/","items":[{"id":"0faf02a9-8e92-54ef-a3af-97049ea7c55d","title":"Caddy File Server URL Scheme Test Title Long","url":"/caddy-file-server-url-scheme/"},{"id":"4d6e19c6-9fd0-51a1-9298-98ca585f9749","title":"FileBrowser Setup","url":"/filebrowser-setup/"},{"id":"20dbd254-dfd1-58f9-888f-c54241dd7193","title":"Rclone Setup","url":"/rclone-setup/"}]},{"title":"Front-End","type":"tag","url":"/tags/front-end/","items":[{"id":"e6a98431-d885-5794-b53d-0a34b6d5c178","title":"SVG","url":"/svg/"}]},{"title":"Git","type":"tag","url":"/tags/git/","items":[{"id":"d57b59bc-2403-5e41-abe1-bbecd4e585d7","title":"Use ssh key for Git","url":"/git-sshkey/"},{"id":"228074a4-4e09-5658-b1bd-c85511d3bfaa","title":"Git Tips","url":"/git-tips/"},{"id":"cb716dab-2c98-5107-bc6f-f04b742c34d6","title":"Git workflows","url":"/git-workflows/"}]},{"title":"Go","type":"tag","url":"/tags/go/","items":[{"id":"f91027b8-8b3c-5403-90eb-96dfccb61c3a","title":"Go Template Tips","url":"/go-template-tips/"}]},{"title":"Jackett","type":"tag","url":"/tags/jackett/","items":[{"id":"ba6d5618-4aed-5b21-8617-3871728d5ab2","title":"Jackett Setup","url":"/jackett-setup/"},{"id":"775a63e3-fc0f-50a6-9640-92018c6c39f9","title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"}]},{"title":"Javascript","type":"tag","url":"/tags/javascript/","items":[{"id":"613f5ed0-dc02-5ed0-99d0-1c1cdcc2feb0","title":"Awesome JS Date","url":"/awesome-js-date/"}]},{"title":"Jellyfin","type":"tag","url":"/tags/jellyfin/","items":[{"id":"7516c937-c23f-51df-bc76-400e4f49249f","title":"Jellyfin setup","url":"/jellyfin-setup/"}]},{"title":"Linux","type":"tag","url":"/tags/linux/","items":[{"id":"017260cb-8985-53e7-a5f1-bbb4119518d6","title":"Linux Common Commands","url":"/linux-common-commands/"}]},{"title":"Makefile","type":"tag","url":"/tags/makefile/","items":[{"id":"6b02959e-8d3d-5522-bb7b-cb78d7a840b2","title":"Makefile Templates","url":"/makefile-templates/"}]},{"title":"Medias","type":"tag","url":"/tags/medias/","items":[{"id":"1f6488fe-ed17-52fd-a030-784acfc01b46","title":"Bazarr Setup","url":"/bazarr-setup/"},{"id":"0faf02a9-8e92-54ef-a3af-97049ea7c55d","title":"Caddy File Server URL Scheme Test Title Long","url":"/caddy-file-server-url-scheme/"},{"id":"ba6d5618-4aed-5b21-8617-3871728d5ab2","title":"Jackett Setup","url":"/jackett-setup/"},{"id":"7516c937-c23f-51df-bc76-400e4f49249f","title":"Jellyfin setup","url":"/jellyfin-setup/"},{"id":"659592fa-1177-5c05-ab64-02b22fa1c4f1","title":"Radarr Setup","url":"/radarr-setup/"},{"id":"20dbd254-dfd1-58f9-888f-c54241dd7193","title":"Rclone Setup","url":"/rclone-setup/"},{"id":"fc3af7b0-4585-5843-b8e4-88cf59ad5dbc","title":"Sonarr Setup","url":"/sonarr-setup/"},{"id":"8b5c20b4-b410-51c7-b2a1-47a53a22e59c","title":"Subtitles","url":"/subtitles/"},{"id":"27a1f2b1-0b0b-598e-9b41-c6429e4e2c52","title":"Youtube Download","url":"/youtube-download/"}]},{"title":"Metube","type":"tag","url":"/tags/metube/","items":[{"id":"27a1f2b1-0b0b-598e-9b41-c6429e4e2c52","title":"Youtube Download","url":"/youtube-download/"}]},{"title":"Monorepo","type":"tag","url":"/tags/monorepo/","items":[{"id":"a884c7b9-e599-56a6-b300-b6a84a4e63cb","title":"Nodejs Monorepo","url":"/nodejs-monorepo/"}]},{"title":"Nodejs","type":"tag","url":"/tags/nodejs/","items":[{"id":"a884c7b9-e599-56a6-b300-b6a84a4e63cb","title":"Nodejs Monorepo","url":"/nodejs-monorepo/"},{"id":"36507a65-d134-5eaa-853f-e6807e7d1cf2","title":"Nodejs Setup for Debian","url":"/nodejs-setup-for-debian/"},{"id":"9ffb2e51-8c5d-5056-b845-eb1f675abb42","title":"Nodejs Tips","url":"/nodejs-tips/"}]},{"title":"Programming-Languages","type":"tag","url":"/tags/programming-languages/","items":[{"id":"f91027b8-8b3c-5403-90eb-96dfccb61c3a","title":"Go Template Tips","url":"/go-template-tips/"},{"id":"36507a65-d134-5eaa-853f-e6807e7d1cf2","title":"Nodejs Setup for Debian","url":"/nodejs-setup-for-debian/"},{"id":"9ffb2e51-8c5d-5056-b845-eb1f675abb42","title":"Nodejs Tips","url":"/nodejs-tips/"}]},{"title":"Proxies","type":"tag","url":"/tags/proxies/","items":[{"id":"2de8c7bb-0b13-5083-b115-7f9fa8d97b8d","title":"Awesome Benchmark","url":"/awesome-benchmark/"},{"id":"0faf02a9-8e92-54ef-a3af-97049ea7c55d","title":"Caddy File Server URL Scheme Test Title Long","url":"/caddy-file-server-url-scheme/"},{"id":"b4086c65-d94e-59c1-9102-d5d1e3117712","title":"Caddy2 Setup for Debian","url":"/caddy2-setup-for-debian/"},{"id":"7fb35635-de12-57ea-b709-4da4d7318492","title":"Open BBR for Debian","url":"/open-bbr-for-debian/"},{"id":"dcb30b19-2dce-5c04-80b4-513f821df3ca","title":"Shadowsocks Rust Setup for Debian","url":"/shadowsocks-rust-setup-for-debian/"}]},{"title":"Radarr","type":"tag","url":"/tags/radarr/","items":[{"id":"659592fa-1177-5c05-ab64-02b22fa1c4f1","title":"Radarr Setup","url":"/radarr-setup/"}]},{"title":"Rclone","type":"tag","url":"/tags/rclone/","items":[{"id":"20dbd254-dfd1-58f9-888f-c54241dd7193","title":"Rclone Setup","url":"/rclone-setup/"}]},{"title":"Rust","type":"tag","url":"/tags/rust/","items":[{"id":"32b20da1-586f-54e1-a44f-db541be8add7","title":"Rust Environment Setup for Debian","url":"/rust-enviroment-setup-for-debian/"},{"id":"dcb30b19-2dce-5c04-80b4-513f821df3ca","title":"Shadowsocks Rust Setup for Debian","url":"/shadowsocks-rust-setup-for-debian/"}]},{"title":"SSH","type":"tag","url":"/tags/ssh/","items":[{"id":"d57b59bc-2403-5e41-abe1-bbecd4e585d7","title":"Use ssh key for Git","url":"/git-sshkey/"}]},{"title":"SVG","type":"tag","url":"/tags/svg/","items":[{"id":"e6a98431-d885-5794-b53d-0a34b6d5c178","title":"SVG","url":"/svg/"}]},{"title":"Self-Hosted","type":"tag","url":"/tags/self-hosted/","items":[{"id":"1f6488fe-ed17-52fd-a030-784acfc01b46","title":"Bazarr Setup","url":"/bazarr-setup/"},{"id":"ba6d5618-4aed-5b21-8617-3871728d5ab2","title":"Jackett Setup","url":"/jackett-setup/"},{"id":"7516c937-c23f-51df-bc76-400e4f49249f","title":"Jellyfin setup","url":"/jellyfin-setup/"},{"id":"659592fa-1177-5c05-ab64-02b22fa1c4f1","title":"Radarr Setup","url":"/radarr-setup/"},{"id":"fc3af7b0-4585-5843-b8e4-88cf59ad5dbc","title":"Sonarr Setup","url":"/sonarr-setup/"},{"id":"27a1f2b1-0b0b-598e-9b41-c6429e4e2c52","title":"Youtube Download","url":"/youtube-download/"}]},{"title":"Server","type":"tag","url":"/tags/server/","items":[{"id":"0faf02a9-8e92-54ef-a3af-97049ea7c55d","title":"Caddy File Server URL Scheme Test Title Long","url":"/caddy-file-server-url-scheme/"},{"id":"b4086c65-d94e-59c1-9102-d5d1e3117712","title":"Caddy2 Setup for Debian","url":"/caddy2-setup-for-debian/"},{"id":"033b8124-830b-5a84-9092-993829fc8927","title":"Debian Server Setup","url":"/debian-server-setup/"},{"id":"36507a65-d134-5eaa-853f-e6807e7d1cf2","title":"Nodejs Setup for Debian","url":"/nodejs-setup-for-debian/"},{"id":"7fb35635-de12-57ea-b709-4da4d7318492","title":"Open BBR for Debian","url":"/open-bbr-for-debian/"},{"id":"775a63e3-fc0f-50a6-9640-92018c6c39f9","title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"}]},{"title":"Setup","type":"tag","url":"/tags/setup/","items":[{"id":"1f6488fe-ed17-52fd-a030-784acfc01b46","title":"Bazarr Setup","url":"/bazarr-setup/"},{"id":"b4086c65-d94e-59c1-9102-d5d1e3117712","title":"Caddy2 Setup for Debian","url":"/caddy2-setup-for-debian/"},{"id":"033b8124-830b-5a84-9092-993829fc8927","title":"Debian Server Setup","url":"/debian-server-setup/"},{"id":"5a62d49e-1328-5056-9563-cc281be201ed","title":"Docker Setup","url":"/docker-setup/"},{"id":"4d6e19c6-9fd0-51a1-9298-98ca585f9749","title":"FileBrowser Setup","url":"/filebrowser-setup/"},{"id":"ba6d5618-4aed-5b21-8617-3871728d5ab2","title":"Jackett Setup","url":"/jackett-setup/"},{"id":"7516c937-c23f-51df-bc76-400e4f49249f","title":"Jellyfin setup","url":"/jellyfin-setup/"},{"id":"36507a65-d134-5eaa-853f-e6807e7d1cf2","title":"Nodejs Setup for Debian","url":"/nodejs-setup-for-debian/"},{"id":"775a63e3-fc0f-50a6-9640-92018c6c39f9","title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"},{"id":"659592fa-1177-5c05-ab64-02b22fa1c4f1","title":"Radarr Setup","url":"/radarr-setup/"},{"id":"20dbd254-dfd1-58f9-888f-c54241dd7193","title":"Rclone Setup","url":"/rclone-setup/"},{"id":"32b20da1-586f-54e1-a44f-db541be8add7","title":"Rust Environment Setup for Debian","url":"/rust-enviroment-setup-for-debian/"},{"id":"dcb30b19-2dce-5c04-80b4-513f821df3ca","title":"Shadowsocks Rust Setup for Debian","url":"/shadowsocks-rust-setup-for-debian/"}]},{"title":"Shadowsocks","type":"tag","url":"/tags/shadowsocks/","items":[{"id":"dcb30b19-2dce-5c04-80b4-513f821df3ca","title":"Shadowsocks Rust Setup for Debian","url":"/shadowsocks-rust-setup-for-debian/"}]},{"title":"Social","type":"tag","url":"/tags/social/","items":[{"id":"eb263e8b-df67-5ed9-86c6-89bfc8eafbbf","title":"Awesome Socials","url":"/awesome-socials/"}]},{"title":"Sonarr","type":"tag","url":"/tags/sonarr/","items":[{"id":"fc3af7b0-4585-5843-b8e4-88cf59ad5dbc","title":"Sonarr Setup","url":"/sonarr-setup/"}]},{"title":"Static-Site-Generator","type":"tag","url":"/tags/static-site-generator/","items":[{"id":"c7d88771-ebff-58b1-9fc7-19f72cf7f320","title":"Awesome Static Site Generator","url":"/awesome-static-site-generator/"}]},{"title":"Subtitles","type":"tag","url":"/tags/subtitles/","items":[{"id":"1f6488fe-ed17-52fd-a030-784acfc01b46","title":"Bazarr Setup","url":"/bazarr-setup/"},{"id":"8b5c20b4-b410-51c7-b2a1-47a53a22e59c","title":"Subtitles","url":"/subtitles/"}]},{"title":"Templates","type":"tag","url":"/tags/templates/","items":[{"id":"0faf02a9-8e92-54ef-a3af-97049ea7c55d","title":"Caddy File Server URL Scheme Test Title Long","url":"/caddy-file-server-url-scheme/"},{"id":"f91027b8-8b3c-5403-90eb-96dfccb61c3a","title":"Go Template Tips","url":"/go-template-tips/"},{"id":"6b02959e-8d3d-5522-bb7b-cb78d7a840b2","title":"Makefile Templates","url":"/makefile-templates/"}]},{"title":"Tips","type":"tag","url":"/tags/tips/","items":[{"id":"b706ac9c-06b3-5c7e-ad2c-ef214740ece5","title":"Common URL Scheme","url":"/common-url-scheme/"},{"id":"228074a4-4e09-5658-b1bd-c85511d3bfaa","title":"Git Tips","url":"/git-tips/"},{"id":"f91027b8-8b3c-5403-90eb-96dfccb61c3a","title":"Go Template Tips","url":"/go-template-tips/"},{"id":"017260cb-8985-53e7-a5f1-bbb4119518d6","title":"Linux Common Commands","url":"/linux-common-commands/"},{"id":"9ffb2e51-8c5d-5056-b845-eb1f675abb42","title":"Nodejs Tips","url":"/nodejs-tips/"},{"id":"7a7f4322-476d-54b1-8bf5-4a141e9dc246","title":"Vim Tips","url":"/vim-tips/"},{"id":"53a5be9a-c8b1-5569-8dd0-486c38f265cc","title":"VS Code Tips","url":"/vscode-tips/"}]},{"title":"Torrents","type":"tag","url":"/tags/torrents/","items":[{"id":"ba6d5618-4aed-5b21-8617-3871728d5ab2","title":"Jackett Setup","url":"/jackett-setup/"},{"id":"775a63e3-fc0f-50a6-9640-92018c6c39f9","title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"}]},{"title":"Travel","type":"tag","url":"/tags/travel/","items":[{"id":"e50f2c8c-49bb-526a-8122-2e4035a30000","title":"旅行手续","url":"/travel-approvals/"}]},{"title":"URL","type":"tag","url":"/tags/url/","items":[{"id":"b706ac9c-06b3-5c7e-ad2c-ef214740ece5","title":"Common URL Scheme","url":"/common-url-scheme/"}]},{"title":"VS Code","type":"tag","url":"/tags/vs-code/","items":[{"id":"53a5be9a-c8b1-5569-8dd0-486c38f265cc","title":"VS Code Tips","url":"/vscode-tips/"}]},{"title":"Vim","type":"tag","url":"/tags/vim/","items":[{"id":"7a7f4322-476d-54b1-8bf5-4a141e9dc246","title":"Vim Tips","url":"/vim-tips/"}]},{"title":"Workflows","type":"tag","url":"/tags/workflows/","items":[{"id":"cb716dab-2c98-5107-bc6f-f04b742c34d6","title":"Git workflows","url":"/git-workflows/"},{"id":"6b02959e-8d3d-5522-bb7b-cb78d7a840b2","title":"Makefile Templates","url":"/makefile-templates/"},{"id":"a884c7b9-e599-56a6-b300-b6a84a4e63cb","title":"Nodejs Monorepo","url":"/nodejs-monorepo/"}]},{"title":"Youtube","type":"tag","url":"/tags/youtube/","items":[{"id":"27a1f2b1-0b0b-598e-9b41-c6429e4e2c52","title":"Youtube Download","url":"/youtube-download/"}]},{"title":"qBittorrent","type":"tag","url":"/tags/q-bittorrent/","items":[{"id":"775a63e3-fc0f-50a6-9640-92018c6c39f9","title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"}]}]}},
    "staticQueryHashes": ["1087736497","2613150313","3086464373","3495835395"]}