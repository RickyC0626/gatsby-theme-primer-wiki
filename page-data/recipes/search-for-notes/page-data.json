{"componentChunkName":"component---packages-theme-src-templates-post-query-js","path":"/recipes/search-for-notes/","result":{"data":{"mdx":{"id":"ac174d7e-1a12-555e-a3bf-9c8efd57ed9e","tableOfContents":{"items":[{"url":"#search-for-notes","title":"Search for Notes"}]},"fields":{"slug":"/recipes/search-for-notes/"},"frontmatter":{"title":"","description":""},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"search-for-notes\"\n  }, \"Search for Notes\"), mdx(\"p\", null, \"This #recipe contains tips on how to leverage VS Code search features.\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dev/todo/\",\n    \"title\": \"todo\"\n  }, \"[[todo]]\"), \" Add more VS Code search power user tips here\"), mdx(\"p\", null, \"Run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Cmd\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"P\"), \" ( \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Ctrl\"), \" +  \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"P\"), \" on Windows ) and type a name (like 'issues') to find a note associated with that name (like 'known-issues.md' )\"), mdx(\"p\", null, \"Run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Cmd\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Shift\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"F\"), \" ( \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Ctrl\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Shift\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"F\"), \" on Windows ) and type a word (like 'links') to find all the notes that contain that term.\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"todo\"\n  }, \"Todo\"), mdx(\"p\", null, \"Features belong on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dev/roadmap/\",\n    \"title\": \"roadmap\"\n  }, \"[[roadmap]]\"), \".\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Write out Roadmap\", mdx(\"ul\", {\n    parentName: \"li\",\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Isolate tasks for MLH fellows\"))), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Create better structure for Recipes\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Connect to folks at GitHub\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Learn more about VS Code Extension APIs\", mdx(\"ul\", {\n    parentName: \"li\",\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Workspace fs/events\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Reloading changes from outside vscode\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Expanding, editable snippets\")))), mdx(\"p\", null, \"For more things to do, check backlinks for Pages that annotate \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dev/todo/\",\n    \"title\": \"todo\"\n  }, \"[[todo]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/dev/todo/","title":"Todo"}}],"inboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"creating-new-notes\"\n  }, \"Creating New Notes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Write out a new \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[wikilink]]\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Cmd\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Click\"), \" to create a new file and enter it.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For keyboard navigation, use the 'Follow Definition' key \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"F12\"), \" (or \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://code.visualstudio.com/docs/getstarted/keybindings\"\n  }, \"remap key binding\"), \" to something more ergonomic)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Cmd\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Shift\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"P\"), \" (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Ctrl\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Shift\"), \" + \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"P\"), \" for Windows), execute \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Foam: Create New Note\"), \" and enter a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Title Case Name\"), \" to create \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Title Case Name.md\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add a keyboard binding to make creating new notes easier.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/features/note-templates/\",\n    \"title\": \"note-templates\"\n  }, \"[[note-templates]]\"), \" used by this command can be customized.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You shouldn't worry too much about categorizing your notes. You can always \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/recipes/search-for-notes/\",\n    \"title\": \"search-for-notes\"\n  }, \"[[search-for-notes]]\"), \", and explore them using the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/features/graph-visualisation/\",\n    \"title\": \"graph-visualisation\"\n  }, \"[[graph-visualisation]]\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/features/creating-new-notes/","title":"Creating New Notes"}}]}},"pageContext":{"slug":"/recipes/search-for-notes/","editUrl":"https://github.com/theowenyoung/gatsby-theme-primer-wiki/edit/master/example/content/recipes/search-for-notes.md","contributors":[]}},"staticQueryHashes":["2426452686","3309604493","900254191"]}