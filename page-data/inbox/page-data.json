{"componentChunkName":"component---packages-theme-src-templates-post-query-js","path":"/inbox/","result":{"data":{"mdx":{"id":"03272e1f-7b68-5289-a3a2-ac75729ecdf3","tableOfContents":{"items":[{"url":"#inbox","title":"Inbox"}]},"fields":{"slug":"/inbox/"},"frontmatter":{"title":"","description":""},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"inbox\"\n  }, \"Inbox\"), mdx(\"p\", null, \"Uncategorised thoughts, to be added\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Release notes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Markdown Preview\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It's possible to customise the markdown preview styling. \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Maybe make it use local foam workspace styles for live preview of the site??\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=bierner.markdown-preview-github-styles\"\n  }, \"https://marketplace.visualstudio.com/items?itemName=bierner.markdown-preview-github-styles\")))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use VS Code \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=vsls-contrib.codetour\"\n  }, \"CodeTour\"), \" for onboarding\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Investigate other similar extensions:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=ryanmcalister.Unotes\"\n  }, \"Unotes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/svsool/vscode-memo\"\n  }, \"vscode-memo\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jevakallio/gistpad/tree/master/src/repos/wiki\"\n  }, \"gistpad wiki\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Open in Foam\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When you want to open a Foam published website in your own VS Code, we could have a \\\"Open in Foam\\\" link that opens the link in VS Code via a url binding (if possible), downloads the github repo locally, and opens it as a Foam workspace.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Every Foam could have a different theme even in the editor, so you'll see it like they see it\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UI and layout design of your workspace can become a thing\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"VS Code Notebooks API\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://code.visualstudio.com/api/extension-guides/notebook\"\n  }, \"https://code.visualstudio.com/api/extension-guides/notebook\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Future architecture\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Could we do publish-related settings as a pre-push git hook, e.g. generating footnote labels\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Running them on GitHub Actions to edit stuff as it comes in\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ideally, we shouldn't have to touch files, should be just markdown\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Looking at the errors/warnings/output panes makes me think, what kind of automated quality tools could we write.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Deduplication, finding similarities...\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Thought Debugger?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Knowledge Debugger?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Janitor? Gardener?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Foam Compiler?\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Should support Netlify deploys out of the box\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Foam should tick at the same frequency as your brain, and the Foam graph you build should match the mental model you have in your head, making navigation effortless.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Maps have persistent topologies. As the graph grows, you should be able to visualise where an idea belongs. Maybe a literal map? And island? A DeckGL visualisation?\")))), mdx(\"p\", null, \"Testing: This file is served from the /docs directory.\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[]}},"pageContext":{"slug":"/inbox/","editUrl":"https://github.com/theowenyoung/gatsby-theme-primer-wiki/edit/master/example/content/inbox.md","contributors":[]}},"staticQueryHashes":["2426452686","3309604493","900254191"]}