{
    "componentChunkName": "component---theme-src-templates-post-query-js",
    "path": "/programming-languages/rust/rust-libraries/rust-libraries/",
    "result": {"data":{"mdx":{"id":"1f14fbce-6fe6-5ef0-95b9-17e5969eea1d","tableOfContents":{"items":[{"url":"#rust-libraries","title":"Rust libraries","items":[{"url":"#cli","title":"CLI"},{"url":"#web","title":"Web"},{"url":"#wasm","title":"WASM"},{"url":"#gui","title":"GUI"},{"url":"#db","title":"DB"},{"url":"#graphics","title":"Graphics"},{"url":"#games","title":"Games"},{"url":"#test","title":"Test"},{"url":"#error","title":"Error"},{"url":"#io","title":"IO"},{"url":"#ui","title":"UI"},{"url":"#crypto","title":"Crypto"},{"url":"#linux","title":"Linux"},{"url":"#ml","title":"ML"},{"url":"#macos","title":"macOS"},{"url":"#macros","title":"Macros"},{"url":"#math","title":"Math"},{"url":"#other","title":"Other"},{"url":"#cargo-plugins","title":"Cargo Plugins"},{"url":"#links","title":"Links"}]}]},"fields":{"title":"Rust libraries","slug":"/programming-languages/rust/rust-libraries/rust-libraries/","url":"https://wiki.demo.owenyoung.com/programming-languages/rust/rust-libraries/rust-libraries/","editUrl":"https://github.com/theowenyoung/gatsby-theme-primer-wiki/tree/main/example/content/programming-languages/rust/rust-libraries/rust-libraries.md","lastUpdatedAt":"2021-08-21T19:30:25.000Z","lastUpdated":"8/21/2021","gitCreatedAt":"2021-08-13T21:12:02.000Z"},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":[],"date":null,"dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"rust-libraries\"\n  }, \"Rust libraries\"), mdx(\"h2\", {\n    \"id\": \"cli\"\n  }, \"CLI\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/agnipau/slap\"\n  }, \"slap\"), \" - Painless shell argument parsing and dependency check.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mitsuhiko/dialoguer\"\n  }, \"dialoguer\"), \" - Rust utility library for nice command line prompts and similar things.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/iqlusioninc/abscissa\"\n  }, \"Abscissa\"), \" - Microframework for building Rust applications (either CLI tools or network/web services).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/google/argh\"\n  }, \"Argh\"), \" - Opinionated Derive-based argument parser optimized for code size.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/fdehau/tui-rs\"\n  }, \"tui-rs\"), \" - Build terminal user interfaces and dashboards using Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/TeXitoi/structopt\"\n  }, \"StructOpt\"), \" - Parse command line arguments by defining a struct.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/RazrFalcon/pico-args\"\n  }, \"pico-args\"), \" - Ultra simple CLI arguments parser.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/BurntSushi/termcolor\"\n  }, \"termcolor\"), \" - Cross platform terminal colors for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Nukesor/comfy-table\"\n  }, \"Comfy-table\"), \" - Library for building beautiful terminal tables with automatic content wrapping.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jam1garner/owo-colors\"\n  }, \"owo-colors\"), \" - Zero-allocation no_std-compatible zero-cost way to add color to your Rust terminal.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/VincentFoulon80/console_engine\"\n  }, \"Console Engine\"), \" - Simple terminal framework to draw things and manage user input.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mitsuhiko/console\"\n  }, \"console\"), \" - Library for Rust that provides access to various terminal features so you can build nicer looking command line interfaces.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Canop/termimad\"\n  }, \"termimad\"), \" - Library to display rich (Markdown) snippets and texts in a rust terminal application.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mitsuhiko/indicatif\"\n  }, \"indicatif\"), \" - Rust library for indicating progress in command line applications to users.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/matklad/xshell\"\n  }, \"xshell\"), \" - Provides a set of cross-platform utilities for writing ergonomic \\\"bash\\\" scripts.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/elastio/devx\"\n  }, \"devx\"), \" - Collection of utilities for writing your own dev scripts.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/kkawakam/rustyline\"\n  }, \"RustyLine\"), \" - Readline Implementation in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ksk001100/seahorse\"\n  }, \"seahorse\"), \" - Minimal CLI framework written in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ipetkov/conch-parser\"\n  }, \"conch-parser\"), \" - Rust library for parsing Unix shell commands.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/devashishdxt/cli-table\"\n  }, \"cli-table\"), \" - Rust crate for printing tables on command line.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nathom/youchoose\"\n  }, \"youchoose\"), \" - Lightweight terminal menu for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/blyxxyz/lexopt\"\n  }, \"Lexopt\"), \" - Minimalist pedantic command line parser.\")), mdx(\"h2\", {\n    \"id\": \"web\"\n  }, \"Web\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/salvo-rs/salvo\"\n  }, \"Salvo\"), \" - Simple Rust web framework.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ntex-rs/ntex\"\n  }, \"ntex\"), \" - Framework for composable networking services.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sagebind/isahc\"\n  }, \"Isahc\"), \" - Practical HTTP client that is fun to use.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/http-rs/tide-acme\"\n  }, \"tide-acme\"), \" - Automatic HTTPS certificates for Tide, via Let's Encrypt and ACME tls-alpn-01 challenges.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/eaze/preroll\"\n  }, \"preroll\"), \" - Easy boilerplate utilities for Rust http services which use async-std, Tide, Surf, and friends. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://twitter.com/Fishrock123/status/1374072772737998848\"\n  }, \"Tweet\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/routerify/routerify\"\n  }, \"Routerify\"), \" - Provides a lightweight, idiomatic, composable and modular router implementation with middleware support for the Rust HTTP library hyper.rs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/hyperium/h2\"\n  }, \"H2\"), \" - Tokio aware, HTTP/2.0 client & server implementation for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/trezm/Thruster\"\n  }, \"Thruster\"), \" - Fast, middleware based, web framework written in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/actix/actix-web\"\n  }, \"actix web\"), \" - Small, pragmatic, and extremely fast rust web framework (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/secretkeysio/jelly-actix-web-starter\"\n  }, \"Jelly - Starter template for actix-web projects\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/koute/stdweb\"\n  }, \"stdweb\"), \" - Standard library for the client-side Web.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/David-OConnor/seed\"\n  }, \"Seed\"), \" - Rust framework for creating web apps.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-net-web/tide\"\n  }, \"Tide\"), \" - Modular web framework.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/http-rs/tide-websockets\"\n  }, \"Tide WebSockets\"), \" - Experimental websockets handler for tide based on async-tungstenite.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/1tgr/rust-websocket-lite\"\n  }, \"websocket-lite\"), \" - Fast, low-overhead WebSocket client.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rustwasm/gloo\"\n  }, \"Gloo\"), \" - Toolkit for building fast, reliable Web applications and libraries with Rust and Wasm.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/seanmonstar/reqwest\"\n  }, \"reqwest\"), \" - Easy and powerful Rust HTTP Client.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/gotham-rs/gotham\"\n  }, \"gotham\"), \" - Flexible web framework that promotes stability, safety, security and speed.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/seanmonstar/warp\"\n  }, \"warp\"), \" - Super-easy, composable, web server framework for warp speeds.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/hyperium/http\"\n  }, \"HTTP\"), \" - Rust HTTP types.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/seanmonstar/httparse\"\n  }, \"httparse\"), \" - Push parser for the HTTP 1.x protocol in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/algesten/ureq\"\n  }, \"ureq\"), \" - Minimal request library in rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/djc/mendes\"\n  }, \"Mendes\"), \" - Rust web toolkit for impatient perfectionists.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Hexilee/roa\"\n  }, \"Roa\"), \" - Async web framework inspired by koajs, lightweight but powerful.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/kdy1/rweb\"\n  }, \"rweb\"), \" - Yet another web server framework for rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/carllerche/tower-web\"\n  }, \"Tower Web\"), \" - Web framework for Rust with a focus on removing boilerplate.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/http-rs/http-types\"\n  }, \"http-types\"), \" - Common types for HTTP operations.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/oxidecomputer/dropshot\"\n  }, \"Dropshot\"), \" - General-purpose crate for exposing REST APIs from a Rust program.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mild-times/localghost\"\n  }, \"localghost\"), \" - Ergonomic Rust bindings to the Web platform.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ctz/hyper-rustls\"\n  }, \"hyper-rustls\"), \" - Integration between the rustls TLS stack and the hyper HTTP library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/CleverCloud/biscuit-rust\"\n  }, \"biscuit-rust\"), \" - Rust implementation of the Biscuit authorization token.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/openmls/openmls\"\n  }, \"OpenMLS\"), \" - Rust implementation of the Messaging Layer Security (MLS) protocol.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tower-rs/tower\"\n  }, \"Tower\"), \" - Library of modular and reusable components for building robust networking clients and servers.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/arthurkhlghatyan/gql-client-rs\"\n  }, \"gql_client\"), \" - Minimal GraphQL client for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/obmarg/cynic\"\n  }, \"Cynic\"), \" - Bring your own types GraphQL client library for Rust. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://cynic-rs.dev/\"\n  }, \"Docs\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dac-gmbh/hyperdrive\"\n  }, \"Hyperdrive\"), \" - Declarative HTTP request routing, guarding and decoding.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/EmbarkStudios/tame-oidc\"\n  }, \"tame-oidc\"), \" - Small OAuth crate that follows the sans-io approach.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Keats/jsonwebtoken\"\n  }, \"jsonwebtoken\"), \" - JWT lib in rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/MoonZoon/MoonZoon\"\n  }, \"MoonZoon\"), \" - Rust Fullstack Framework. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://blog.abor.dev/p/moonzoon\"\n  }, \"Podcast\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=27155639\"\n  }, \"HN\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/EmbarkStudios/tame-oauth\"\n  }, \"tame-oauth\"), \" - Small OAuth crate that follows the sans-io approach.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/trillium-rs/trillium\"\n  }, \"Trillium\"), \" - Composable toolkit for building web applications with async rust. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://trillium.rs/\"\n  }, \"Docs\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sycamore-rs/sycamore\"\n  }, \"Sycamore\"), \" - Reactive DOM library for Rust in WASM.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tokio-rs/axum\"\n  }, \"Axum\"), \" - Ergonomic and modular web framework built with Tokio, Tower, and Hyper. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://tokio.rs/blog/2021-07-announcing-axum\"\n  }, \"Article\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.reddit.com/r/rust/comments/ouqfg3/new_tokio_blog_post_announcing_axum_web_framework/\"\n  }, \"Reddit\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://lobste.rs/s/rfh70t/announcing_axum\"\n  }, \"Lobsters\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/arctic-hen7/perseus\"\n  }, \"Perseus\"), \" - High-level frontend development framework for Rust with full support for SSR and SSG.\")), mdx(\"h2\", {\n    \"id\": \"wasm\"\n  }, \"WASM\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rbalicki2/smithy\"\n  }, \"Smithy\"), \" - Framework for building WebAssembly apps in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rustwasm/walrus\"\n  }, \"Walrus\"), \" - WebAssembly transformation library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/yewstack/yew\"\n  }, \"yew\"), \" - Modern Rust framework inspired by Elm and React for creating multi-threaded frontend apps with WebAssembly.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/chinedufn/percy\"\n  }, \"Percy\"), \" - Modular toolkit for building isomorphic web apps with Rust + WebAssembly.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/fitzgen/dodrio\"\n  }, \"Dodrio\"), \" - Fast, bump-allocated virtual DOM library for Rust and WebAssembly.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/watt\"\n  }, \"Watt\"), \" - Runtime for executing Rust procedural macros compiled as WebAssembly.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/utkarshkukreti/draco\"\n  }, \"Draco\"), \" - Rust library to build client side web applications with Web Assembly.\")), mdx(\"h2\", {\n    \"id\": \"gui\"\n  }, \"GUI\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/emilk/egui\"\n  }, \"Egui\"), \" - Immediate mode GUI written in Rust, made for WASM.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-skia/rust-skia\"\n  }, \"rust-skia\"), \" - Safe Skia Bindings for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/aclysma/skulpin\"\n  }, \"skulpin\"), \" - Easy option for drawing hardware-accelerated 2D by combining vulkan and skia.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ryanmcgrath/alchemy\"\n  }, \"Alchemy\"), \" - Experimental Rust GUI Framework, backed by native widgets on each platform it supports.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bodil/vgtk/\"\n  }, \"vgtk\"), \" - Declarative desktop UI framework for Rust built on GTK and Gtk-rs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/flutter-rs/flutter-rs\"\n  }, \"flutter-rs\"), \" - Build beautiful desktop apps with flutter and rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/linebender/piet\"\n  }, \"Piet\"), \" - Abstraction for 2D graphics. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://www.cmyr.net/blog/piet-text-work.html\"\n  }, \"Piet text layout API\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/linebender/piet-gpu\"\n  }, \"piet-gpu\"), \" - Experimental GPU compute-centric 2D renderer.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Srinivasa314/alcro\"\n  }, \"Alcro\"), \" - Small library to build desktop apps using rust and modern web technologies.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/cytecbg/gpucanvas\"\n  }, \"gpucanvas\"), \" - Antialiased 2D vector drawing library written in rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/MoAlyousef/fltk-rs\"\n  }, \"fltk-rs\"), \" - Rust bindings for the FLTK GUI library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Grokmoo/thyme\"\n  }, \"Thyme\"), \" - Themable Immediate Mode User Interface Toolkit in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sixtyfpsui/sixtyfps\"\n  }, \"SixtyFPS\"), \" - Toolkit to efficiently develop fluid graphical user interfaces for any display: embedded devices and desktop applications. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.sixtyfps.io/\"\n  }, \"Web\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=24919571\"\n  }, \"HN\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/raphlinus/crochet\"\n  }, \"Crochet\"), \" - Explorations in reactive UI patterns.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/kas-gui/kas\"\n  }, \"KAS GUI\"), \" - ToolKit Abstraction System. General-purpose GUI toolkit in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/RazrFalcon/tiny-skia\"\n  }, \"tiny-skia\"), \" - Tiny Skia subset ported to Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/vislyhq/stretch\"\n  }, \"Stretch\"), \" - High performance flexbox implementation written in rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/PsichiX/raui\"\n  }, \"RAUI\"), \" - Rust implementation of Renderer Agnostic User Interface.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/linebender/spline\"\n  }, \"Spline\"), \" - Implements a new spline designed and optimized for interactive design of 2D curves.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/fintelia/terra\"\n  }, \"Terra\"), \" - Large scale terrain rendering library written in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/glowcoil/ochre\"\n  }, \"Ochre\"), \" - Highly portable GPU-accelerated vector graphics. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://rustfest.global/session/23-ochre-highly-portable-gpu-accelerated-vector-graphics/\"\n  }, \"Talk\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/alexheretic/glyph-brush\"\n  }, \"glyph-brush\"), \" - Fast GPU cached text rendering.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/QuantumBadger/Speedy2D\"\n  }, \"Speedy2D\"), \" - Rust library for hardware accelerated drawing of 2D shapes, images, and text, with an easy to use API.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/skui-org/skui\"\n  }, \"Skui\"), \" - Skia-based C++ UI framework.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/snuk182/nuklear-rust\"\n  }, \"nuklear-rust\"), \" - Bindings to the Nuklear 2D immediate GUI library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/geom3trik/tuix\"\n  }, \"Tuix\"), \" - Cross-platform GUI toolkit written in Rust.\")), mdx(\"h2\", {\n    \"id\": \"db\"\n  }, \"DB\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/launchbadge/sqlx\"\n  }, \"SQLx\"), \" - Rust SQL Toolkit.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/diesel-rs/diesel\"\n  }, \"Diesel\"), \" - Safe, extensible ORM and Query Builder.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nolanderc/rust-postgres-query\"\n  }, \"postgres-query\"), \" - Write and execute SQL queries with ease.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rusqlite/rusqlite\"\n  }, \"Rusqlite\"), \" - Ergonomic bindings to SQLite for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/weiznich/wundergraph\"\n  }, \"Wundergraph\"), \" - Provides a platform to easily expose your database through a GraphQL interface.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/lucis-fluxum/bolt-rs\"\n  }, \"bolt-rs\"), \" - Communicate with Bolt-compatible graph databases in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ballista-compute/sqlparser-rs\"\n  }, \"sqlparser-rs\"), \" - Extensible SQL Lexer and Parser for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/seladb/pickledb-rs\"\n  }, \"PickleDB\"), \" - Lightweight and simple key-value store written in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/antoyo/tql\"\n  }, \"TQL\"), \" - Compile-time ORM, inspired by Django ORM, written in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/supabase/postgrest-rs\"\n  }, \"postgrest-rs\"), \" - PostgREST client-side library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bh1xuw/rust-rocks\"\n  }, \"RustRocks\"), \" - RocksDB binding for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/andresilva/cask\"\n  }, \"Cask\"), \" - Fast key-value store written in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/cloudfuse-io/buzz-rust\"\n  }, \"Buzz Rust\"), \" - Serverless query engine.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Fullstop000/wickdb\"\n  }, \"wickdb\"), \" - Pure Rust LSM-tree based embedded storage engine.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/lostatc/acid-store\"\n  }, \"acid-store\"), \" - Library for secure, deduplicated, transactional, and verifiable data storage.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/SeaQL/sea-query\"\n  }, \"SeaQuery\"), \" - Database agnostic runtime query builder for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sushrut141/DharmaDB\"\n  }, \"DharmaDB\"), \" - Persistent, fault tolerant key-value store written in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/matthunz/typed-sql\"\n  }, \"typed-sql\"), \" - Zero-cost ORM with fast compile times. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.reddit.com/r/rust/comments/njbt9s/announcing_typedsql_beta_zerocost_orm_with_fast/\"\n  }, \"Reddit\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nomic-io/merk\"\n  }, \"merk\"), \" - High-performance Merkle key/value store.\")), mdx(\"h2\", {\n    \"id\": \"graphics\"\n  }, \"Graphics\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/not-fl3/miniquad\"\n  }, \"Miniquad\"), \" - Safe and cross-platform rendering library focused on portability and low-end platforms support.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/gfx-rs/gfx\"\n  }, \"gfx\"), \" - High-performance, bindless graphics API. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://gfx-rs.github.io/2020/11/16/big-picture.html\"\n  }, \"Gfx-Rs: The Big Picture\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/gfx-rs/rspirv\"\n  }, \"rspirv\"), \" - Rust implementation of SPIR-V module processing functionalities.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rustgd/cgmath\"\n  }, \"cgmath-rs\"), \" - Linear algebra and mathematics library for computer graphics.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/maplant/aljabar\"\n  }, \"aljabar\"), \" - Extremely generic linear algebra library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jrmuizel/raqote\"\n  }, \"raqote\"), \" - Pure Rust 2D Graphics Library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sebcrozet/kiss3d\"\n  }, \"Kiss3d\"), \" - Keep it simple, stupid 3d graphics engine for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rustsim/ncollide\"\n  }, \"ncollide\"), \" - 2 and 3-dimensional collision detection library in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Gekkio/imgui-rs\"\n  }, \"imgui-rs\"), \" - Rust bindings for dear imgui.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/phaazon/luminance-rs\"\n  }, \"luminance\"), \" - Type-safe, type-level and stateless Rust graphics framework.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/SergiusIW/gate\"\n  }, \"Gate\"), \" - Specialized 2D game library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/termhn/ultraviolet\"\n  }, \"ultraviolet\"), \" - Wide linear algebra crate for games and graphics.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/parasyte/pixels\"\n  }, \"pixels\"), \" - Tiny hardware-accelerated pixel frame buffer.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/linebender/kurbo\"\n  }, \"kurbo\"), \" - Rust library for manipulating curves.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Rust-SDL2/rust-sdl2\"\n  }, \"Rust-SDL2\"), \" - SDL2 bindings for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/femtovg/femtovg\"\n  }, \"femtovg\"), \" - Antialiased 2D vector drawing library written in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/grovesNL/glow\"\n  }, \"glow\"), \" - Set of bindings to run GL anywhere and avoid target-specific code.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/EmbarkStudios/rust-gpu\"\n  }, \"Rust GPU\"), \" - Making Rust a first-class language and ecosystem for GPU code. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=24858172\"\n  }, \"HN\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=24870039\"\n  }, \"HN 2\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/LykenSol/rust-gpu-shadertoys\"\n  }, \"Example Shaders\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/BVE-Reborn/rend3\"\n  }, \"Rend3\"), \" - Easy to use, customizable, efficient 3D renderer library built on wgpu.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/PistonDevelopers/conrod\"\n  }, \"Conrod\"), \" - Easy-to-use, 2D GUI library written entirely in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/flmng0/peach\"\n  }, \"Peach\"), \" - Processing-esque sandboxing framework for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mikialex/rendiation\"\n  }, \"Rendiation\"), \" - Group of crates that can be composed to impl graphics project.\")), mdx(\"h2\", {\n    \"id\": \"games\"\n  }, \"Games\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/17cupsofcoffee/tetra\"\n  }, \"Tetra\"), \" - Simple 2D game framework written in Rust.\")), mdx(\"h2\", {\n    \"id\": \"test\"\n  }, \"Test\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nrxus/faux\"\n  }, \"faux\"), \" - Traitless Mocking Library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/fcsonline/drill\"\n  }, \"Drill\"), \" - HTTP load testing application written in Rust inspired by Ansible syntax.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tokio-rs/loom\"\n  }, \"Loom\"), \" - Concurrency permutation testing tool for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/lipanski/mockito\"\n  }, \"Mockito\"), \" - HTTP mocking for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/gnzlbg/ctest\"\n  }, \"ctest\"), \" - Automated testing of FFI bindings in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/asomers/mockall\"\n  }, \"Mockall\"), \" - Powerful mock object library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/la10736/rstest\"\n  }, \"rstest\"), \" - Uses procedural macros to help you on writing fixtures and table-based tests.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/AltSysrq/proptest\"\n  }, \"Proptest\"), \" - Hypothesis-like property testing for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/frewsxcv/cargo-all-features\"\n  }, \"cargo-all-features\"), \" - Cargo subcommand to build and test all feature flag combinations.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/loiclec/fuzzcheck-rs\"\n  }, \"Fuzzcheck\"), \" - Structure-aware, in-process, coverage-guided, evolutionary fuzzing engine for Rust functions.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/aaronabramov/k9\"\n  }, \"k9\"), \" - Rust Testing Library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-analyzer/expect-test\"\n  }, \"expect-test\"), \" - Minimalistic snapshot testing for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/BurntSushi/quickcheck\"\n  }, \"QuickCheck\"), \" - Automated property based testing for Rust (with shrinking).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/alexliesenfeld/httpmock\"\n  }, \"httpmock\"), \" - HTTP mocking library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bheisler/iai\"\n  }, \"iai\"), \" - Experimental One-shot Benchmark Framework in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/frondeus/test-case\"\n  }, \"Test Case\"), \" - Rust procedural macro attribute for adding test cases easily.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jakubadamw/rutenspitz\"\n  }, \"rutenspitz\"), \" - Procedural macro to be used for testing/fuzzing stateful models against a semantically equivalent but obviously correct implementation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/colin-kiegel/rust-pretty-assertions\"\n  }, \"Pretty Assertions\"), \" - Overwrite \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"assert_eq!\"), \" with a drop-in replacement, adding a colorful diff.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/awslabs/shuttle\"\n  }, \"Shuttle\"), \" - Library for testing concurrent Rust code.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/KSXGitHub/build-fs-tree\"\n  }, \"build-fs-tree\"), \" - Generate a filesystem tree from a macro or a YAML tree.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-fuzz/afl.rs\"\n  }, \"afl.rs\"), \" - Fuzzing Rust code with AFLplusplus.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/yoshuawuyts/heckcheck\"\n  }, \"heckcheck\"), \" - Heckin small test generator.\")), mdx(\"h2\", {\n    \"id\": \"error\"\n  }, \"Error\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/yaahc/eyre\"\n  }, \"eyre\"), \" - Trait object based error handling type for easy idiomatic error handling and reporting in Rust applications.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/thiserror\"\n  }, \"derive(Error)\"), \" - Provides a convenient derive macro for the standard library's std::error::Error trait.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/withoutboats/fehler\"\n  }, \"Fehler\"), \" - Library to add support for \\\"throwing functions\\\" to Rust through procedural macros.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-lang-nursery/failure\"\n  }, \"failure\"), \" - Designed to make it easier to manage errors in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/anyhow\"\n  }, \"Anyhow\"), \" - Flexible concrete Error type built on std::error::Error.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/shepmaster/snafu\"\n  }, \"SNAFU\"), \" - Easily assign underlying errors into domain-specific errors while adding context.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jam1garner/some-error\"\n  }, \"some-error\"), \" - Library for creating and using anonymous sum types as errors.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/azriel91/srcerr\"\n  }, \"Srcerr\"), \" - User friendly errors from source data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/yoshuawuyts/human-panic\"\n  }, \"human-panic\"), \" - Panic messages for humans.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jamesmunns/panic-persist\"\n  }, \"panic-persist\"), \" - Writes panic messages to a section of RAM.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mitsuhiko/better-panic\"\n  }, \"better-panic\"), \" - Gives you pretty backtraces for panics.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zkat/thisdiagnostic\"\n  }, \"thisdiagnostic\"), \" - Rust library for adding rich diagnostic metadata to errors.\")), mdx(\"h2\", {\n    \"id\": \"io\"\n  }, \"IO\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tokio-rs/mio\"\n  }, \"Mio\"), \" - Metal IO library.\")), mdx(\"h2\", {\n    \"id\": \"ui\"\n  }, \"UI\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/hecrj/iced\"\n  }, \"Iced\"), \" - Cross-platform GUI library for Rust focused on simplicity and type-safety. Inspired by Elm.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/maps4print/azul\"\n  }, \"Azul\"), \" - Desktop GUI Framework.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/linebender/druid\"\n  }, \"Druid\"), \" - Data-first Rust-native UI design toolkit. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://www.cmyr.net/blog/druid-architecture.html\"\n  }, \"Some reflections on the Druid architecture\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://www.cmyr.net/blog/druid-dynamism.html\"\n  }, \"Dynamic widget sketches\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/gliheng/flutter-rs\"\n  }, \"flutter-rs\"), \" - Build flutter desktop app in dart & rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/anp/moxie\"\n  }, \"Moxie\"), \" - Lightweight platform-agnostic tools for declarative UI.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/redox-os/orbtk\"\n  }, \"OrbTk\"), \" - Rust UI-Toolkit.\")), mdx(\"h2\", {\n    \"id\": \"crypto\"\n  }, \"Crypto\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/republicprotocol/zksnark-rs\"\n  }, \"zksnark-rs\"), \" - Zero knowledge succinct arguments of knowledge, written in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zkcrypto/bellman\"\n  }, \"bellman\"), \" - Crate for building zk-SNARK circuits.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/microsoft/Spartan\"\n  }, \"Spartan\"), \" - High-speed zkSNARKs without trusted setup.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/RustCrypto/hashes\"\n  }, \"RustCrypto: hashes\"), \" - Collection of cryptographic hash functions written in pure Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/google/mundane/\"\n  }, \"Mundane\"), \" - Rust cryptography library backed by BoringSSL that is difficult to misuse, ergonomic, and performant (in that order). (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=25434349\"\n  }, \"HN\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/RustCrypto/elliptic-curves\"\n  }, \"RustCrypto: Elliptic Curves\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/scipr-lab/poly-commit\"\n  }, \"poly-commit\"), \" - Rust library for polynomial commitments.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/scipr-lab/marlin\"\n  }, \"Marlin\"), \" - Rust library for the Marlin preprocessing zkSNARK.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jedisct1/rust-sthash\"\n  }, \"STHash\"), \" - Fast, keyed, cryptographic hash function designed to process large, possibly untrusted data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/arkworks-rs/algebra\"\n  }, \"arkworks::algebra\"), \" - Libraries for finite field, elliptic curve, and polynomial arithmetic.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zkcrypto/pairing\"\n  }, \"pairing\"), \" - Crate for using pairing-friendly elliptic curves.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/thyeem/monotree\"\n  }, \"Monotree\"), \" - Optimized Sparse Merkle Tree in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/facebookresearch/Cupcake\"\n  }, \"Cupcake\"), \" - Rust library for lattice-based additive homomorphic encryption.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/orion-rs/orion\"\n  }, \"orion\"), \" - Usable, easy and safe pure-Rust crypto.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ZenGo-X/curv\"\n  }, \"Curv\"), \" - Rust language general purpose elliptic curve cryptography.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/laysakura/serde-encrypt\"\n  }, \"serde-encrypt\"), \" - Encrypts all the Serialize.\")), mdx(\"h2\", {\n    \"id\": \"linux\"\n  }, \"Linux\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/eminence/procfs\"\n  }, \"procfs\"), \" - Rust library for reading the Linux procfs filesystem.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/containers/libkrun\"\n  }, \"libkrun\"), \" - Dynamic library providing KVM-based process isolation capabilities.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tokio-rs/io-uring\"\n  }, \"io-uring\"), \" - Linux IO Uring.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/diwic/shmem-ipc\"\n  }, \"shmem-ipc\"), \" - Rust high-performance communication between untrusted processes on Linux.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jimblandy/perf-event\"\n  }, \"perf-event\"), \" - Rust interface to Linux performance monitoring.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ingraind/redbpf\"\n  }, \"RedBPF\"), \" - Rust library for building and running BPF/eBPF modules.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ringbahn/iou\"\n  }, \"iou\"), \" - Rust interface to io_uring.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/alessandrod/aya\"\n  }, \"Aya\"), \" - eBPF library for the Rust programming language, built with a focus on developer experience and operability. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://confused.ai/posts/announcing-aya\"\n  }, \"Article\"), \")\")), mdx(\"h2\", {\n    \"id\": \"ml\"\n  }, \"ML\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/neuronika/neuronika\"\n  }, \"Neuronika\"), \" - Tensors and dynamic neural networks in pure Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/spearow/juice\"\n  }, \"Juice\"), \" - Hacker's Machine Learning Engine.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/LukeMathWalker/linfa\"\n  }, \"linfa\"), \" - Rust machine learning framework.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bkkaggle/L2\"\n  }, \"L2\"), \" - PyTorch-style Tensor+Autograd library written in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/outbrain/fwumious_wabbit\"\n  }, \"Fwumious Wabbit\"), \" - Fast on-line machine learning toolkit written in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/c0dearm/mushin\"\n  }, \"Mushin\"), \" - Compile-time creation of neural networks.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/millardjn/alumina\"\n  }, \"Alumina\"), \" - Deep learning library for rust.\")), mdx(\"h2\", {\n    \"id\": \"macos\"\n  }, \"macOS\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/fitzgen/mach\"\n  }, \"mach\"), \" - Rust interface to the Mach 3.0 kernel that underlies macOS.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ryanmcgrath/cacao\"\n  }, \"Cacao\"), \" - Rust bindings for AppKit (macOS) and UIKit (iOS/tvOS).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nvzqz/fruity\"\n  }, \"Fruity\"), \" - Rusty bindings for Apple libraries.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/servo/core-foundation-rs\"\n  }, \"core-foundation-rs\"), \" - Rust bindings to Core Foundation and other low level libraries on Mac OS X and iOS.\")), mdx(\"h2\", {\n    \"id\": \"macros\"\n  }, \"Macros\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/alexcrichton/cfg-if\"\n  }, \"cfg-if\"), \" - If/elif-like macro for Rust #\", \"[cfg]\", \" statements.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/pyros2097/rust-embed\"\n  }, \"Rust Embed\"), \" - Rust Macro which loads files into the rust binary at compile time during release and loads the file from the fs during dev.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/colin-kiegel/rust-derive-builder\"\n  }, \"Builder Pattern Derive\"), \" - Rust macro to automatically implement the builder pattern for arbitrary structs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/UkonnRa/rabbithole-rs\"\n  }, \"rabbithole-rs\"), \" - Nearly well-typed, user-friendly JSON:API type system, with an easy-to-use Macro System to help you modelling the your data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/matklad/once_cell\"\n  }, \"once_cell\"), \" - Rust library for single assignment cells and lazy statics without macros.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-lang-nursery/lazy-static.rs\"\n  }, \"lazy-static.rs\"), \" - Macro for declaring lazily evaluated statics in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Emerentius/partial_application\"\n  }, \"partial_application\"), \" - Partial function application macro for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/lukaslueg/macro_railroad\"\n  }, \"macro_railroad\"), \" - Library to generate syntax diagrams for Rust macros.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/udoprog/genco\"\n  }, \"genco\"), \" - Whitespace-aware quasiquoter for beautiful code generation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-num/num-derive\"\n  }, \"num-derive\"), \" - Procedural macros to derive numeric traits in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Stebalien/horrorshow-rs\"\n  }, \"Horrorshow\"), \" - Macro-based html builder for rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/johannhof/pipeline.rs\"\n  }, \"pipeline.rs\"), \" - Macro collection to pipe your functions calls, like in F# or Elixir.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/y2kappa/timed\"\n  }, \"timed\"), \" - Rust crate to time your function using derive annotations.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/paste\"\n  }, \"paste\"), \" - Macros for all your token pasting needs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/TedDriggs/darling\"\n  }, \"Darling\"), \" - Rust proc-macro attribute parser.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/paulstansifer/unseemly\"\n  }, \"unseemly\"), \" - Macros have types. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://unseemly.github.io/\"\n  }, \"Web\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/seq-macro\"\n  }, \"seq-macro\"), \" - Macro to repeat sequentially indexed copies of a fragment of code.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/automod\"\n  }, \"Automod\"), \" - Pull in every source file in a directory as a module.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mersinvald/aquamarine\"\n  }, \"Aquamarine\"), \" - Inline diagrams for rustdoc with mermade.js.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/peterjoel/velcro\"\n  }, \"Velcro\"), \" - Macros for conveniently initializing collections from Rust's std and iterators.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/lambda-fairy/if_chain\"\n  }, \"if_chain\"), \" - Macro for writing nested \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"if let\"), \" expressions.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bkchr/proc-macro-crate\"\n  }, \"proc-macro-crate\"), \" - Providing support for $crate in procedural macros.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rustype/typestate-rs\"\n  }, \"typestate\"), \" - Provides developers with a macro to design typestated objects.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/magiclen/educe\"\n  }, \"Educe\"), \" - Provides procedural macros to help you implement Rust-built-in traits quickly.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/no-panic\"\n  }, \"no-panic\"), \" - Attribute macro to require that the compiler prove a function can't ever panic.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/m-ou-se/spez\"\n  }, \"spez\"), \" - Macro to specialize on the type of an expression.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Canop/lazy-regex\"\n  }, \"lazy-regex\"), \" - Macro for when you're tired of the regex creation boilerplate.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/theypsilon/arraygen\"\n  }, \"Arraygen\"), \" - Derive macro for generating arrays from struct fields.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/llogiq/flamer\"\n  }, \"flamer\"), \" - Compiler plugin to insert flame calls.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bitflags/bitflags\"\n  }, \"bitflags\"), \" - Macro to generate structures which behave like bitflags.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/m-ou-se/nightly-crimes\"\n  }, \"nightly-crimes\"), \" - Allow you to enable nightly features on the stable compiler.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Kobzol/rust-delegate\"\n  }, \"rust-delegate\"), \" - Rust method delegation with less boilerplate.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/althonos/blanket\"\n  }, \"blanket\"), \" - Simple Rust macro to derive blanket implementations for your traits.\")), mdx(\"h2\", {\n    \"id\": \"math\"\n  }, \"Math\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/vinesystems/lair\"\n  }, \"Lair\"), \" - Linear Algebra in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nestordemeure/friedrich\"\n  }, \"Friedrich\"), \" - Rust implementation of Gaussian Process regression.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-cv/hnsw\"\n  }, \"hnsw\"), \" - Hierarchical Navigable Small World Graph for fast ANN search.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/statrs-dev/statrs\"\n  }, \"statrs\"), \" - Statistical computation library for Rust.\")), mdx(\"h2\", {\n    \"id\": \"other\"\n  }, \"Other\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/kbknapp/clap-rs\"\n  }, \"clap-rs\"), \" - Full featured, fast Command Line Argument Parser.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/serde-rs/serde\"\n  }, \"Serde\"), \" - Serialization framework for Rust. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://serde.rs/\"\n  }, \"Docs\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/novifinancial/serde-reflection\"\n  }, \"serde-reflection\"), \" - Rust libraries and tools to help with interoperability and testing of serialization formats based on Serde.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/miniserde\"\n  }, \"Miniserde\"), \" - Data structure serialization library with several opposite design goals from Serde.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/cloudhead/microserde\"\n  }, \"Microserde\"), \" - Miniserde minus the dependencies.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/TimelyDataflow/abomonation\"\n  }, \"Abomonation\"), \" - Mortifying serialization library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/PyO3/pyo3\"\n  }, \"pyo3\"), \" - Rust bindings for the Python interpreter. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=25956502\"\n  }, \"HN\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/PyO3/maturin\"\n  }, \"Maturin - Build and publish crates with pyo3\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/actix/actix\"\n  }, \"actix\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tokio-rs/tokio\"\n  }, \"tokio\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Geal/nom\"\n  }, \"nom\"), \" - Parser combinators library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-bakery/nom-derive\"\n  }, \"nom-derive\"), \" - Declarative parsing for Rust, using a custom derive and nom.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/orium/rpds\"\n  }, \"rpds\"), \" - Rust Persistent Data Structures.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/alexcrichton/futures-await\"\n  }, \"Futures await\"), \" - Async/await syntax and the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://crates.io/crates/futures\"\n  }, \"futures\"), \" crate.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nix-rust/nix\"\n  }, \"nix\"), \" - Rust friendly bindings to \", \"*\", \"nix APIs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/paritytech/wasmi\"\n  }, \"wasmi\"), \" - Wasm interpreter in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rayon-rs/rayon\"\n  }, \"rayon\"), \" - Data parallelism library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/edef1c/libfringe\"\n  }, \"libfringe\"), \" - Rust library implementing safe, lightweight context switches, without relying on kernel services.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/servo/rust-url\"\n  }, \"rust-url\"), \" - URL parser for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sfackler/rust-postgres\"\n  }, \"Rust-Postgres\"), \" - Native PostgreSQL driver for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bodil/im-rs\"\n  }, \"im-rs\"), \" - Assorted immutable collection datatypes for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/graphql-rust/juniper\"\n  }, \"Juniper\"), \" - GraphQL server library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/maciejhirsz/logos\"\n  }, \"Logos\"), \" - Create ridiculously fast Lexers.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/GNOME/librsvg\"\n  }, \"Librsvg\"), \" - SVG rendering library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sfackler/rust-openssl\"\n  }, \"rust-openssl\"), \" - OpenSSL bindings for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ctz/rustls\"\n  }, \"rustls\"), \" - Modern TLS library in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.rusoto.org/\"\n  }, \"Rusoto\"), \" - AWS SDK for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-random/rand\"\n  }, \"Rand\"), \" - Rust library for random number generation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Razaekel/noise-rs\"\n  }, \"noise-rs\"), \" - Procedural noise generation library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-av/rust-av\"\n  }, \"Rust-AV\"), \" - Multimedia Toolkit written in pure rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/alexcrichton/cookie-rs\"\n  }, \"cookie-rs\"), \" - HTTP cookie parsing and cookie jar management for rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bschwind/yoga-rs\"\n  }, \"yoga-rs\"), \" - Rust Wrapper of Facebook's Yoga, a Flexbox layout engine.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/redux-rs/redux-rs\"\n  }, \"redux-rs\"), \" - Rust implementation of Redux.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-lang-nursery/datafrog\"\n  }, \"Datafrog\"), \" - Lightweight Datalog engine intended to be embedded in other Rust programs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/anguslees/kubernetes-rs\"\n  }, \"kubernetes-rs\"), \" - Kubernetes API client library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/gnzlbg/jemallocator\"\n  }, \"jemallocator\"), \" - Rust allocator using jemalloc as a backend.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/gnzlbg/cargo-asm\"\n  }, \"cargo-asm\"), \" - Cargo subcommand showing the assembly or llvm-ir generated for Rust code.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/crossbeam-rs/crossbeam\"\n  }, \"Crossbeam\"), \" - Tools for concurrent programming in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jonhoo/rust-evmap\"\n  }, \"evmap\"), \" - Lock-free, eventually consistent, concurrent multi-value map.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/atroche/rust-headless-chrome\"\n  }, \"Headless Chrome\"), \" - Puppeteer for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/servo/rust-smallvec\"\n  }, \"rust-smallvec\"), \" - \\\"Small vector\\\" optimization for Rust: store up to a small number of items on the stack.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/murarth/ketos\"\n  }, \"Ketos\"), \" - Lisp dialect scripting and extension language for Rust programs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Xudong-Huang/may\"\n  }, \"MAY\"), \" - Rust stackful coroutine library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/alex-shapiro/ditto\"\n  }, \"Ditto\"), \" - CRDTs for common data structures like maps, vecs, sets, text, and JSON.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jaemk/self_update\"\n  }, \"self_update\"), \" - Provides updaters for updating rust executables in-place from various release distribution backends.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-lang/libc\"\n  }, \"libc\"), \" - Raw FFI bindings to platforms' system libraries.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ivanceras/svgbob\"\n  }, \"Svgbob\"), \" - Convert your ascii diagram scribbles into happy little SVG.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/eqrion/cbindgen\"\n  }, \"cbindgen\"), \" - Project for generating C bindings from Rust code.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/TyOverby/bincode\"\n  }, \"Bincode\"), \" - Binary encoder / decoder implementation in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/datrs/hypercore\"\n  }, \"Hypercore\"), \" - Secure, distributed, append-only log. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://hypercore-protocol.org/\"\n  }, \"Web\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=25407193\"\n  }, \"HN\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-rocksdb/rust-rocksdb\"\n  }, \"rust-rocksdb\"), \" - Rust wrapper for rocksdb.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-lang-nursery/futures-rs\"\n  }, \"futures-rs\"), \" - Zero-cost asynchronous programming in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Amanieu/hashbrown\"\n  }, \"hashbrown\"), \" - Rust port of Google's high-performance SwissTable hash map, adapted to make it a drop-in replacement for Rust's standard HashMap and HashSet types.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/websockets-rs/rust-websocket\"\n  }, \"Rust-WebSocket\"), \" - Provides a framework for dealing with WebSocket connections (both clients and servers).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/maciejhirsz/ramhorns\"\n  }, \"Ramhorns\"), \" - Experimental Mustache template engine implementation in pure Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/frewsxcv/rust-notifica\"\n  }, \"rust-notifica\"), \" - Small, cross-platform Rust crate for sending system notifications.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/raphlinus/pulldown-cmark\"\n  }, \"pulldown-cmark\"), \" - Pull parser for CommonMark, written in Rust. It comes with a simple command-line tool, useful for rendering to HTML, and is also designed to be easy to use from as a library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/image-rs/image\"\n  }, \"Image\"), \" - Encoding and decoding images in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/daboross/fern\"\n  }, \"fern\"), \" - Simple, efficient logging for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rustasync/runtime\"\n  }, \"Runtime\"), \" - Empowering everyone to build asynchronous software.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-lang/miri\"\n  }, \"miri\"), \" - Interpreter for Rust's mid-level intermediate representation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rustasync/tide\"\n  }, \"Tide\"), \" - Empowering everyone to build HTTP Services.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/BurntSushi/fst\"\n  }, \"fst\"), \" - Represent large sets and maps compactly with finite state transducers.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/lambda-fairy/maud\"\n  }, \"maud\"), \" - Compile-time HTML templates for Rust. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=24552107\"\n  }, \"HN\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/japaric/panic-never\"\n  }, \"panic-never\"), \" - This crate guarantees that your application is free of panicking branches.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/graphql-rust/graphql-client\"\n  }, \"graphql_client\"), \" - Typed, correct GraphQL requests and responses in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/knsd/daemonize\"\n  }, \"daemonize\"), \" - Library for writing system daemons.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/alexcrichton/cc-rs\"\n  }, \"cc-rs\"), \" - Rust library for build scripts to compile C/C++ code into a Rust library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nannou-org/nannou\"\n  }, \"nannou\"), \" - Creative Coding Framework for Rust. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://nannou.cc/\"\n  }, \"Web\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=25343356\"\n  }, \"HN\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bheisler/criterion.rs\"\n  }, \"Criterion.rs\"), \" - Statistics-driven benchmarking library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-fuzz/cargo-fuzz\"\n  }, \"Cargo-fuzz\"), \" - Command-line wrapper for using libFuzzer. Easy to use, no need to recompile LLVM.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Stoeoef/spade\"\n  }, \"spade\"), \" - Spatial Data Structures for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bluejekyll/pg-extend-rs\"\n  }, \"pg-extend-rs\"), \" - Rust based Postgres extension.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bodil/higher\"\n  }, \"Hiher\"), \" - Higher kinded types and other bad ideas for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/anderejd/cargo-geiger\"\n  }, \"cargo-geiger\"), \" - Detects usage of unsafe Rust in a Rust crate and its dependencies.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/http-rs/surf\"\n  }, \"Surf\"), \" - Fast and friendly HTTP client framework for async Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/async-rs/async-std\"\n  }, \"async-std\"), \" - Async version of the Rust standard library. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://async.rs/blog/stop-worrying-about-blocking-the-new-async-std-runtime/\"\n  }, \"Article\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bluss/petgraph\"\n  }, \"petgraph\"), \" - Graph data structure library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/neon-bindings/neon\"\n  }, \"Neon\"), \" - Rust bindings for writing safe and fast native Node.js modules. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://neon-bindings.com/\"\n  }, \"Web\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tauri-apps/tauri\"\n  }, \"Tauri\"), \" - Electron alternative written in Rust. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://tauri.studio/en/\"\n  }, \"Web\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=23769424\"\n  }, \"HN\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=26194990\"\n  }, \"HN\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=27155831\"\n  }, \"HN\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/38/plotters\"\n  }, \"Plotters\"), \" - Rust Drawing Library for Plotting.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/GuillaumeGomez/rust-GSL\"\n  }, \"rust-GSL\"), \" - Rust binding for the GSL library (the GNU Scientific Library).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Marwes/combine\"\n  }, \"combine\"), \" - Parser combinator library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/syn\"\n  }, \"Syn\"), \" - Parsing library for parsing a stream of Rust tokens into a syntax tree of Rust source code.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/calebwin/emu\"\n  }, \"Emu\"), \" - Framework/compiler for GPU acceleration of Rust, GPU programming.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zonyitoo/coio-rs\"\n  }, \"Coroutine I/O\"), \" - Coroutine scheduling with work-stealing algorithm.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Stebalien/tempfile\"\n  }, \"tempfile\"), \" - Temporary file library for rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/georust/geo\"\n  }, \"geo\"), \" - Geospatial primitives and algorithms for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-lang/hashbrown\"\n  }, \"hashbrown\"), \" - Rust port of Google's SwissTable hash map.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rustsim/nalgebra\"\n  }, \"nalgebra\"), \" - Linear algebra library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/softprops/envy\"\n  }, \"envy\"), \" - Deserialize env vars into typesafe structs with rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tiny-http/tiny-http\"\n  }, \"tiny-http\"), \" - Low level HTTP server library in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/petgraph/petgraph\"\n  }, \"petgraph\"), \" - Graph data structure library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/cksac/dataloader-rs\"\n  }, \"Dataloader\"), \" - Rust implementation of Facebook's DataLoader using futures.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/amethyst/specs\"\n  }, \"Specs\"), \" - Entity-Component System written in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/servo/euclid\"\n  }, \"euclid\"), \" - Small library for geometric types with a focus on 2d graphics and layout.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/notify-rs/notify\"\n  }, \"Notify\"), \" - Cross-platform filesystem notification library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/hoodie/notify-rust\"\n  }, \"notify-rust\"), \" - Send Desktop Notifications on linux and bsd.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/athre0z/color-backtrace\"\n  }, \"color-backtrace\"), \" - Colorful panic backtraces for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sfackler/r2d2\"\n  }, \"r2d2\"), \" - Generic connection pool for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sfackler/rust-phf\"\n  }, \"Rust-PHF\"), \" - Compile time static maps for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/vorner/signal-hook\"\n  }, \"Signal-hook\"), \" - Rust library allowing to register multiple handlers for the same signal.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/facebookincubator/rust-partial-io\"\n  }, \"partial-io\"), \" - Rust library that provides helpers for testing resilience of IO operations.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/constellation-rs/amadeus\"\n  }, \"Amadeus\"), \" - Harmonious distributed data analysis in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/constellation-rs/constellation\"\n  }, \"Constellation\"), \" - Distributed programming for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-ndarray/ndarray\"\n  }, \"ndarray\"), \" - N-dimensional array with array views, multidimensional slicing, and efficient operations.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/google/evcxr\"\n  }, \"Evcxr\"), \" - Rust REPL and Jupyter Kernel. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=25921894\"\n  }, \"HN\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/comnik/declarative-dataflow\"\n  }, \"Declarative Dataflow\"), \" - Reactive query engine built on differential dataflow.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-db/refinery\"\n  }, \"refinery\"), \" - Powerful SQL migration toolkit for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/afshinm/juggernaut\"\n  }, \"Juggernaut\"), \" - Experimental Neural Network written in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/riker-rs/riker\"\n  }, \"Riker\"), \" - Easily build efficient, highly concurrent and resilient applications. An Actor Framework for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/myrrlyn/bitvec\"\n  }, \"bitvec\"), \" - Crate for managing memory bit by bit.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dgrunwald/rust-cpython\"\n  }, \"rust-cpython\"), \" - Rust <-> Python bindings.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/PocketDerm/vicuna\"\n  }, \"Vicuna\"), \" - AWS Lambdas in Rust made simple.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ryanisaacg/quicksilver\"\n  }, \"quicksilver\"), \" - Simple game framework for 2D games on desktop and web.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bodil/refpool\"\n  }, \"refpool\"), \" - Efficient memory pool mechanism for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/cloudflare/lol-html\"\n  }, \"lol-html\"), \" - Low output latency streaming HTML parser/rewriter with CSS selector-based API.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Manishearth/mitosis\"\n  }, \"mitosis\"), \" - Spawn processes with arbitrary closures in rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/phsym/prettytable-rs\"\n  }, \"prettytable-rs\"), \" - Rust library to print aligned and formatted tables.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/unicode-rs/unicode-width\"\n  }, \"unicode-width\"), \" - Displayed width of Unicode characters and strings according to UAX#11 rules.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/chronotope/chrono\"\n  }, \"Chrono\"), \" - Date and time library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/iqlusioninc/crates\"\n  }, \"iqlusion crates\"), \" - Collection of open source Rust crates from iqlusion.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/shnewto/bnf\"\n  }, \"bnf\"), \" - Parse BNF grammar definitions.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tafia/quick-protobuf\"\n  }, \"quick-protobuf\"), \" - Rust implementation of protobuf parser.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bikeshedder/deadpool\"\n  }, \"Deadpool\"), \" - Dead simple pool implementation for rust with async-await.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/vertexclique/cuneiform\"\n  }, \"cuneiform\"), \" - Cache optimizations for Rust, revived from the slabs of Sumer.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mitsuhiko/insta\"\n  }, \"insta\"), \" - Snapshot testing library for rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Marwes/pretty.rs\"\n  }, \"pretty.rs\"), \" - Wadler-style pretty-printing combinators in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/denoland/rusty_v8\"\n  }, \"Rusty V8\"), \" - V8 javascript bindings for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/housleyjk/ws-rs\"\n  }, \"WS-RS\"), \" - Lightweight, event-driven WebSockets for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/cxx\"\n  }, \"CXX\"), \" - Safe interop between Rust and C++. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://cxx.rs/\"\n  }, \"Docs\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/oconnor663/duct.rs\"\n  }, \"Duct\"), \" - Rust library for shelling out and making pipelines.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/crossterm-rs/crossterm\"\n  }, \"crossterm\"), \" - Cross platform terminal library rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/gfx-rs/wgpu-rs\"\n  }, \"wgpu-rs\"), \" - Rust bindings to wgpu native library. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rofrol/awesome-wgpu-rs\"\n  }, \"Awesome\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/spacejam/rio\"\n  }, \"rio\"), \" - Pure rust io_uring library, built on libc, thread & async friendly, misuse resistant.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/xacrimon/dashmap\"\n  }, \"dashmap\"), \" - Blazing fast concurrent HashMap for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/interact-rs/interact\"\n  }, \"Interact\"), \" - Framework for friendly online introspection of the running program state in an intuitive command-line interactive way.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/AdamNiederer/faster\"\n  }, \"faster\"), \" - SIMD for humans.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-crdt/rust-crdt\"\n  }, \"rust-crdt\"), \" - Collection of well-tested, serializable CRDTs for Rust. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=24795001\"\n  }, \"HN\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/paritytech/jsonrpc\"\n  }, \"JSON-RPC\"), \" - Rust implementation of JSON-RPC 2.0 Specification. Transport-agnostic core and transport servers for http, ipc, websockets and tcp.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/chyh1990/yaml-rust\"\n  }, \"yaml-rust\"), \" - Pure rust YAML implementation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/soc/directories-rs\"\n  }, \"directories\"), \" - Mid-level library that provides config/cache/data paths, following the respective conventions on Linux, macOS and Windows.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bastion-rs/bastion\"\n  }, \"Bastion\"), \" - Highly-available, fault-tolerant runtime system with dynamic, dispatch-oriented, lightweight process model. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=22403713\"\n  }, \"HN\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://bastion.rs/\"\n  }, \"Web\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/devashishdxt/desse\"\n  }, \"Desse\"), \" - Ultra fast binary serialization and deserialization for types with a constant size (known at compile time).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/HdrHistogram/HdrHistogram_rust\"\n  }, \"HdrHistogram\"), \" - Port of HdrHistogram to Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-qt/ritual\"\n  }, \"ritual\"), \" - Use C++ libraries from Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/3Hren/msgpack-rust\"\n  }, \"RMP\"), \" - Pure Rust MessagePack implementation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/likebike/fasteval\"\n  }, \"fasteval\"), \" - Fast and safe evaluation of algebraic expressions.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bytecodealliance/wasmparser\"\n  }, \"wasmparser\"), \" - Simple event-driven library for parsing WebAssembly binary files.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Nemo157/roaring-rs\"\n  }, \"RoaringBitmap\"), \" - Roaring bitmap implementation for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/purpleprotocol/graphlib\"\n  }, \"Graphlib\"), \" - Simple but powerful graph library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-analyzer/rowan\"\n  }, \"Rowan\"), \" - Library for lossless syntax trees, inspired in part by Swift's libsyntax.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Keats/tera\"\n  }, \"Tera\"), \" - Template engine for Rust based on Jinja2/Django.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/breard-r/libreauth\"\n  }, \"LibreAuth\"), \" - Collection of tools for user authentication.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ThinkAlexandria/BoringAuth\"\n  }, \"BoringAuth\"), \" - Collection of tools for user authentication.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-lang/log\"\n  }, \"log\"), \" - Logging implementation for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bodil/typed-html\"\n  }, \"typed-html\"), \" - Type checked JSX for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/enigo-rs/enigo\"\n  }, \"enigo\"), \" - Cross platform input simulation in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tokio-rs/tracing\"\n  }, \"tracing\"), \" - Application level tracing for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/metamolecular/graphcore\"\n  }, \"GraphCore\"), \" - Provides primitives and traversals for working with graphs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/async-trait\"\n  }, \"Async trait methods\"), \" - Type erasure for async trait methods.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-lang/compiler-builtins\"\n  }, \"compiler-builtins\"), \" - Porting \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"compiler-rt\"), \" intrinsics to Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/gtk-rs/gtk\"\n  }, \"gtk\"), \" - Rust bindings and wrappers for GLib, GDK 3, GTK+ 3 and Cairo.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bIgBV/tokio-beanstalkd\"\n  }, \"tokio-beanstalkd\"), \" - Asynchronous client library for interacting with the Beanstalkd work queue.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jackdoe/octopus_query\"\n  }, \"octopus\"), \" - Query engine for arrays of integers.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/serde-yaml\"\n  }, \"Serde YAML\"), \" - Strongly typed YAML library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/softprops/shiplift\"\n  }, \"shiplift\"), \" - Rust interface for maneuvering docker containers.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Adapton/adapton.rust\"\n  }, \"Adapton\"), \" - General-purpose abstractions for incremental computing, in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/SSheldon/rust-objc\"\n  }, \"rust-objc\"), \" - Objective-C Runtime bindings and wrapper for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/SSheldon/rust-block\"\n  }, \"rust-block\"), \" - Rust interface for Apple's C language extension of blocks.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/SSheldon/rust-dispatch\"\n  }, \"rust-dispatch\"), \" - Rust wrapper for Apple's Grand Central Dispatch.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/saschagrunert/indextree\"\n  }, \"indextree\"), \" - Arena based tree structure by using indices instead of reference counted pointers.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Michael-F-Bryan/markedit\"\n  }, \"markedit\"), \" - Library for manipulating unstructured Markdown documents.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/milliams/plotlib\"\n  }, \"plotlib\"), \" - Data plotting library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zesterer/parze\"\n  }, \"Parze\"), \" - Clean, efficient parser combinator.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zesterer/flume\"\n  }, \"Flume\"), \" - Blazingly fast multi-producer, single-consumer channel.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/davidpdrsn/juniper-from-schema\"\n  }, \"juniper-from-schema\"), \" - Schema first GraphQL in Rust with Juniper.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/getreu/stringsext\"\n  }, \"stringsext\"), \" - Find multi-byte-encoded strings in binary data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/BurntSushi/byteorder\"\n  }, \"byteorder\"), \" - Rust library for reading/writing numbers in big-endian and little-endian.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/whatisaphone/genawaiter\"\n  }, \"genawaiter\"), \" - Stackless generators on stable Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/libpnet/libpnet\"\n  }, \"libpnet\"), \" - Cross-platform, low level networking using the Rust programming language.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-num/num\"\n  }, \"num\"), \" - Collection of numeric types and traits for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Ralith/hecs\"\n  }, \"hecs\"), \" - Provides a high-performance, minimalist entity-component-system (ECS) world.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Amanieu/intrusive-rs\"\n  }, \"intrusive-collections\"), \" - Intrusive collections for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/kvark/froggy\"\n  }, \"froggy\"), \" - Component Graph System experiment.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/TomGillen/legion\"\n  }, \"Legion\"), \" - Aims to be a feature rich high performance ECS library for Rust game projects with minimal boilerplate.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/JelteF/derive_more\"\n  }, \"derive_more\"), \" - Some more derive(Trait) options.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/async-rs/async-task\"\n  }, \"async-task\"), \" - Task abstraction for building executors. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://stjepang.github.io/2020/04/03/why-im-building-a-new-async-runtime.html\"\n  }, \"Article\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bozaro/lz4-rs\"\n  }, \"lz4 bindings\"), \" - LZ4 is a very fast lossless compression algorithm.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rustic-games/sm\"\n  }, \"SM\"), \" - Static State Machine library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/paritytech/parity-common\"\n  }, \"parity-common\"), \" - Collection of crates used in Parity projects.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/substack/desert\"\n  }, \"desert\"), \" - Traits for {de,}serializing compact binary formats.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jimmycuadra/rust-etcd\"\n  }, \"etcd\"), \" - Etcd client library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/SiegeLord/RustGnuplot\"\n  }, \"RustGnuplot\"), \" - Rust library for drawing plots, powered by Gnuplot.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sunng87/handlebars-rust\"\n  }, \"handlebars-rust\"), \" - Rust templating with Handlebars.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/inventory\"\n  }, \"inventory\"), \" - Typed distributed plugin registration.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mmastrac/rust-ctor\"\n  }, \"rust-ctor\"), \" - Module initialization/global constructor functions for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/katharostech/cfg_aliases\"\n  }, \"CFG Aliases\"), \" - Tiny utility to help save you a lot of effort with long winded \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"#[cfg()]\"), \" checks in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/salsa-rs/salsa\"\n  }, \"salsa\"), \" - Generic framework for on-demand, incrementalized computation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tokio-rs/bytes\"\n  }, \"Bytes\"), \" - Utility library for working with bytes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/droundy/internment\"\n  }, \"Internment\"), \" - Interning of data in rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/datrs/merkle-tree-stream\"\n  }, \"merkle-tree-stream\"), \" - Stream that generates a merkle tree based on the incoming data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sunli829/async-graphql\"\n  }, \"async-graphql\"), \" - GraphQL server library that fully supports async/await and is easy to use.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/kivikakk/comrak\"\n  }, \"comrak\"), \" - CommonMark + GFM compatible Markdown parser and renderer.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/fitzgen/generational-arena\"\n  }, \"generational-arena\"), \" - Safe arena allocator that allows deletion without suffering from the ABA problem by using generational indices.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/fschutt/printpdf\"\n  }, \"printpdf\"), \" - Library designed for creating printable PDF documents.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tikv/rust-prometheus\"\n  }, \"rust-prometheus\"), \" - Prometheus instrumentation library for Rust applications.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/cdisselkoen/llvm-ir\"\n  }, \"llvm-ir\"), \" - LLVM IR in natural Rust data structures.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Lokathor/tinyvec\"\n  }, \"tinyvec\"), \" - 100% safe crate of vec-like types.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/time-rs/time\"\n  }, \"time\"), \" - Simple time handling in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/BurntSushi/regex-automata\"\n  }, \"regex-automata\"), \" - Low level regular expression library that uses deterministic finite automata.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/trishume/syntect\"\n  }, \"syntect\"), \" - Rust library for syntax highlighting using Sublime Text syntax definitions.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bitshifter/glam-rs\"\n  }, \"glam\"), \" - Simple and fast linear algebra library for games and graphics.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/emoon/rust_minifb\"\n  }, \"rust_minifb\"), \" - Cross platform window and framebuffer crate for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nagisa/rust_libloading\"\n  }, \"libloading\"), \" - Better library for loading dynamic libraries.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mmstick/numtoa\"\n  }, \"NumToA\"), \" - Efficient method of heaplessly converting numbers into their string representations, storing the representation within a reusable byte array.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dylni/os_str_bytes\"\n  }, \"OsStr Bytes\"), \" - Traits for converting between byte sequences and platform-native strings.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/lawliet89/biscuit\"\n  }, \"biscuit\"), \" - JOSE (JSON Web Token) Library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nikolay-govorov/nanoid\"\n  }, \"Nano ID\"), \" - Tiny, secure, URL-friendly, unique string ID generator for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/h4llow3En/mac-notification-sys\"\n  }, \"mac-notification-sys\"), \" - Simple wrapper to deliver or schedule macOS Notifications in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/slowtec/semval\"\n  }, \"semval\"), \" - Semantic validation for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Amanieu/parking_lot\"\n  }, \"parking_lot\"), \" - Compact and efficient synchronization primitives for Rust. Also provides an API for creating custom synchronization primitives.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/gimli-rs/gimli\"\n  }, \"gimli\"), \" - Lazy, zero-copy parser for the DWARF debugging format.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/michaelwoerister/hamt-rs\"\n  }, \"hamt-rs\"), \" - Persistent Map Implementation based on Hash Array Mapped Tries.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sfackler/rust-native-tls\"\n  }, \"rust-native-tls\"), \" - Abstraction over platform-specific TLS implementations.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-itertools/itertools\"\n  }, \"itertools\"), \" - Extra iterator adaptors, iterator methods, free functions, and macros.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Keats/validator\"\n  }, \"validator\"), \" - Simple validation for Rust structs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dalance/sv-parser\"\n  }, \"sv-parser\"), \" - SystemVerilog parser library fully complient with IEEE 1800-2017.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/serde-rs/json\"\n  }, \"Serde JSON\"), \" - Strongly typed JSON library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/TheNeikos/rustbreak\"\n  }, \"Rustbreak\"), \" - Simple, fast and easy to use self-contained single file storage for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mgattozzi/curryrs\"\n  }, \"Curryrs\"), \" - Bridge the gap between Haskell and Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-lang/libm\"\n  }, \"libm\"), \" - Port of MUSL's libm to Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/stjepang/smol\"\n  }, \"smol\"), \" - Small and fast async runtime for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/colorous\"\n  }, \"Colorous\"), \" - Color schemes for charts and maps.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/redox-os/termion\"\n  }, \"Termion\"), \" - Pure Rust, bindless library for low-level handling, manipulating and reading information about terminals.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/gimli-rs/object\"\n  }, \"object\"), \" - Unified interface for reading and writing object file formats.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/no-panic\"\n  }, \"no-panic\"), \" - Attribute macro to require that the compiler prove a function can't ever panic.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/alexcrichton/rustc-demangle\"\n  }, \"rustc-demangle\"), \" - Demangling for Rust symbols, written in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/idanarye/rust-typed-builder\"\n  }, \"Rust Typed Builder\"), \" - Creates a compile-time verified builder.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/quadrupleslap/tether\"\n  }, \"Tether\"), \" - Barebones Electron-ish library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/stjepang/event-listener\"\n  }, \"event-listener\"), \" - Notify async tasks or threads.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jaemk/cached\"\n  }, \"cached\"), \" - Rust cache structures and easy function memoization.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jonhoo/tsunami\"\n  }, \"tsunami\"), \" - Rust crate for running one-off cloud jobs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/alexcrichton/proc-macro2\"\n  }, \"proc-macro2\"), \" - Wrapper around the procedural macro API of the compiler's proc_macro crate.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/quote\"\n  }, \"Rust Quasi-Quoting\"), \" - Provides the quote! macro for turning Rust syntax tree data structures into tokens of source code.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/yaahc/displaydoc\"\n  }, \"displaydoc\"), \" - Derive macro for implementing the display Trait via a doc comment and string interpolation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/stjepang/simple-mutex\"\n  }, \"simple-mutex\"), \" - Simple mutex, faster than std and smaller than parking_lot.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rylev/remem\"\n  }, \"remem\"), \" - Utility for reusing memory.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/BurntSushi/aho-corasick\"\n  }, \"aho-corasick\"), \" - Library for finding occurrences of many patterns at once with SIMD acceleration in some cases.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/fusion-engineering/inline-python\"\n  }, \"inline-python\"), \" - Inline Python code directly in your Rust code.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/alexcrichton/socket2-rs\"\n  }, \"socket2-rs\"), \" - Provide as direct as possible access to the system's functionality for sockets as possible.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/japaric/heapless\"\n  }, \"heapless\"), \" - Static friendly data structures that don't require dynamic memory allocation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/learnmerust/arise\"\n  }, \"Arise\"), \" - Run a process \\\"forever\\\"; Run a process and spawn it when it dies.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/stjepang/easy-parallel\"\n  }, \"easy-parallel\"), \" - Run closures in parallel.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/djc/askama\"\n  }, \"Askama\"), \" - Type-safe, compiled Jinja-like templates for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/cuviper/rust-libprobe\"\n  }, \"libprobe\"), \" - Static probes for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/calebzulawski/multiversion\"\n  }, \"Multiversion\"), \" - Function multiversioning framework for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/kuchiki-rs/kuchiki\"\n  }, \"Kuchiki\"), \" - HTML/XML tree manipulation library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sharksforarms/deku\"\n  }, \"Deku\"), \" - Declarative binary reading and writing.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Munksgaard/session-types\"\n  }, \"Session Types\"), \" - Implementation of session types for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jam1garner/binread\"\n  }, \"binread\"), \" - Rust crate for helping parse structs from binary data using macro magic.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jackmott/simdeez\"\n  }, \"simdeez\"), \" - Library that abstracts over SIMD instruction sets, including ones with differing widths.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jackmott/rust-simd-noise\"\n  }, \"SIMDNoise\"), \" - Super fast SIMD noise library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/asajeffrey/josephine\"\n  }, \"Josephine\"), \" - Using JavaScript to safely manage the lifetimes of Rust data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mackwic/colored\"\n  }, \"Colored\"), \" - Coloring terminal so simple you already know how to do it.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rustsim/salva\"\n  }, \"Salva\"), \" - 2 and 3-dimensional particle-based fluid simulation engine for games and animations.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/aldanor/hdf5-rust\"\n  }, \"hdf5\"), \" - HDF5 for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/GREsau/schemars\"\n  }, \"Schemars\"), \" - Generate JSON Schema documents from Rust code.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sile/rusturn\"\n  }, \"rusturn\"), \" - Rust Implementation of TURN server and client.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/getditto/safer_ffi\"\n  }, \"safer_ffi\"), \" - Write safer FFI code in Rust without polluting it with unsafe code.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/vasi/positioned-io\"\n  }, \"positioned-io\"), \" - Read and write from offsets in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Taaitaaiger/jlrs\"\n  }, \"jlrs\"), \" - Julia bindings for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/evestera/json_typegen\"\n  }, \"json_typegen\"), \" - Rust types from JSON samples.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/samueltardieu/pathfinding\"\n  }, \"pathfinding\"), \" - Implements several pathfinding, flow, and graph algorithms in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/BurntSushi/bstr\"\n  }, \"bstr\"), \" - String type for Rust that is not required to be valid UTF-8.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zslayton/cron\"\n  }, \"cron\"), \" - Cron expression parser in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/win-t/lelet\"\n  }, \"Lelet\"), \" - Task executor that inspired by golang runtime.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/redox-os/relibc\"\n  }, \"relibc\"), \" - Portable POSIX C standard library written in Rust. It is under heavy development, and currently supports Redox and Linux.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/w3reality/wasm-mt\"\n  }, \"wasm-mt\"), \" - Multithreading library for Rust and WebAssembly.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rustsim/simba\"\n  }, \"Simba\"), \" - SIMD algebra for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/render-rs/render.rs\"\n  }, \"render\"), \" - Safe and simple template engine with the ergonomics of JSX.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/RazrFalcon/memmap2-rs\"\n  }, \"memmap2\"), \" - Cross-platform Rust API for memory mapped IO.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jonhoo/bus\"\n  }, \"bus\"), \" - Efficient, lock-free, bounded Rust broadcast channel.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/termhn/sdfu\"\n  }, \"sdfu\"), \" - Signed Distance Field Utilities.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tonarino/webrtc-audio-processing\"\n  }, \"webrtc-audio-processing\"), \" - Wrapper around PulseAudio's repackaging of WebRTC's AudioProcessing module.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/aep/elfkit\"\n  }, \"Elfkit\"), \" - Rust elf parsing, manipulation and (re)linking toolkit.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Kimundi/owning-ref-rs\"\n  }, \"owning-ref-rs\"), \" - Library for creating references that carry their owner with them.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/vertexclique/nuclei\"\n  }, \"Nuclei\"), \" - Proactive IO system which is runtime agnostic and can work with any runtime. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://lobste.rs/s/qzuwsl/nuclei_proactive_io_runtime_system\"\n  }, \"Lobsters\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/google/autocxx\"\n  }, \"Autocxx\"), \" - Tool for calling C++ from Rust in a heavily automated, but safe, fashion. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.reddit.com/r/rust/comments/iefeum/googleautocxx_calling_c_from_rust_in_a_heavily/\"\n  }, \"Reddit\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/DataDog/scipio\"\n  }, \"Scipio\"), \" - Cooperative Thread-per-Core crate for Rust & Linux based on io_uring. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.datadoghq.com/blog/engineering/introducing-scipio/\"\n  }, \"Article\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=24976533\"\n  }, \"HN\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-shell-script/rust_cmd_lib\"\n  }, \"Rust command-line library\"), \" (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=24249646\"\n  }, \"HN\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/twitter/rustcommon\"\n  }, \"rustcommon\"), \" - Common Twitter Rust lib.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Pauan/rust-dominator\"\n  }, \"rust-dominator\"), \" - Zero cost declarative DOM library using FRP signals for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bluss/maplit\"\n  }, \"maplit\"), \" - Rust container / collection literal macros for HashMap, HashSet, BTreeMap, BTreeSet.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/oxidecomputer/cio\"\n  }, \"cio\"), \" - Set of Rust libraries for accessing various APIs for doing CIO jobs. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://blog.jessfraz.com/post/the-automated-cio/\"\n  }, \"Automated CIO\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/simplestaking/ocaml-interop\"\n  }, \"ocaml-interop\"), \" - OCaml<->Rust FFI with an emphasis on safety.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/andrewhickman/fs-err\"\n  }, \"fs-err\"), \" - Simple wrapper around filesystem operations to provide more helpful error messages.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/RustCrypto/ring-compat\"\n  }, \"ring-compat\"), \" - Compatibility crate for using RustCrypto's traits with the cryptographic algorithm implementations from ring.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/briansmith/untrusted\"\n  }, \"untrusted.rs\"), \" - Safe, fast, zero-panic, zero-crashing, zero-allocation parsing of untrusted inputs in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/avitex/rust-dangerous\"\n  }, \"rust-dangerous\"), \" - Rust library for safely and explicitly parsing user-generated data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nlfiedler/magick-rust\"\n  }, \"magick-rust\"), \" - Rust bindings for ImageMagick.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/indoc\"\n  }, \"indoc\"), \" - Indented document literals for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/m4b/goblin\"\n  }, \"libgoblin\"), \" - Impish, cross-platform binary parsing crate, written in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/microsoft/com-rs\"\n  }, \"com-rs\"), \" - Rust Crate for Creating and Consuming COM APIs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/headcrab-rs/headcrab\"\n  }, \"Headcrab\"), \" - Modern Rust debugging library. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://nbaksalyar.github.io/2020/07/12/soul-of-a-new-debugger.html\"\n  }, \"The Soul of a New Debugger\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/szymonwieloch/rust-dlopen\"\n  }, \"rust-dlopen\"), \" - Rust library for opening and working with dynamic link libraries.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/benashford/rust-lazysort\"\n  }, \"rust-lazysort\"), \" - Iterate in a lazily achieved sorted order.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/alkis/decimal\"\n  }, \"decimal\"), \" - Decimal Floating Point arithmetic for rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/agausmann/declio\"\n  }, \"declio\"), \" - Declarative I/O serialization library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mpdn/rye\"\n  }, \"rye\"), \" - Minimal, x86-64-only experiment into adding fibers to Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-lang/stdsimd\"\n  }, \"stdsimd\"), \" - Rust's standard library portable SIMD API.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Diggsey/act-zero\"\n  }, \"act-zero\"), \" - Actor system for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/joshua-maros/scones\"\n  }, \"Scones\"), \" - Quick and powerful constructor/builder generation in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ctz/rustls-native-certs\"\n  }, \"rustls-native-certs\"), \" - Integration with OS certificate stores for rustls.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tokio-rs/tls\"\n  }, \"Tokio Tls\"), \" - Collection of Tokio based TLS libraries.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sebastiencs/shared-arena\"\n  }, \"shared-arena\"), \" - Thread-safe & efficient memory pool.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/elementh/random_color\"\n  }, \"random_color\"), \" - Rust crate for generating random attractive colors.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/emabee/flexi_logger\"\n  }, \"flexi_logger\"), \" - Flexible logger for rust programs that can write to stderr or to log files.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mvdnes/spin-rs\"\n  }, \"spin-rs\"), \" - Spin-based synchronization primitives.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tremor-rs/tremor-runtime\"\n  }, \"Tremor\"), \" - Event processing system for unstructured data with rich support for structural pattern matching, filtering and transformation. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.tremor.rs/\"\n  }, \"Web\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.tremor.rs/blog/2020-10-16-v09-release/\"\n  }, \"v0.9 release\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/iliekturtles/uom\"\n  }, \"uom\"), \" - Units of measurement -- type-safe zero-cost dimensional analysis.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/alexcrichton/tar-rs\"\n  }, \"tar-rs\"), \" - Tar file reading/writing for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/oxigraph/rio\"\n  }, \"Rio\"), \" - RDF parsers library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jq-rs/mles-rs\"\n  }, \"mles-rs\"), \" - Distributed publish-subscribe data service and Mles protocol reference implementation on Rust, Tokio and Serde.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/hawkw/sharded-slab\"\n  }, \"sharded-slab\"), \" - Lock-free concurrent slab. Provide pre-allocated storage for many instances of a single data type.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Hywan/inline-c-rs\"\n  }, \"inline-c\"), \" - Write and execute C code inside Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tilpner/includedir\"\n  }, \"includedir\"), \" - Include a whole directory tree at compile time.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dguo/strsim-rs\"\n  }, \"strsim-rs\"), \" - Rust implementations of string similarity metrics.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-osdev/uefi-rs\"\n  }, \"uefi-rs\"), \" - Rust wrapper for UEFI. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=24888307\"\n  }, \"HN\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-rust\"\n  }, \"OpenTelemetry-Rust\"), \" - OpenTelemetry API and SDK for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bytecodealliance/cap-std\"\n  }, \"cap-std\"), \" - Capability-oriented version of the Rust standard library. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://blog.sunfishcode.online/introducing-cap-std/\"\n  }, \"Article\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://lobste.rs/s/rlwby3/introducing_cap_std_capability_based\"\n  }, \"Lobsters\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/lotabout/fuzzy-matcher\"\n  }, \"Fuzzy Matcher\"), \" - Fuzzy Matching Library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/xdg-rs/dirs\"\n  }, \"dirs-next\"), \" - Low-level library that provides config/cache/data paths.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Xudong-Huang/generator-rs\"\n  }, \"generator-rs\"), \" - Rust stackful generator library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zshipko/image2-rs\"\n  }, \"image2\"), \" - Image processing library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/scipr-lab/zexe\"\n  }, \"ZEXE\"), \" - Rust library for decentralized private computation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/probe-rs/cargo-flash\"\n  }, \"cargo-flash\"), \" - Cargo extension for programming microcontrollers.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/gimli-rs/object\"\n  }, \"object\"), \" - Unified interface for reading and writing object file formats.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/fancy-regex/fancy-regex\"\n  }, \"fancy-regex\"), \" - Rust library for regular expressions using \\\"fancy\\\" features like look-around and backreferences.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/marshallpierce/rust-base64\"\n  }, \"rust-base64\"), \" - base64, in rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/causal-agent/scraper\"\n  }, \"scraper\"), \" - HTML parsing and querying with CSS selectors.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Manishearth/rust-gc\"\n  }, \"rust-gc\"), \" - Simple tracing (mark and sweep) garbage collector for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/lord/anchors\"\n  }, \"anchors\"), \" - Self adjusting computations in rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Traverse-Research/gpu-allocator\"\n  }, \"gpu-allocator\"), \" - Memory allocator written in pure Rust for GPU memory in Vulkan and in the future DirectX 12.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Traverse-Research/rspirv-reflect\"\n  }, \"rspirv-reflect\"), \" - Minimal SPIR-V reflection library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mozilla/rkv\"\n  }, \"rkv\"), \" - Simple, humane, typed Rust interface to LMDB.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/johannhof/difference.rs\"\n  }, \"difference.rs\"), \" - Rust text diffing library with built-in diffing assertion.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/cobalt-org/liquid-rust\"\n  }, \"liquid-rust\"), \" - Liquid templating for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/kalamay/vmap-rs\"\n  }, \"vmap-rs\"), \" - Cross-platform library for fast and safe memory-mapped IO in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/metrics-rs/metrics\"\n  }, \"metrics\"), \" - Metrics ecosystem for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/enarx/primordial\"\n  }, \"primordial\"), \" - Low-level CPU primitives.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/djkoloski/rkyv\"\n  }, \"rkyv\"), \" - Zero-copy deserialization framework for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jjyr/sparse-merkle-tree\"\n  }, \"Sparse merkle tree\"), \" - Optimized sparse merkle tree.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rusticata/x509-parser\"\n  }, \"X.509 Parser\"), \" - X.509 parser written in pure Rust. Fast, zero-copy, safe.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/GaloisInc/swanky\"\n  }, \"swanky\"), \" - Suite of rust libraries for secure multi-party computation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/pemistahl/lingua-rs\"\n  }, \"lingua-rs\"), \" - Accurate natural language detection library in the Rust ecosystem, suitable for long and short text alike.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/smol-rs/fastrand\"\n  }, \"fastrand\"), \" - Simple and fast random number generator.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/kompics/kompact\"\n  }, \"Kompact\"), \" - Component System in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/m4b/faerie\"\n  }, \"faerie\"), \" - Magical ELF and Mach-o object file writer backend.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/extendr/extendr\"\n  }, \"extendr\"), \" - Low-level R library bindings.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/fitzgen/bumpalo\"\n  }, \"bumpalo\"), \" - Fast bump allocation arena for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-embedded/r0\"\n  }, \"r0\"), \" - Memory initialization code written in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/lunatic-solutions/lunatic\"\n  }, \"Lunatic\"), \" - Erlang inspired runtime for WebAssembly. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://lunatic.solutions/\"\n  }, \"Web\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=26367029\"\n  }, \"HN\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://lobste.rs/s/2m7hak/lunatic_erlang_inspired_runtime_for_all\"\n  }, \"Lobsters\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=28008737\"\n  }, \"HN\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tesselode/kira\"\n  }, \"Kira\"), \" - Library for expressive game audio.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dropbox/rust-brotli\"\n  }, \"rust-brotli\"), \" - Brotli compressor and decompressor written in rust that optionally avoids the stdlib.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bojand/infer\"\n  }, \"infer\"), \" - Small crate to infer file and MIME type by checking the magic number signature.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/seanmonstar/pretty-env-logger\"\n  }, \"pretty-env-logger\"), \" - Pretty, easy-to-use logger for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/softdevteam/grmtools\"\n  }, \"grmtools\"), \" - Suite of Rust libraries and binaries for parsing text, both at compile-time, and run-time.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jeromefroe/hashring-rs\"\n  }, \"HashRing\"), \" - Minimal implementation of consistent hashing.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/inherent\"\n  }, \"inherent\"), \" - Make trait methods callable without the trait in scope.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/not-fl3/nanoserde\"\n  }, \"nanoserde\"), \" - Serialisation library with zero dependencies.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/teryror/coca\"\n  }, \"coca\"), \" - Allocation-free data structures that make do with the memory they're given.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zheland/typed-index-collections\"\n  }, \"typed-index-collections\"), \" - Typed index version of Rust slice and Vec containers.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/orlp/slotmap\"\n  }, \"slotmap\"), \" - Slotmap data structure for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/erased-serde\"\n  }, \"Erased Serde\"), \" - Type-erased Serialize, Serializer and Deserializer traits.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tapeinosyne/hyphenation\"\n  }, \"hyphenation\"), \" - Text hyphenation for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/innoave/genevo\"\n  }, \"genovo\"), \" - Execute genetic algorithm (GA) simulations in a customizable and extensible way.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nnethercote/dhat-rs\"\n  }, \"dhat\"), \" - Heap profiling and ad hoc profiling for Rust programs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-lang/polonius\"\n  }, \"Polonius\"), \" - Core library that models the borrow check.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/raygon-renderer/thermite\"\n  }, \"Thermite SIMD\"), \" - SIMD library focused on providing portable SIMD acceleration of SoA (Structure of Arrays) algorithms.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/fizyk20/generic-array\"\n  }, \"generic-array\"), \" - Generic array types in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/novacrazy/numeric-array\"\n  }, \"numeric-array\"), \" - Wrapper around generic-array that adds efficient numeric trait implementations.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jerry73204/par-stream\"\n  }, \"par-stream\"), \" - Asynchronous Parallel Stream for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/HadrienG2/triple-buffer\"\n  }, \"triple-buffer\"), \" - Implementation of triple buffering written in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/phil-opp/linked-list-allocator\"\n  }, \"linked-list-allocator\"), \" - Create a static allocator.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/svartalf/rust-claim\"\n  }, \"claim\"), \" - Assertion macros toolkit for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/hukumka/reformation\"\n  }, \"reformation\"), \" - Parsing via regular expressions using format syntax.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/flier/rust-fasthash\"\n  }, \"rust-fasthash\"), \" - Suite of non-cryptographic hash functions for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Arvamer/gilrs\"\n  }, \"GilRs\"), \" - Game Input Library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sile/rendezvous_hash\"\n  }, \"rendezvous_hash\"), \" - Rust implementation of Rendezvous hashing algorithm.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/metrics-rs/quanta\"\n  }, \"quanta\"), \" - Speed timing library, useful for getting the current time very quickly.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jmespath/jmespath.rs\"\n  }, \"JMESPath Rust\"), \" - Rust implementation of JMESPath, a query language for JSON.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jonhoo/stream-cancel\"\n  }, \"stream-cancel\"), \" - Rust library for interrupting asynchronous streams.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zesterer/mutation\"\n  }, \"Mutation\"), \" - Unleash the power of nightly Rust to write code that's generic over mutation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jonhoo/evmap\"\n  }, \"evmap\"), \" - Lock-free, eventually consistent, concurrent multi-value map.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ejmahler/RustFFT\"\n  }, \"RustFFT\"), \" - Mixed-radix FFT library written in pure Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/arkworks-rs/ripp\"\n  }, \"RIPP (Rust Inner Pairing Products)\"), \" - Rust library for proofs about inner pairing products, and applications built atop these.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/cksac/fake-rs\"\n  }, \"fake-rs\"), \" - Rust library for generating fake data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sunli829/xactor\"\n  }, \"Xactor\"), \" - Rust actors framework based on async-std.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dmexe/failsafe-rs\"\n  }, \"Failsafe\"), \" - Circuit breaker implementation for rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tomprogrammer/rust-ascii\"\n  }, \"rust-ascii\"), \" - ASCII-only equivalents to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"char\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"str\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"String\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/as-com/varint-simd\"\n  }, \"varint-simd\"), \" - SIMD-accelerated varint encoder and decoder in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-ndarray/ndarray-linalg\"\n  }, \"ndarray-linalg\"), \" - Linear algebra package for rust-ndarray using LAPACK binding.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/fafk/merkle_storage\"\n  }, \"Merkle Storage\"), \" - Key-value git-like storage with full history backed by RocksDB.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/cgburgess/arcode-rs\"\n  }, \"arcode-rs\"), \" - Arithmetic coder for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/withoutboats/heck\"\n  }, \"heck\"), \" - Case conversion library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/kettle11/kapp\"\n  }, \"kApp\"), \" - Pure Rust window and input library for Windows, Mac, and Web.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/assert-rs/predicates-rs\"\n  }, \"predicates-rs\"), \" - Implementation of boolean-valued predicate functions in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/assert-rs/assert_cmd\"\n  }, \"assert_cmd\"), \" - Assert process::Command - Easy command initialization and assertions.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/alexcrichton/toml-rs\"\n  }, \"toml-rs\"), \" - TOML encoding/decoding library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mgeier/rtrb\"\n  }, \"Real-Time Ring Buffer\"), \" - Wait-free single-producer single-consumer ring buffer for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mitchmindtree/daggy\"\n  }, \"daggy\"), \" - Directed acyclic graph data structure for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nrc/libhoare\"\n  }, \"LibHoare\"), \" - Design by contract style assertions for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/srijs/rust-crc32fast\"\n  }, \"crc32fast\"), \" - Fast, SIMD-accelerated CRC32 (IEEE) checksum computation in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/joshua-maros/ouroboros\"\n  }, \"Ouroboros\"), \" - Easy self-referential struct generation for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/facebookincubator/gazebo\"\n  }, \"Gazebo\"), \" - Rust library containing a collection of small well-tested primitives.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/cda-group/arcon\"\n  }, \"Arcon\"), \" - Runtime for Writing Streaming Applications in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Lucretiel/joinery\"\n  }, \"joinery\"), \" - Rust library for generically joining iterables with a separator.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/EmbarkStudios/rpmalloc-rs\"\n  }, \"rpmalloc-rs\"), \" - Cross-platform Rust global memory allocator using rpmalloc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/baoyachi/shadow-rs\"\n  }, \"shadow-rs\"), \" - Build-time information stored in your binary.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jni-rs/jni-rs\"\n  }, \"jni-rs\"), \" - Rust bindings to the Java Native Interface.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/igiagkiozis/plotly\"\n  }, \"Plotly\"), \" - Plotting library for Rust powered by Plotly.js\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Jeffail/spiril\"\n  }, \"Spiril\"), \" - Rust library for genetic algorithms.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/domenicquirl/cstree\"\n  }, \"cstree\"), \" - Library for creating and working with concrete syntax trees (CSTs).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/fadeevab/cocoon\"\n  }, \"Cocoon\"), \" - Simple and relyable secure storage with strong encryption and format validation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/irauta/bitreader\"\n  }, \"BitReader\"), \" - Helper type to extract strings of bits from a slice of bytes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zargony/fuse-rs\"\n  }, \"Rust FUSE\"), \" - Rust library for filesystems in userspace (FUSE).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bparli/bpfs\"\n  }, \"bpfs\"), \" - Rust In-Memory Filesystem.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/xacrimon/flize\"\n  }, \"flize\"), \" - Non global, configurable and fast concurrent resource reclamation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-num/num-traits\"\n  }, \"num-traits\"), \" - Numeric traits for generic mathematics in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/khvzak/mlua\"\n  }, \"mlua\"), \" - High level Lua bindings to Rust with async/await support..\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/khvzak/victoria-dom\"\n  }, \"victoria-dom\"), \" - Minimalistic HTML parser with CSS selectors.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/abbychau/multiqueue2\"\n  }, \"MultiQueue2\"), \" - Fast MPMC Broadcast Queue.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/linkme\"\n  }, \"Linkme\"), \" - Safe cross-platform linker shenanigans.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Jake-Shadle/hold_my_beer\"\n  }, \"hold_my_beer\"), \" - Don't let unsafe get you down.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/myfreeweb/rusty-sandbox\"\n  }, \"rusty-sandbox\"), \" - Sandboxing library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/etcdv3/etcd-client\"\n  }, \"etcd-client\"), \" - etcd v3 API client for Rust. It provides asynchronous client backed by tokio and tonic.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dimforge/alga\"\n  }, \"alga\"), \" - Abstract algebra for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jamesmunns/postcard\"\n  }, \"Postcard\"), \" - no_std + serde compatible message library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/lumol-org/soa-derive\"\n  }, \"soa-derive\"), \" - Array of Struct to Struct of Array helpers in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/aftix/bacon\"\n  }, \"bacon\"), \" - Scientific Computing in Rust. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://aftix.xyz/home/bacon/\"\n  }, \"Article\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/carllerche/slab\"\n  }, \"slab\"), \" - Pre-allocated storage for a uniform data type.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/axiomhq/rust-cuckoofilter\"\n  }, \"Cuckoo Filter\"), \" - Bloom filter replacement for approximated set-membership queries.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/MarcusRainbow/QuantMath\"\n  }, \"QuantMath\"), \" - Financial maths library for risk-neutral pricing and risk. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=25814113\"\n  }, \"HN\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/egraphs-good/egg\"\n  }, \"Egg\"), \" - Flexible, high-performance e-graph library. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://egraphs-good.github.io/\"\n  }, \"Web\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.youtube.com/watch?v=LKELTEOFY-s\"\n  }, \"Talk\"), \") (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=26587209\"\n  }, \"HN\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/carllerche/codegen\"\n  }, \"Codegen\"), \" - Provides an builder API to assist in generating Rust code.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mitsuhiko/similar\"\n  }, \"similar\"), \" - High level diffing library for rust based on diffs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-osdev/x86_64\"\n  }, \"x86_64\"), \" - Library to program x86_64 hardware.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/PSeitz/lz4_flex\"\n  }, \"lz4_flex\"), \" - Pure Rust implementation of raw LZ4 compression/decompression.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/uazu/stakker\"\n  }, \"Stakker\"), \" - Lightweight low-level single-threaded actor runtime.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/maekawatoshiki/vicis\"\n  }, \"Vicis\"), \" - Manipulate LLVM-IR in Pure Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/EmbarkStudios/tryhard\"\n  }, \"tryhard\"), \" - Easily retry futures.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Rahix/visualizer2\"\n  }, \"visualizer2\"), \" - Audio Visualization in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mvirkkunen/rtt-target\"\n  }, \"rtt-target\"), \" - Target side implementation of the RTT (Real-Time Transfer) I/O protocol.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/fitzgen/shuffling-allocator\"\n  }, \"shuffling-allocator\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/antifuchs/governor\"\n  }, \"governor\"), \" - Library for regulating the flow of data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jonhoo/flurry\"\n  }, \"flurry\"), \" - Port of Java's ConcurrentHashMap to Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/aldanor/fast-float-rust\"\n  }, \"fast-float\"), \" - Super-fast decimal number parser from strings into floats.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Kogia-sima/sailfish\"\n  }, \"saifish\"), \" - Simple, small, and extremely fast template engine for Rust. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://sailfish.netlify.app/en/\"\n  }, \"Docs\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/smol-rs/async-task\"\n  }, \"async-task\"), \" - Task abstraction for building executors.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tikv/minitrace-rust\"\n  }, \"Minitrace\"), \" - High-performance timeline tracing library for Rust, used by TiKV.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/irh/freeverb-rs\"\n  }, \"freeverb-rs\"), \" - Rust implementation of the Freeverb algorithm.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/paritytech/trie\"\n  }, \"Trie\"), \" - Generic implementation of the Base-16 Modified Merkle Tree (\\\"Trie\\\") data structure.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mehcode/config-rs\"\n  }, \"config-rs\"), \" - Layered configuration system for Rust applications (with strong support for 12-factor applications).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/matklad/countme\"\n  }, \"countme\"), \" - Library to quickly get the live/total/max counts of allocated instances.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/deviceplug/btleplug\"\n  }, \"btleplug\"), \" - Rust Cross-Platform Host-Side Bluetooth LE Access Library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/GuillaumeGomez/sysinfo\"\n  }, \"sysinfo\"), \" - System handler to interact with processes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Axect/Peroxide\"\n  }, \"Peroxide\"), \" - Rust numeric library contains linear algebra, numerical analysis, statistics and machine learning tools with R, MATLAB, Python like macros.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/akiles/embassy\"\n  }, \"Embassy\"), \" - Rust embedded async tools.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mozilla/uniffi-rs\"\n  }, \"uniffi\"), \" - Multi-language bindings generator for rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/servo/gaol\"\n  }, \"gaol\"), \" - Cross-platform application sandboxing for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/taiki-e/auto_enums\"\n  }, \"auto_enums\"), \" - Library for to allow multiple return types by automatically generated enum.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/taiki-e/pin-project\"\n  }, \"pin-project\"), \" - Crate for safe and ergonomic pin-projection.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/RustAudio/deepspeech-rs\"\n  }, \"deepspeech-rs\"), \" - Rust bindings of Mozilla's DeepSpeech library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/playXE/alloca-rs\"\n  }, \"alloca-rs\"), \" - Mostly safe no_std wrapper for alloca in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/RustAudio/cpal\"\n  }, \"CPAL\"), \" - Cross-platform audio I/O library in pure Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meilisearch/Tokenizer\"\n  }, \"Tokenizer\"), \" - Library used by Meilisearch to tokenize queries and documents.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/dtoa\"\n  }, \"dtoa\"), \" - Fast functions for printing floating-point primitives to an io::Write.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/pdeljanov/Symphonia\"\n  }, \"Symphonia\"), \" - Rust audio decoding and media demuxing library supporting OGG, FLAC, MP3, and WAV.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"httops://github.com/Byron/treediff-rs\"\n  }, \"treediff-rs\"), \" - Library to compare arbitrary structured data of the same type, efficiently.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/alecmocatta/replace_with\"\n  }, \"replace_with\"), \" - Temporarily take ownership of a value at a mutable location, and replace it with a new value based on the old one.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/moka-rs/moka\"\n  }, \"Moka\"), \" - Fast, concurrent cache library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rlei/nonblockinghashmap\"\n  }, \"nonblockinghashmap\"), \" - Non-blocking hash map in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/markschl/thread_io\"\n  }, \"thread_io\"), \" - Rust crate for performing I/O in background thread.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jeromefroe/lru-rs\"\n  }, \"LRU Cache\"), \" - Implementation of a LRU cache in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/aper-dev/aper\"\n  }, \"Aper\"), \" - Synchronized state machines for Rust over WebSockets.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dimforge/parry\"\n  }, \"Parry\"), \" - 2D and 3D collision-detection library for Rust.rs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rillrate/meio\"\n  }, \"meio\"), \" - Async actor framework for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/paupino/rust-decimal\"\n  }, \"Decimal\"), \" - Decimal Implementation written in pure Rust suitable for financial calculations.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/lemunozm/message-io\"\n  }, \"message-io\"), \" - Event-driven message library for building network applications easy and fast.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/graphql-rust/graphql-parser\"\n  }, \"GraphQL Parser\"), \" - Parser, formatter and AST for graphql query and schema definition language for rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rousan/multer-rs\"\n  }, \"multer-rs\"), \" - Async parser for multipart/form-data content-type in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ipetkov/conch-runtime\"\n  }, \"conch-runtime\"), \" - Rust library/runtime for executing Unix shell commands.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/aweinstock314/rust-clipboard\"\n  }, \"rust-clipboard\"), \" - System Clipboard interfacing library in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/smol-rs/async-io\"\n  }, \"async-io\"), \" - Async I/O and timers.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dorianprill/stroke-rs\"\n  }, \"stroke-rs\"), \" - Zero-allocation library providing const-generic implementations of B\\xE9zier curves, B-Spline curves.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/astonbitecode/j4rs\"\n  }, \"j4rs\"), \" - Java for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/cuviper/autocfg\"\n  }, \"autocfg\"), \" - Rust library for build scripts to automatically configure code based on compiler support.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/SergioBenitez/Figment\"\n  }, \"Figment\"), \" - Semi-hierarchical configuration library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-fuzz/arbitrary\"\n  }, \"Arbitrary\"), \" - Trait for generating structured data from arbitrary, unstructured input.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/openrr/rrt\"\n  }, \"RRT\"), \" - Rapidly-exploring Random Tree library in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/matthieu-m/storage-poc\"\n  }, \"storage-poc\"), \" - Exploration of using Storage instead of Allocator to parameterize collections in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nabijaczleweli/safe-transmute-rs\"\n  }, \"safe-transmute-rs\"), \" - Safe-guarded transmute for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dimpolo/partialdebug\"\n  }, \"partialdebug\"), \" - Derive Debug for types where not all fields implement Debug.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Lokathor/wide\"\n  }, \"wide\"), \" - Crate to help you go wide. By which I mean use SIMD stuff.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/alecdotninja/tailcall\"\n  }, \"Tailcall\"), \" - Safe, zero-cost tail recursion for stable Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/async-email/async-imap\"\n  }, \"async-imap\"), \" - Async IMAP implementation in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/yasammez/nachricht\"\n  }, \"nachricht\"), \" - Self-describing data interchange format.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/NieDzejkob/enumflags2\"\n  }, \"Enumflags\"), \" - Rust library for efficiently representing sets of data-less enums.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/fpagliughi/cooper-rs\"\n  }, \"cooper\"), \" - Simple in-process Actor library in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/MayorMonty/mtrx\"\n  }, \"Mtrx\"), \" - Type-safe matrix operations using Rust's const generics.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-lang/rustwide\"\n  }, \"Rustwide\"), \" - Execute your code on the Rust ecosystem.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Manishearth/array-init\"\n  }, \"array-init\"), \" - Safe wrapper for initializing arrays.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-console/voladdress\"\n  }, \"voladdress\"), \" - Crate to make volatile memory operations easy to work with.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/djc/bb8\"\n  }, \"bb8\"), \" - Full-featured connection pool, designed for asynchronous connections (using tokio).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/pchampin/sophia_rs\"\n  }, \"Sophia\"), \" - Rust toolkit for RDF and Linked Data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/BVE-Reborn/switchyard\"\n  }, \"switchyard\"), \" - Real-time compute-focused async executor with job pools, thread-local data, and priorities.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tokio-rs/tokio-uring\"\n  }, \"tokio-uring\"), \" - tokio-uring backed runtime for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rustomax/rust-iterators\"\n  }, \"rust-iterators\"), \" - Basic Rust iterator usage.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/servo/uluru\"\n  }, \"uluru\"), \" - Simple, fast, LRU cache implementation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/typetag\"\n  }, \"Typetag\"), \" - Serde serializable and deserializable trait objects.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/cloudhead/popol\"\n  }, \"popol\"), \" - Minimal non-blocking I/O for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/petrosagg/escher\"\n  }, \"escher\"), \" - Self-referencial structs using async stacks.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/chinedufn/dipa\"\n  }, \"dipa\"), \" - Makes it easy to efficiently delta encode large Rust data structures.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jmacdonald/scribe\"\n  }, \"Scribe\"), \" - Text editor toolkit.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/kvark/mint\"\n  }, \"mint\"), \" - Math Interoperability Types.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/luizirber/niffler\"\n  }, \"niffler\"), \" - Simple and transparent support for compressed files.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/gyscos/zstd-rs\"\n  }, \"zstd-rs\"), \" - Rust binding for the zstd compression library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/utkarshkukreti/markup.rs\"\n  }, \"markup.rs\"), \" - Blazing fast, type-safe template engine for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/argmin-rs/argmin\"\n  }, \"argmin\"), \" - Mathematical optimization in pure Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/popzxc/trait-set\"\n  }, \"trait-set\"), \" - Trait aliases on stable Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Robbepop/string-interner\"\n  }, \"String Interner\"), \" - Data structure to efficiently intern, cache and restore strings.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rusticstuff/simdutf8\"\n  }, \"simdutf8\"), \" - SIMD-accelerated UTF-8 validation for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/korken89/biquad-rs\"\n  }, \"biquad\"), \" - Rust library for digital second order IIR filtrers, also known as biquads.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jjpe/deltoid\"\n  }, \"Deltoid\"), \" - Type-driven rust library that can be used to calculate deltas.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/servo/ipc-channel\"\n  }, \"ipc-channel\"), \" - Multiprocess drop-in replacement for Rust channels.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/maminrayej/prepona\"\n  }, \"Prepona\"), \" - Graph crate with simplicity in mind.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/BinChengZhao/delay-timer\"\n  }, \"delay-timer\"), \" - Time-manager of delayed tasks.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Stranger6667/jsonschema-rs\"\n  }, \"jsonschema\"), \" - JSON Schema validation library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/georust/rstar\"\n  }, \"rstar\"), \" - R\", \"*\", \"-tree library for the rust ecosystem.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/aclysma/profiling\"\n  }, \"profiling\"), \" - Provides a very thin abstraction over instrumented profiling crates like puffin, optick, tracy, and superluminal-perf.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zshipko/ocaml-rs\"\n  }, \"ocaml-rs\"), \" - OCaml extensions in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/murarth/gumdrop\"\n  }, \"gumdrop\"), \" - Rust option parser with custom derive support.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/BurntSushi/memchr\"\n  }, \"memchr\"), \" - Optimized string search routines for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/wvwwvwwv/scalable-concurrent-containers\"\n  }, \"Scalable Concurrent Containers\"), \" - Scalable concurrent data structures for database management systems.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Alexhuszagh/rust-lexical\"\n  }, \"lexical\"), \" - Fast lexical conversion routines for both std and no_std environments.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/emilk/drop-merge-sort\"\n  }, \"Drop-Merge-Sort\"), \" - Adaptive sorting algorithm.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/DanCardin/sauce\"\n  }, \"Sauce\"), \" - Context specific everything.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tokio-rs/console\"\n  }, \"tokio-console\"), \" - Diagnostics and debugging tool for asynchronous Rust programs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/paritytech/jsonrpsee\"\n  }, \"jsonrpsee\"), \" - Rust JSON-RPC library on top of async/await.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Lokathor/bytemuck\"\n  }, \"bytemuck\"), \" - Crate for mucking around with piles of bytes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Kerollmops/heed\"\n  }, \"heed\"), \" - Fully typed LMDB/MDBX wrapper with minimum overhead.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/cberner/fuser\"\n  }, \"FUSE-Rust\"), \" - Rust library crate for easy implementation of FUSE filesystems in userspace.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tarcieri/micromath\"\n  }, \"micromath\"), \" - Embedded Rust arithmetic, 2D/3D vector, and statistics library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/reem/rust-ordered-float\"\n  }, \"Ordered Floats\"), \" - Provides several wrapper types for Ord and Eq implementations on f64.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/CAD97/sorbus\"\n  }, \"sorbus\"), \" - Generic \\\"green\\\" syntax tree implementation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/CAD97/pointer-utils\"\n  }, \"Pointer Utils\"), \" - Collection of small utilities for working with pointer types in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tokio-rs/valuable\"\n  }, \"Valuable\"), \" - Provides object-safe value inspection. Use cases include passing structured data to trait objects and object-safe serialization.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/semver\"\n  }, \"semver\"), \" - Parser and evaluator for Cargo's flavor of Semantic Versioning.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/afnanenayet/hashed-permutation\"\n  }, \"hashed-permutation\"), \" - An implementation of Kensler's hashed permutation algorithm.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/HarrisonMc555/array2d\"\n  }, \"Array2D\"), \" - Statically-sized two-dimensional array written in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/cessen/ropey\"\n  }, \"Ropey\"), \" - utf8 text rope for manipulating and editing large texts.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bluss/twoway\"\n  }, \"Twoway\"), \" - Fast substring search for strings and byte strings, using the two-way algorithm.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/amethyst/serde-diff\"\n  }, \"serde-diff\"), \" - Utility for comparing two structs and re-applying the differences to other structs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sagebind/sluice\"\n  }, \"Sluice\"), \" - Asynchronous byte buffers and pipes for concurrent I/O programming.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/terminusdb/terminusdb-store\"\n  }, \"terminusdb-store\"), \" - Tokio-enabled data store for triple data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/async-rs/async-attributes\"\n  }, \"async-attributes\"), \" - Experimental language-level polyfills for Async Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/koute/speedy\"\n  }, \"speedy\"), \" - Fast binary serialization framework.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jonasbb/serde_with\"\n  }, \"serde_with\"), \" - Custom de/serialization functions for Rust's serde using the with-annotation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zhiburt/tabled\"\n  }, \"tabled\"), \" - Easy to use library for pretty print tables of Rust structs and enums.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tokio-rs/async-stream\"\n  }, \"async-stream\"), \" - Asynchronous streams for Rust using async & await notation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/kanidm/concread\"\n  }, \"Concread\"), \" - Concurrently Readable Data Structures for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/alecmocatta/cap\"\n  }, \"cap\"), \" - Allocator that can track and limit memory usage.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/InstantDomain/instant-distance\"\n  }, \"Instant Distance\"), \" - Fast approximate nearest neighbor searching in Rust, based on HNSW index.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/matthieu-m/static-rc\"\n  }, \"static-rc\"), \" - Compile-time reference counting.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/async-raft/async-raft\"\n  }, \"async raft\"), \" - Implementation of the Raft distributed consensus protocol using the Tokio framework.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/apache/arrow-rs\"\n  }, \"arrow-rs\"), \" - Native Rust implementation of Apache Arrow.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/fiji-flo/gtmpl-rust\"\n  }, \"gtmpl-rust\"), \" - Go text/template for rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/gz/rust-x86\"\n  }, \"rust-x86\"), \" - Rust library to use x86 (amd64) specific functionality and registers.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/granne/granne\"\n  }, \"granne\"), \" - Graph-based Approximate Nearest Neighbor Search.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/pola-rs/polars\"\n  }, \"Polars\"), \" - Fast multi-threaded DataFrame library in Rust and Python.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/neithernut/transiter\"\n  }, \"TransIter\"), \" - Iterator suitable for navigating recursive structures and DAGs in rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/brson/stdx\"\n  }, \"stdx\"), \" - Missing batteries of Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/appaquet/exocore\"\n  }, \"Exocore\"), \" - Distributed applications framework with private and encrypted data storage.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/RustAudio/rodio\"\n  }, \"rodio\"), \" - Rust audio playback library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mccolljr/segvec\"\n  }, \"segvec\"), \" - SegVec data structure for rust. Similar to Vec, but allocates memory in chunks of increasing size.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-cli/confy\"\n  }, \"confy\"), \" - Zero-boilerplate configuration management in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/AndrasKovacs/flatparse\"\n  }, \"flatparse\"), \" - Fast parsing from bytestrings.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/porglezomp-misc/live-reloading-rs\"\n  }, \"Live Reload\"), \" - Live reloading for Rust programming.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/evolutics/iftree\"\n  }, \"Iftree\"), \" - Include many files in your Rust code for self-contained binaries.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zesterer/ariadne\"\n  }, \"Ariadne\"), \" - Fancy error diagnostics & reporting crate.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zesterer/chumsky\"\n  }, \"Chumsky\"), \" - Friendly parser combinator crate that makes writing LL(1) parsers with error recovery easy.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/irrustible/async-backplane\"\n  }, \"async-backplane\"), \" - Easy, Erlang-inspired fault-tolerance framework for Rust Futures.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/edgeandnode/eventuals\"\n  }, \"Eventuals\"), \" - Eventually consistent values for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/kdy1/cargo-profile\"\n  }, \"cargo-profile\"), \" - Profiling rust program made easy.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jorgecarleitao/arrow2\"\n  }, \"Arrow2\"), \" - Transmute-free Rust library to work with the Arrow format.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/maciejhirsz/beef\"\n  }, \"beef\"), \" - Faster, more compact implementation of std::borrow::Cow.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/uuid-rs/uuid\"\n  }, \"uuid\"), \" - Generate and parse UUIDs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/piquette/quantlib\"\n  }, \"QuantLib\"), \" - Idiomatic rust implementation of the QuantLib C++ quantitative finance library.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/emoon/dynamic_reload\"\n  }, \"dynamic_reload\"), \" - Dynamic reloading of shared libraries.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/klingtnet/rosc\"\n  }, \"rosc\"), \" - OSC library for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/yjs/y-crdt\"\n  }, \"Y CRDT\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/hora-search/hora\"\n  }, \"Hora\"), \" - Approximate nearest neighbor search algorithm library. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://horasearch.com/\"\n  }, \"Web\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/immortal/fork\"\n  }, \"fork\"), \" - Library for creating a new process detached from the controlling terminal (daemon) using the fork and setsid syscalls.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/orlp/peekread\"\n  }, \"peekread\"), \" - Allows you to take an arbitrary Read stream and 'peek ahead' into the stream without consuming the original stream.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/boltlabs-inc/dialectic\"\n  }, \"Dialectic\"), \" - Transport-polymorphic, asynchronous session types for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jdrouet/mrml\"\n  }, \"MRML\"), \" - Reimplementation of the nice MJML markup language in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/p2panda/p2panda\"\n  }, \"p2panda\"), \" - Provides all tools required to write a client for the p2panda network.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/estk/log4rs\"\n  }, \"log4rs\"), \" - Highly configurable logging framework for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/richardanaya/executor\"\n  }, \"executor\"), \" - Minimalistic async/await executor for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/alexcrichton/wait-timeout\"\n  }, \"wait-timeout\"), \" - Waiting on a child process with a timeout in Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-random/getrandom\"\n  }, \"getrandom\"), \" - Small cross-platform library to securely get random data (entropy).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-lang/stdarch\"\n  }, \"stdarch\"), \" - Rust's standard library SIMD components.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ComLarsic/gallium_ecs\"\n  }, \"Gallium\"), \" - Simple entity-component-system crate for rust with serialization support.\")), mdx(\"h2\", {\n    \"id\": \"cargo-plugins\"\n  }, \"Cargo Plugins\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/cmyr/cargo-instruments\"\n  }, \"cargo-instruments\"), \" - Cargo plugin to generate Xcode Instruments trace files.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/lu-zero/cargo-c\"\n  }, \"cargo-c\"), \" - Cargo C-ABI helpers.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/EmbarkStudios/cargo-deny\"\n  }, \"cargo-deny\"), \" - Cargo plugin to help you manage large dependency graphs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/killercup/cargo-edit\"\n  }, \"cargo-edit\"), \" - Utility for managing cargo dependencies from the command line.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/svenstaro/cargo-profiler\"\n  }, \"cargo-profiler\"), \" - Cargo subcommand to profile binaries.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/kbknapp/cargo-outdated\"\n  }, \"cargo-outdated\"), \" - Cargo subcommand for displaying when Rust dependencies are out of date.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/regexident/cargo-modules\"\n  }, \"cargo-modules\"), \" - Cargo plugin for showing a tree-like overview of a crate's modules.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sfackler/cargo-tree\"\n  }, \"cargo-tree\"), \" - Cargo subcommand that visualizes a crate's dependency graph in a tree-like format.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/matthiaskrgr/cargo-cache\"\n  }, \"cargo cache\"), \" - Manage cargo cache (\\\\${CARGO_HOME}, ~/.cargo/), print sizes of dirs and remove dirs selectively.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/japaric/stack-sizes\"\n  }, \"stack-sizes\"), \" - Tools to print stack usage information emitted by LLVM in human readable format.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/drahnr/cargo-spellcheck\"\n  }, \"cargo-spellcheck\"), \" - Checks all your documentation for spelling mistakes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/TimNN/cargo-lipo\"\n  }, \"cargo-lipo\"), \" - Cargo subcommand to automatically create universal libraries for iOS.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/cargo-expand\"\n  }, \"cargo-expand\"), \" - Subcommand to show result of macro expansion.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/fornwall/rust-script\"\n  }, \"rust-script\"), \" - Rust files and expressions as scripts without any setup or compilation step. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://rust-script.org/\"\n  }, \"Web\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/alopatindev/cargo-limit\"\n  }, \"cargo-limit\"), \" - Cargo with less noise: warnings are skipped until errors are fixed, etc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/deadlinks/cargo-deadlinks\"\n  }, \"cargo-deadlinks\"), \" - Check your cargo doc documentation for broken links.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/icefoxen/cargo-osha\"\n  }, \"cargo-osha\"), \" - Cargo plugin to list unsafe code in a Rust project.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mihai-dinculescu/cargo-wipe\"\n  }, \"Cargo Wipe\"), \" - Recursively finds and optionally wipes all \\\"target\\\" or \\\"node_modules\\\" folders that are found in the current path.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/matklad/cargo-xtask\"\n  }, \"cargo xtask\"), \" - Way to add free-form automation to a Rust project, a-la make, npm run or bespoke bash scripts.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-embedded/cargo-binutils\"\n  }, \"cargo-binutils\"), \" - Cargo subcommands to invoke the LLVM tools shipped with the Rust toolchain.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/probe-rs/cargo-embed\"\n  }, \"cargo-embed\"), \" - Cargo extension for working with microcontrollers.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Bunogi/cargo-makedocs\"\n  }, \"cargo makedocs\"), \" - Cargo subcommand to build documentation for development easier.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/taiki-e/cargo-hack\"\n  }, \"cargo-hack\"), \" - Cargo subcommand to provide some options useful for testing and continuous integration.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/knurling-rs/probe-run\"\n  }, \"probe-run\"), \" - Run embedded programs just like native ones.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/pksunkara/cargo-up\"\n  }, \"cargo-up\"), \" - Automatically upgrade breaking changes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nabijaczleweli/cargo-update\"\n  }, \"cargo-update\"), \" - cargo subcommand for checking and applying updates to installed executables.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/BrainiumLLC/cargo-mobile\"\n  }, \"cargo-mobile\"), \" - Rust on mobile made easy.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/holmgr/cargo-sweep\"\n  }, \"Cargo-sweep\"), \" - Cargo subcommand for cleaning up unused build files generated by Cargo.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-secure-code/cargo-supply-chain\"\n  }, \"cargo-supply-chain\"), \" - Gather author, contributor and publisher data on crates in your dependency graph.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/denzp/cargo-wharf\"\n  }, \"Cargo Wharf\"), \" - Cacheable and efficient Docker images builder for Rust.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mmstick/cargo-deb\"\n  }, \"cargo-deb\"), \" - Cargo subcommand that generates Debian packages from information in Cargo.toml.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sgeisler/cargo-remote\"\n  }, \"Cargo Remote\"), \" - Cargo subcommand to compile rust projects remotely.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/iomentum/cargo-breaking\"\n  }, \"cargo-breaking\"), \" - Compares a crate's public API between two different branches, shows what changed, and suggests the next version according to semver.\")), mdx(\"h2\", {\n    \"id\": \"links\"\n  }, \"Links\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.rs/\"\n  }, \"Docs.rs\"), \" - Search rust packages. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-lang/docs.rs\"\n  }, \"Code\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://lib.rs/\"\n  }, \"Lib.rs\"), \" - Fast, lightweight, opinionated, unofficial alternative to crates.io.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/yoshuawuyts/knowledge/blob/dd5cbf2d68bb85fa2e150a607b3267c2d36bc37b/computers/rust/packages.md\"\n  }, \"Some more rust packages\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/not-yet-awesome-rust/not-yet-awesome-rust\"\n  }, \"Curated list of Rust code and resources that do NOT exist yet, but would be beneficial to the Rust community\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/request-for-implementation\"\n  }, \"Crates that don't exist, but should\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://codesearch.aelve.com/rust\"\n  }, \"Aelve Rust packages search\"), \" - Grep over package repositories.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://blog.yoshuawuyts.com/error-handling-survey/\"\n  }, \"Overview of Rust error handling libraries (2019)\"), \" (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://news.ycombinator.com/item?id=21606221\"\n  }, \"HN\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/cmyr/rust-dash-docset-gen\"\n  }, \"Quickly generate Dash docsets for third-party Rust crates\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Byron/crates-io-cli-rs\"\n  }, \"Interact with crates.io from the command-line\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://rustsim.org/\"\n  }, \"Rustsim\"), \" - Rust crates for numerical simulation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/robinst/linkify\"\n  }, \"linkify\"), \" - Rust library to find links such as URLs and email addresses in plain text, handling surrounding punctuation correctly.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/est31/cargo-udeps\"\n  }, \"cargo-udeps\"), \" - Find unused dependencies in Cargo.toml\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/pksunkara/cargo-workspaces\"\n  }, \"cargo-workspaces\"), \" - Tool for managing cargo workspaces and their packages, inspired by lerna.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/facebookincubator/cargo-guppy\"\n  }, \"cargo-guppy\"), \" - Track and query Cargo dependency graphs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/moriturus/ktra\"\n  }, \"Ktra\"), \" - Your Little Cargo Registry.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://rustsec.org/\"\n  }, \"RustSec\"), \" - Security advisory database for Rust crates published through crates.io. (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/RustSec/advisory-db\"\n  }, \"Code\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Kixiron/rust-langdev\"\n  }, \"Language development libraries for Rust\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ChrisMacNaughton/cargo-cacher\"\n  }, \"cargo-cacher\"), \" - Caching server for crates + cargo.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://sixtyfps.io/blog/expose-rust-library-to-other-languages.html\"\n  }, \"Expose a Rust Library to Other Languages (2021)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-lang/rust-semverver\"\n  }, \"rust-semverver\"), \" - Automatic checking for semantic versioning in library crates.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://fy.blackhats.net.au/blog/html/2021/02/16/against_packaging_rust_crates.html\"\n  }, \"Against Packaging Rust Crates (2021)\"), \" (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://lobste.rs/s/unaq3j/against_packaging_rust_crates\"\n  }, \"Lobsters\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/SergioBenitez/proc-macro-starter\"\n  }, \"Starter code for writing procedural macros in Rust\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/db-dump\"\n  }, \"crates.io database dum\"), \" - Library for scripting analyses against crates.io's database dumps.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-lang/crater\"\n  }, \"Crater\"), \" - Tool to run experiments across parts of the Rust ecosystem.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Hirevo/alexandrie\"\n  }, \"Alexandrie\"), \" - Modular alternative crate registry for Rust suitable for use with Cargo.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sunng87/cargo-release\"\n  }, \"Cargo Release\"), \" - Cargo subcommand \\\"release\\\": everything about releasing a rust crate.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://dev.to/thepuzzlemaker/the-most-underrated-but-useful-rust-standard-library-type-59b1\"\n  }, \"The most underrated but useful Rust standard library type (2021)\"), \" (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://lobste.rs/s/8oq6km/most_underrated_useful_rust_standard\"\n  }, \"Lobsters\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/kutometa/carnet\"\n  }, \"Carnet\"), \" - Small tool that imposes additional security constraints on Rust's official package manager, Cargo.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/pbzweihander/rust-trending\"\n  }, \"rust-trending\"), \" - Twitter bot to tweet trending Rust libraries.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/oxalica/nocargo\"\n  }, \"nocargo\"), \" - Cargo in nix.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.reddit.com/r/rust/comments/nsvyxq/what_are_the_most_professional_crates/\"\n  }, \"What are the most \\\"professional\\\" crates? (2021)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dtolnay/cargo-tally\"\n  }, \"Cargo tally\"), \" - Graph the number of crates that depend on your crate over time.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-cc/awesome-cryptography-rust\"\n  }, \"Awesome Cryptography Rust\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rust-lang/libs-team\"\n  }, \"Rust Libs Team\"), \" - Maintains and manages the Rust standard library, and makes sure crates in the Rust organization are maintained.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/anixe/doku\"\n  }, \"Doku\"), \" - Framework for building documentation with code-as-data methodology in mind.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/yusdacra/nix-cargo-integration\"\n  }, \"nix-cargo-integration\"), \" - Library to easily and effortlessly integrate Cargo projects with Nix.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mgeisler/version-sync\"\n  }, \"version-sync\"), \" - Keep your Version Numbers in Sync with Cargo.toml.\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"# Rust libraries\n\n## CLI\n\n- [slap](https://github.com/agnipau/slap) - Painless shell argument parsing and dependency check.\n- [dialoguer](https://github.com/mitsuhiko/dialoguer) - Rust utility library for nice command line prompts and similar things.\n- [Abscissa](https://github.com/iqlusioninc/abscissa) - Microframework for building Rust applications (either CLI tools or network/web services).\n- [Argh](https://github.com/google/argh) - Opinionated Derive-based argument parser optimized for code size.\n- [tui-rs](https://github.com/fdehau/tui-rs) - Build terminal user interfaces and dashboards using Rust.\n- [StructOpt](https://github.com/TeXitoi/structopt) - Parse command line arguments by defining a struct.\n- [pico-args](https://github.com/RazrFalcon/pico-args) - Ultra simple CLI arguments parser.\n- [termcolor](https://github.com/BurntSushi/termcolor) - Cross platform terminal colors for Rust.\n- [Comfy-table](https://github.com/Nukesor/comfy-table) - Library for building beautiful terminal tables with automatic content wrapping.\n- [owo-colors](https://github.com/jam1garner/owo-colors) - Zero-allocation no_std-compatible zero-cost way to add color to your Rust terminal.\n- [Console Engine](https://github.com/VincentFoulon80/console_engine) - Simple terminal framework to draw things and manage user input.\n- [console](https://github.com/mitsuhiko/console) - Library for Rust that provides access to various terminal features so you can build nicer looking command line interfaces.\n- [termimad](https://github.com/Canop/termimad) - Library to display rich (Markdown) snippets and texts in a rust terminal application.\n- [indicatif](https://github.com/mitsuhiko/indicatif) - Rust library for indicating progress in command line applications to users.\n- [xshell](https://github.com/matklad/xshell) - Provides a set of cross-platform utilities for writing ergonomic \"bash\" scripts.\n- [devx](https://github.com/elastio/devx) - Collection of utilities for writing your own dev scripts.\n- [RustyLine](https://github.com/kkawakam/rustyline) - Readline Implementation in Rust.\n- [seahorse](https://github.com/ksk001100/seahorse) - Minimal CLI framework written in Rust.\n- [conch-parser](https://github.com/ipetkov/conch-parser) - Rust library for parsing Unix shell commands.\n- [cli-table](https://github.com/devashishdxt/cli-table) - Rust crate for printing tables on command line.\n- [youchoose](https://github.com/nathom/youchoose) - Lightweight terminal menu for Rust.\n- [Lexopt](https://github.com/blyxxyz/lexopt) - Minimalist pedantic command line parser.\n\n## Web\n\n- [Salvo](https://github.com/salvo-rs/salvo) - Simple Rust web framework.\n- [ntex](https://github.com/ntex-rs/ntex) - Framework for composable networking services.\n- [Isahc](https://github.com/sagebind/isahc) - Practical HTTP client that is fun to use.\n- [tide-acme](https://github.com/http-rs/tide-acme) - Automatic HTTPS certificates for Tide, via Let's Encrypt and ACME tls-alpn-01 challenges.\n- [preroll](https://github.com/eaze/preroll) - Easy boilerplate utilities for Rust http services which use async-std, Tide, Surf, and friends. ([Tweet](https://twitter.com/Fishrock123/status/1374072772737998848))\n- [Routerify](https://github.com/routerify/routerify) - Provides a lightweight, idiomatic, composable and modular router implementation with middleware support for the Rust HTTP library hyper.rs.\n- [H2](https://github.com/hyperium/h2) - Tokio aware, HTTP/2.0 client & server implementation for Rust.\n- [Thruster](https://github.com/trezm/Thruster) - Fast, middleware based, web framework written in Rust.\n- [actix web](https://github.com/actix/actix-web) - Small, pragmatic, and extremely fast rust web framework ([Jelly - Starter template for actix-web projects](https://github.com/secretkeysio/jelly-actix-web-starter))\n- [stdweb](https://github.com/koute/stdweb) - Standard library for the client-side Web.\n- [Seed](https://github.com/David-OConnor/seed) - Rust framework for creating web apps.\n- [Tide](https://github.com/rust-net-web/tide) - Modular web framework.\n- [Tide WebSockets](https://github.com/http-rs/tide-websockets) - Experimental websockets handler for tide based on async-tungstenite.\n- [websocket-lite](https://github.com/1tgr/rust-websocket-lite) - Fast, low-overhead WebSocket client.\n- [Gloo](https://github.com/rustwasm/gloo) - Toolkit for building fast, reliable Web applications and libraries with Rust and Wasm.\n- [reqwest](https://github.com/seanmonstar/reqwest) - Easy and powerful Rust HTTP Client.\n- [gotham](https://github.com/gotham-rs/gotham) - Flexible web framework that promotes stability, safety, security and speed.\n- [warp](https://github.com/seanmonstar/warp) - Super-easy, composable, web server framework for warp speeds.\n- [HTTP](https://github.com/hyperium/http) - Rust HTTP types.\n- [httparse](https://github.com/seanmonstar/httparse) - Push parser for the HTTP 1.x protocol in Rust.\n- [ureq](https://github.com/algesten/ureq) - Minimal request library in rust.\n- [Mendes](https://github.com/djc/mendes) - Rust web toolkit for impatient perfectionists.\n- [Roa](https://github.com/Hexilee/roa) - Async web framework inspired by koajs, lightweight but powerful.\n- [rweb](https://github.com/kdy1/rweb) - Yet another web server framework for rust.\n- [Tower Web](https://github.com/carllerche/tower-web) - Web framework for Rust with a focus on removing boilerplate.\n- [http-types](https://github.com/http-rs/http-types) - Common types for HTTP operations.\n- [Dropshot](https://github.com/oxidecomputer/dropshot) - General-purpose crate for exposing REST APIs from a Rust program.\n- [localghost](https://github.com/mild-times/localghost) - Ergonomic Rust bindings to the Web platform.\n- [hyper-rustls](https://github.com/ctz/hyper-rustls) - Integration between the rustls TLS stack and the hyper HTTP library.\n- [biscuit-rust](https://github.com/CleverCloud/biscuit-rust) - Rust implementation of the Biscuit authorization token.\n- [OpenMLS](https://github.com/openmls/openmls) - Rust implementation of the Messaging Layer Security (MLS) protocol.\n- [Tower](https://github.com/tower-rs/tower) - Library of modular and reusable components for building robust networking clients and servers.\n- [gql_client](https://github.com/arthurkhlghatyan/gql-client-rs) - Minimal GraphQL client for Rust.\n- [Cynic](https://github.com/obmarg/cynic) - Bring your own types GraphQL client library for Rust. ([Docs](https://cynic-rs.dev/))\n- [Hyperdrive](https://github.com/dac-gmbh/hyperdrive) - Declarative HTTP request routing, guarding and decoding.\n- [tame-oidc](https://github.com/EmbarkStudios/tame-oidc) - Small OAuth crate that follows the sans-io approach.\n- [jsonwebtoken](https://github.com/Keats/jsonwebtoken) - JWT lib in rust.\n- [MoonZoon](https://github.com/MoonZoon/MoonZoon) - Rust Fullstack Framework. ([Podcast](https://blog.abor.dev/p/moonzoon)) ([HN](https://news.ycombinator.com/item?id=27155639))\n- [tame-oauth](https://github.com/EmbarkStudios/tame-oauth) - Small OAuth crate that follows the sans-io approach.\n- [Trillium](https://github.com/trillium-rs/trillium) - Composable toolkit for building web applications with async rust. ([Docs](https://trillium.rs/))\n- [Sycamore](https://github.com/sycamore-rs/sycamore) - Reactive DOM library for Rust in WASM.\n- [Axum](https://github.com/tokio-rs/axum) - Ergonomic and modular web framework built with Tokio, Tower, and Hyper. ([Article](https://tokio.rs/blog/2021-07-announcing-axum)) ([Reddit](https://www.reddit.com/r/rust/comments/ouqfg3/new_tokio_blog_post_announcing_axum_web_framework/)) ([Lobsters](https://lobste.rs/s/rfh70t/announcing_axum))\n- [Perseus](https://github.com/arctic-hen7/perseus) - High-level frontend development framework for Rust with full support for SSR and SSG.\n\n## WASM\n\n- [Smithy](https://github.com/rbalicki2/smithy) - Framework for building WebAssembly apps in Rust.\n- [Walrus](https://github.com/rustwasm/walrus) - WebAssembly transformation library.\n- [yew](https://github.com/yewstack/yew) - Modern Rust framework inspired by Elm and React for creating multi-threaded frontend apps with WebAssembly.\n- [Percy](https://github.com/chinedufn/percy) - Modular toolkit for building isomorphic web apps with Rust + WebAssembly.\n- [Dodrio](https://github.com/fitzgen/dodrio) - Fast, bump-allocated virtual DOM library for Rust and WebAssembly.\n- [Watt](https://github.com/dtolnay/watt) - Runtime for executing Rust procedural macros compiled as WebAssembly.\n- [Draco](https://github.com/utkarshkukreti/draco) - Rust library to build client side web applications with Web Assembly.\n\n## GUI\n\n- [Egui](https://github.com/emilk/egui) - Immediate mode GUI written in Rust, made for WASM.\n- [rust-skia](https://github.com/rust-skia/rust-skia) - Safe Skia Bindings for Rust.\n- [skulpin](https://github.com/aclysma/skulpin) - Easy option for drawing hardware-accelerated 2D by combining vulkan and skia.\n- [Alchemy](https://github.com/ryanmcgrath/alchemy) - Experimental Rust GUI Framework, backed by native widgets on each platform it supports.\n- [vgtk](https://github.com/bodil/vgtk/) - Declarative desktop UI framework for Rust built on GTK and Gtk-rs.\n- [flutter-rs](https://github.com/flutter-rs/flutter-rs) - Build beautiful desktop apps with flutter and rust.\n- [Piet](https://github.com/linebender/piet) - Abstraction for 2D graphics. ([Piet text layout API](http://www.cmyr.net/blog/piet-text-work.html))\n- [piet-gpu](https://github.com/linebender/piet-gpu) - Experimental GPU compute-centric 2D renderer.\n- [Alcro](https://github.com/Srinivasa314/alcro) - Small library to build desktop apps using rust and modern web technologies.\n- [gpucanvas](https://github.com/cytecbg/gpucanvas) - Antialiased 2D vector drawing library written in rust.\n- [fltk-rs](https://github.com/MoAlyousef/fltk-rs) - Rust bindings for the FLTK GUI library.\n- [Thyme](https://github.com/Grokmoo/thyme) - Themable Immediate Mode User Interface Toolkit in Rust.\n- [SixtyFPS](https://github.com/sixtyfpsui/sixtyfps) - Toolkit to efficiently develop fluid graphical user interfaces for any display: embedded devices and desktop applications. ([Web](https://www.sixtyfps.io/)) ([HN](https://news.ycombinator.com/item?id=24919571))\n- [Crochet](https://github.com/raphlinus/crochet) - Explorations in reactive UI patterns.\n- [KAS GUI](https://github.com/kas-gui/kas) - ToolKit Abstraction System. General-purpose GUI toolkit in Rust.\n- [tiny-skia](https://github.com/RazrFalcon/tiny-skia) - Tiny Skia subset ported to Rust.\n- [Stretch](https://github.com/vislyhq/stretch) - High performance flexbox implementation written in rust.\n- [RAUI](https://github.com/PsichiX/raui) - Rust implementation of Renderer Agnostic User Interface.\n- [Spline](https://github.com/linebender/spline) - Implements a new spline designed and optimized for interactive design of 2D curves.\n- [Terra](https://github.com/fintelia/terra) - Large scale terrain rendering library written in Rust.\n- [Ochre](https://github.com/glowcoil/ochre) - Highly portable GPU-accelerated vector graphics. ([Talk](https://rustfest.global/session/23-ochre-highly-portable-gpu-accelerated-vector-graphics/))\n- [glyph-brush](https://github.com/alexheretic/glyph-brush) - Fast GPU cached text rendering.\n- [Speedy2D](https://github.com/QuantumBadger/Speedy2D) - Rust library for hardware accelerated drawing of 2D shapes, images, and text, with an easy to use API.\n- [Skui](https://github.com/skui-org/skui) - Skia-based C++ UI framework.\n- [nuklear-rust](https://github.com/snuk182/nuklear-rust) - Bindings to the Nuklear 2D immediate GUI library.\n- [Tuix](https://github.com/geom3trik/tuix) - Cross-platform GUI toolkit written in Rust.\n\n## DB\n\n- [SQLx](https://github.com/launchbadge/sqlx) - Rust SQL Toolkit.\n- [Diesel](https://github.com/diesel-rs/diesel) - Safe, extensible ORM and Query Builder.\n- [postgres-query](https://github.com/nolanderc/rust-postgres-query) - Write and execute SQL queries with ease.\n- [Rusqlite](https://github.com/rusqlite/rusqlite) - Ergonomic bindings to SQLite for Rust.\n- [Wundergraph](https://github.com/weiznich/wundergraph) - Provides a platform to easily expose your database through a GraphQL interface.\n- [bolt-rs](https://github.com/lucis-fluxum/bolt-rs) - Communicate with Bolt-compatible graph databases in Rust.\n- [sqlparser-rs](https://github.com/ballista-compute/sqlparser-rs) - Extensible SQL Lexer and Parser for Rust.\n- [PickleDB](https://github.com/seladb/pickledb-rs) - Lightweight and simple key-value store written in Rust.\n- [TQL](https://github.com/antoyo/tql) - Compile-time ORM, inspired by Django ORM, written in Rust.\n- [postgrest-rs](https://github.com/supabase/postgrest-rs) - PostgREST client-side library.\n- [RustRocks](https://github.com/bh1xuw/rust-rocks) - RocksDB binding for Rust.\n- [Cask](https://github.com/andresilva/cask) - Fast key-value store written in Rust.\n- [Buzz Rust](https://github.com/cloudfuse-io/buzz-rust) - Serverless query engine.\n- [wickdb](https://github.com/Fullstop000/wickdb) - Pure Rust LSM-tree based embedded storage engine.\n- [acid-store](https://github.com/lostatc/acid-store) - Library for secure, deduplicated, transactional, and verifiable data storage.\n- [SeaQuery](https://github.com/SeaQL/sea-query) - Database agnostic runtime query builder for Rust.\n- [DharmaDB](https://github.com/sushrut141/DharmaDB) - Persistent, fault tolerant key-value store written in Rust.\n- [typed-sql](https://github.com/matthunz/typed-sql) - Zero-cost ORM with fast compile times. ([Reddit](https://www.reddit.com/r/rust/comments/njbt9s/announcing_typedsql_beta_zerocost_orm_with_fast/))\n- [merk](https://github.com/nomic-io/merk) - High-performance Merkle key/value store.\n\n## Graphics\n\n- [Miniquad](https://github.com/not-fl3/miniquad) - Safe and cross-platform rendering library focused on portability and low-end platforms support.\n- [gfx](https://github.com/gfx-rs/gfx) - High-performance, bindless graphics API. ([Gfx-Rs: The Big Picture](https://gfx-rs.github.io/2020/11/16/big-picture.html))\n- [rspirv](https://github.com/gfx-rs/rspirv) - Rust implementation of SPIR-V module processing functionalities.\n- [cgmath-rs](https://github.com/rustgd/cgmath) - Linear algebra and mathematics library for computer graphics.\n- [aljabar](https://github.com/maplant/aljabar) - Extremely generic linear algebra library for Rust.\n- [raqote](https://github.com/jrmuizel/raqote) - Pure Rust 2D Graphics Library.\n- [Kiss3d](https://github.com/sebcrozet/kiss3d) - Keep it simple, stupid 3d graphics engine for Rust.\n- [ncollide](https://github.com/rustsim/ncollide) - 2 and 3-dimensional collision detection library in Rust.\n- [imgui-rs](https://github.com/Gekkio/imgui-rs) - Rust bindings for dear imgui.\n- [luminance](https://github.com/phaazon/luminance-rs) - Type-safe, type-level and stateless Rust graphics framework.\n- [Gate](https://github.com/SergiusIW/gate) - Specialized 2D game library.\n- [ultraviolet](https://github.com/termhn/ultraviolet) - Wide linear algebra crate for games and graphics.\n- [pixels](https://github.com/parasyte/pixels) - Tiny hardware-accelerated pixel frame buffer.\n- [kurbo](https://github.com/linebender/kurbo) - Rust library for manipulating curves.\n- [Rust-SDL2](https://github.com/Rust-SDL2/rust-sdl2) - SDL2 bindings for Rust.\n- [femtovg](https://github.com/femtovg/femtovg) - Antialiased 2D vector drawing library written in Rust.\n- [glow](https://github.com/grovesNL/glow) - Set of bindings to run GL anywhere and avoid target-specific code.\n- [Rust GPU](https://github.com/EmbarkStudios/rust-gpu) - Making Rust a first-class language and ecosystem for GPU code. ([HN](https://news.ycombinator.com/item?id=24858172)) ([HN 2](https://news.ycombinator.com/item?id=24870039)) ([Example Shaders](https://github.com/LykenSol/rust-gpu-shadertoys))\n- [Rend3](https://github.com/BVE-Reborn/rend3) - Easy to use, customizable, efficient 3D renderer library built on wgpu.\n- [Conrod](https://github.com/PistonDevelopers/conrod) - Easy-to-use, 2D GUI library written entirely in Rust.\n- [Peach](https://github.com/flmng0/peach) - Processing-esque sandboxing framework for Rust.\n- [Rendiation](https://github.com/mikialex/rendiation) - Group of crates that can be composed to impl graphics project.\n\n## Games\n\n- [Tetra](https://github.com/17cupsofcoffee/tetra) - Simple 2D game framework written in Rust.\n\n## Test\n\n- [faux](https://github.com/nrxus/faux) - Traitless Mocking Library for Rust.\n- [Drill](https://github.com/fcsonline/drill) - HTTP load testing application written in Rust inspired by Ansible syntax.\n- [Loom](https://github.com/tokio-rs/loom) - Concurrency permutation testing tool for Rust.\n- [Mockito](https://github.com/lipanski/mockito) - HTTP mocking for Rust.\n- [ctest](https://github.com/gnzlbg/ctest) - Automated testing of FFI bindings in Rust.\n- [Mockall](https://github.com/asomers/mockall) - Powerful mock object library for Rust.\n- [rstest](https://github.com/la10736/rstest) - Uses procedural macros to help you on writing fixtures and table-based tests.\n- [Proptest](https://github.com/AltSysrq/proptest) - Hypothesis-like property testing for Rust.\n- [cargo-all-features](https://github.com/frewsxcv/cargo-all-features) - Cargo subcommand to build and test all feature flag combinations.\n- [Fuzzcheck](https://github.com/loiclec/fuzzcheck-rs) - Structure-aware, in-process, coverage-guided, evolutionary fuzzing engine for Rust functions.\n- [k9](https://github.com/aaronabramov/k9) - Rust Testing Library.\n- [expect-test](https://github.com/rust-analyzer/expect-test) - Minimalistic snapshot testing for Rust.\n- [QuickCheck](https://github.com/BurntSushi/quickcheck) - Automated property based testing for Rust (with shrinking).\n- [httpmock](https://github.com/alexliesenfeld/httpmock) - HTTP mocking library for Rust.\n- [iai](https://github.com/bheisler/iai) - Experimental One-shot Benchmark Framework in Rust.\n- [Test Case](https://github.com/frondeus/test-case) - Rust procedural macro attribute for adding test cases easily.\n- [rutenspitz](https://github.com/jakubadamw/rutenspitz) - Procedural macro to be used for testing/fuzzing stateful models against a semantically equivalent but obviously correct implementation.\n- [Pretty Assertions](https://github.com/colin-kiegel/rust-pretty-assertions) - Overwrite `assert_eq!` with a drop-in replacement, adding a colorful diff.\n- [Shuttle](https://github.com/awslabs/shuttle) - Library for testing concurrent Rust code.\n- [build-fs-tree](https://github.com/KSXGitHub/build-fs-tree) - Generate a filesystem tree from a macro or a YAML tree.\n- [afl.rs](https://github.com/rust-fuzz/afl.rs) - Fuzzing Rust code with AFLplusplus.\n- [heckcheck](https://github.com/yoshuawuyts/heckcheck) - Heckin small test generator.\n\n## Error\n\n- [eyre](https://github.com/yaahc/eyre) - Trait object based error handling type for easy idiomatic error handling and reporting in Rust applications.\n- [derive(Error)](https://github.com/dtolnay/thiserror) - Provides a convenient derive macro for the standard library's std::error::Error trait.\n- [Fehler](https://github.com/withoutboats/fehler) - Library to add support for \"throwing functions\" to Rust through procedural macros.\n- [failure](https://github.com/rust-lang-nursery/failure) - Designed to make it easier to manage errors in Rust.\n- [Anyhow](https://github.com/dtolnay/anyhow) - Flexible concrete Error type built on std::error::Error.\n- [SNAFU](https://github.com/shepmaster/snafu) - Easily assign underlying errors into domain-specific errors while adding context.\n- [some-error](https://github.com/jam1garner/some-error) - Library for creating and using anonymous sum types as errors.\n- [Srcerr](https://github.com/azriel91/srcerr) - User friendly errors from source data.\n- [human-panic](https://github.com/yoshuawuyts/human-panic) - Panic messages for humans.\n- [panic-persist](https://github.com/jamesmunns/panic-persist) - Writes panic messages to a section of RAM.\n- [better-panic](https://github.com/mitsuhiko/better-panic) - Gives you pretty backtraces for panics.\n- [thisdiagnostic](https://github.com/zkat/thisdiagnostic) - Rust library for adding rich diagnostic metadata to errors.\n\n## IO\n\n- [Mio](https://github.com/tokio-rs/mio) - Metal IO library.\n\n## UI\n\n- [Iced](https://github.com/hecrj/iced) - Cross-platform GUI library for Rust focused on simplicity and type-safety. Inspired by Elm.\n- [Azul](https://github.com/maps4print/azul) - Desktop GUI Framework.\n- [Druid](https://github.com/linebender/druid) - Data-first Rust-native UI design toolkit. ([Some reflections on the Druid architecture](http://www.cmyr.net/blog/druid-architecture.html)) ([Dynamic widget sketches](http://www.cmyr.net/blog/druid-dynamism.html))\n- [flutter-rs](https://github.com/gliheng/flutter-rs) - Build flutter desktop app in dart & rust.\n- [Moxie](https://github.com/anp/moxie) - Lightweight platform-agnostic tools for declarative UI.\n- [OrbTk](https://github.com/redox-os/orbtk) - Rust UI-Toolkit.\n\n## Crypto\n\n- [zksnark-rs](https://github.com/republicprotocol/zksnark-rs) - Zero knowledge succinct arguments of knowledge, written in Rust.\n- [bellman](https://github.com/zkcrypto/bellman) - Crate for building zk-SNARK circuits.\n- [Spartan](https://github.com/microsoft/Spartan) - High-speed zkSNARKs without trusted setup.\n- [RustCrypto: hashes](https://github.com/RustCrypto/hashes) - Collection of cryptographic hash functions written in pure Rust.\n- [Mundane](https://github.com/google/mundane/) - Rust cryptography library backed by BoringSSL that is difficult to misuse, ergonomic, and performant (in that order). ([HN](https://news.ycombinator.com/item?id=25434349))\n- [RustCrypto: Elliptic Curves](https://github.com/RustCrypto/elliptic-curves)\n- [poly-commit](https://github.com/scipr-lab/poly-commit) - Rust library for polynomial commitments.\n- [Marlin](https://github.com/scipr-lab/marlin) - Rust library for the Marlin preprocessing zkSNARK.\n- [STHash](https://github.com/jedisct1/rust-sthash) - Fast, keyed, cryptographic hash function designed to process large, possibly untrusted data.\n- [arkworks::algebra](https://github.com/arkworks-rs/algebra) - Libraries for finite field, elliptic curve, and polynomial arithmetic.\n- [pairing](https://github.com/zkcrypto/pairing) - Crate for using pairing-friendly elliptic curves.\n- [Monotree](https://github.com/thyeem/monotree) - Optimized Sparse Merkle Tree in Rust.\n- [Cupcake](https://github.com/facebookresearch/Cupcake) - Rust library for lattice-based additive homomorphic encryption.\n- [orion](https://github.com/orion-rs/orion) - Usable, easy and safe pure-Rust crypto.\n- [Curv](https://github.com/ZenGo-X/curv) - Rust language general purpose elliptic curve cryptography.\n- [serde-encrypt](https://github.com/laysakura/serde-encrypt) - Encrypts all the Serialize.\n\n## Linux\n\n- [procfs](https://github.com/eminence/procfs) - Rust library for reading the Linux procfs filesystem.\n- [libkrun](https://github.com/containers/libkrun) - Dynamic library providing KVM-based process isolation capabilities.\n- [io-uring](https://github.com/tokio-rs/io-uring) - Linux IO Uring.\n- [shmem-ipc](https://github.com/diwic/shmem-ipc) - Rust high-performance communication between untrusted processes on Linux.\n- [perf-event](https://github.com/jimblandy/perf-event) - Rust interface to Linux performance monitoring.\n- [RedBPF](https://github.com/ingraind/redbpf) - Rust library for building and running BPF/eBPF modules.\n- [iou](https://github.com/ringbahn/iou) - Rust interface to io_uring.\n- [Aya](https://github.com/alessandrod/aya) - eBPF library for the Rust programming language, built with a focus on developer experience and operability. ([Article](https://confused.ai/posts/announcing-aya))\n\n## ML\n\n- [Neuronika](https://github.com/neuronika/neuronika) - Tensors and dynamic neural networks in pure Rust.\n- [Juice](https://github.com/spearow/juice) - Hacker's Machine Learning Engine.\n- [linfa](https://github.com/LukeMathWalker/linfa) - Rust machine learning framework.\n- [L2](https://github.com/bkkaggle/L2) - PyTorch-style Tensor+Autograd library written in Rust.\n- [Fwumious Wabbit](https://github.com/outbrain/fwumious_wabbit) - Fast on-line machine learning toolkit written in Rust.\n- [Mushin](https://github.com/c0dearm/mushin) - Compile-time creation of neural networks.\n- [Alumina](https://github.com/millardjn/alumina) - Deep learning library for rust.\n\n## macOS\n\n- [mach](https://github.com/fitzgen/mach) - Rust interface to the Mach 3.0 kernel that underlies macOS.\n- [Cacao](https://github.com/ryanmcgrath/cacao) - Rust bindings for AppKit (macOS) and UIKit (iOS/tvOS).\n- [Fruity](https://github.com/nvzqz/fruity) - Rusty bindings for Apple libraries.\n- [core-foundation-rs](https://github.com/servo/core-foundation-rs) - Rust bindings to Core Foundation and other low level libraries on Mac OS X and iOS.\n\n## Macros\n\n- [cfg-if](https://github.com/alexcrichton/cfg-if) - If/elif-like macro for Rust #[cfg] statements.\n- [Rust Embed](https://github.com/pyros2097/rust-embed) - Rust Macro which loads files into the rust binary at compile time during release and loads the file from the fs during dev.\n- [Builder Pattern Derive](https://github.com/colin-kiegel/rust-derive-builder) - Rust macro to automatically implement the builder pattern for arbitrary structs.\n- [rabbithole-rs](https://github.com/UkonnRa/rabbithole-rs) - Nearly well-typed, user-friendly JSON:API type system, with an easy-to-use Macro System to help you modelling the your data.\n- [once_cell](https://github.com/matklad/once_cell) - Rust library for single assignment cells and lazy statics without macros.\n- [lazy-static.rs](https://github.com/rust-lang-nursery/lazy-static.rs) - Macro for declaring lazily evaluated statics in Rust.\n- [partial_application](https://github.com/Emerentius/partial_application) - Partial function application macro for Rust.\n- [macro_railroad](https://github.com/lukaslueg/macro_railroad) - Library to generate syntax diagrams for Rust macros.\n- [genco](https://github.com/udoprog/genco) - Whitespace-aware quasiquoter for beautiful code generation.\n- [num-derive](https://github.com/rust-num/num-derive) - Procedural macros to derive numeric traits in Rust.\n- [Horrorshow](https://github.com/Stebalien/horrorshow-rs) - Macro-based html builder for rust.\n- [pipeline.rs](https://github.com/johannhof/pipeline.rs) - Macro collection to pipe your functions calls, like in F# or Elixir.\n- [timed](https://github.com/y2kappa/timed) - Rust crate to time your function using derive annotations.\n- [paste](https://github.com/dtolnay/paste) - Macros for all your token pasting needs.\n- [Darling](https://github.com/TedDriggs/darling) - Rust proc-macro attribute parser.\n- [unseemly](https://github.com/paulstansifer/unseemly) - Macros have types. ([Web](https://unseemly.github.io/))\n- [seq-macro](https://github.com/dtolnay/seq-macro) - Macro to repeat sequentially indexed copies of a fragment of code.\n- [Automod](https://github.com/dtolnay/automod) - Pull in every source file in a directory as a module.\n- [Aquamarine](https://github.com/mersinvald/aquamarine) - Inline diagrams for rustdoc with mermade.js.\n- [Velcro](https://github.com/peterjoel/velcro) - Macros for conveniently initializing collections from Rust's std and iterators.\n- [if_chain](https://github.com/lambda-fairy/if_chain) - Macro for writing nested `if let` expressions.\n- [proc-macro-crate](https://github.com/bkchr/proc-macro-crate) - Providing support for $crate in procedural macros.\n- [typestate](https://github.com/rustype/typestate-rs) - Provides developers with a macro to design typestated objects.\n- [Educe](https://github.com/magiclen/educe) - Provides procedural macros to help you implement Rust-built-in traits quickly.\n- [no-panic](https://github.com/dtolnay/no-panic) - Attribute macro to require that the compiler prove a function can't ever panic.\n- [spez](https://github.com/m-ou-se/spez) - Macro to specialize on the type of an expression.\n- [lazy-regex](https://github.com/Canop/lazy-regex) - Macro for when you're tired of the regex creation boilerplate.\n- [Arraygen](https://github.com/theypsilon/arraygen) - Derive macro for generating arrays from struct fields.\n- [flamer](https://github.com/llogiq/flamer) - Compiler plugin to insert flame calls.\n- [bitflags](https://github.com/bitflags/bitflags) - Macro to generate structures which behave like bitflags.\n- [nightly-crimes](https://github.com/m-ou-se/nightly-crimes) - Allow you to enable nightly features on the stable compiler.\n- [rust-delegate](https://github.com/Kobzol/rust-delegate) - Rust method delegation with less boilerplate.\n- [blanket](https://github.com/althonos/blanket) - Simple Rust macro to derive blanket implementations for your traits.\n\n## Math\n\n- [Lair](https://github.com/vinesystems/lair) - Linear Algebra in Rust.\n- [Friedrich](https://github.com/nestordemeure/friedrich) - Rust implementation of Gaussian Process regression.\n- [hnsw](https://github.com/rust-cv/hnsw) - Hierarchical Navigable Small World Graph for fast ANN search.\n- [statrs](https://github.com/statrs-dev/statrs) - Statistical computation library for Rust.\n\n## Other\n\n- [clap-rs](https://github.com/kbknapp/clap-rs) - Full featured, fast Command Line Argument Parser.\n- [Serde](https://github.com/serde-rs/serde) - Serialization framework for Rust. ([Docs](https://serde.rs/))\n- [serde-reflection](https://github.com/novifinancial/serde-reflection) - Rust libraries and tools to help with interoperability and testing of serialization formats based on Serde.\n- [Miniserde](https://github.com/dtolnay/miniserde) - Data structure serialization library with several opposite design goals from Serde.\n- [Microserde](https://github.com/cloudhead/microserde) - Miniserde minus the dependencies.\n- [Abomonation](https://github.com/TimelyDataflow/abomonation) - Mortifying serialization library for Rust.\n- [pyo3](https://github.com/PyO3/pyo3) - Rust bindings for the Python interpreter. ([HN](https://news.ycombinator.com/item?id=25956502)) ([Maturin - Build and publish crates with pyo3](https://github.com/PyO3/maturin))\n- [actix](https://github.com/actix/actix)\n- [tokio](https://github.com/tokio-rs/tokio)\n- [nom](https://github.com/Geal/nom) - Parser combinators library.\n- [nom-derive](https://github.com/rust-bakery/nom-derive) - Declarative parsing for Rust, using a custom derive and nom.\n- [rpds](https://github.com/orium/rpds) - Rust Persistent Data Structures.\n- [Futures await](https://github.com/alexcrichton/futures-await) - Async/await syntax and the [futures](https://crates.io/crates/futures) crate.\n- [nix](https://github.com/nix-rust/nix) - Rust friendly bindings to \\*nix APIs.\n- [wasmi](https://github.com/paritytech/wasmi) - Wasm interpreter in Rust.\n- [rayon](https://github.com/rayon-rs/rayon) - Data parallelism library for Rust.\n- [libfringe](https://github.com/edef1c/libfringe) - Rust library implementing safe, lightweight context switches, without relying on kernel services.\n- [rust-url](https://github.com/servo/rust-url) - URL parser for Rust.\n- [Rust-Postgres](https://github.com/sfackler/rust-postgres) - Native PostgreSQL driver for Rust.\n- [im-rs](https://github.com/bodil/im-rs) - Assorted immutable collection datatypes for Rust.\n- [Juniper](https://github.com/graphql-rust/juniper) - GraphQL server library for Rust.\n- [Logos](https://github.com/maciejhirsz/logos) - Create ridiculously fast Lexers.\n- [Librsvg](https://github.com/GNOME/librsvg) - SVG rendering library.\n- [rust-openssl](https://github.com/sfackler/rust-openssl) - OpenSSL bindings for Rust.\n- [rustls](https://github.com/ctz/rustls) - Modern TLS library in Rust.\n- [Rusoto](https://www.rusoto.org/) - AWS SDK for Rust.\n- [Rand](https://github.com/rust-random/rand) - Rust library for random number generation.\n- [noise-rs](https://github.com/Razaekel/noise-rs) - Procedural noise generation library for Rust.\n- [Rust-AV](https://github.com/rust-av/rust-av) - Multimedia Toolkit written in pure rust.\n- [cookie-rs](https://github.com/alexcrichton/cookie-rs) - HTTP cookie parsing and cookie jar management for rust.\n- [yoga-rs](https://github.com/bschwind/yoga-rs) - Rust Wrapper of Facebook's Yoga, a Flexbox layout engine.\n- [redux-rs](https://github.com/redux-rs/redux-rs) - Rust implementation of Redux.\n- [Datafrog](https://github.com/rust-lang-nursery/datafrog) - Lightweight Datalog engine intended to be embedded in other Rust programs.\n- [kubernetes-rs](https://github.com/anguslees/kubernetes-rs) - Kubernetes API client library for Rust.\n- [jemallocator](https://github.com/gnzlbg/jemallocator) - Rust allocator using jemalloc as a backend.\n- [cargo-asm](https://github.com/gnzlbg/cargo-asm) - Cargo subcommand showing the assembly or llvm-ir generated for Rust code.\n- [Crossbeam](https://github.com/crossbeam-rs/crossbeam) - Tools for concurrent programming in Rust.\n- [evmap](https://github.com/jonhoo/rust-evmap) - Lock-free, eventually consistent, concurrent multi-value map.\n- [Headless Chrome](https://github.com/atroche/rust-headless-chrome) - Puppeteer for Rust.\n- [rust-smallvec](https://github.com/servo/rust-smallvec) - \"Small vector\" optimization for Rust: store up to a small number of items on the stack.\n- [Ketos](https://github.com/murarth/ketos) - Lisp dialect scripting and extension language for Rust programs.\n- [MAY](https://github.com/Xudong-Huang/may) - Rust stackful coroutine library.\n- [Ditto](https://github.com/alex-shapiro/ditto) - CRDTs for common data structures like maps, vecs, sets, text, and JSON.\n- [self_update](https://github.com/jaemk/self_update) - Provides updaters for updating rust executables in-place from various release distribution backends.\n- [libc](https://github.com/rust-lang/libc) - Raw FFI bindings to platforms' system libraries.\n- [Svgbob](https://github.com/ivanceras/svgbob) - Convert your ascii diagram scribbles into happy little SVG.\n- [cbindgen](https://github.com/eqrion/cbindgen) - Project for generating C bindings from Rust code.\n- [Bincode](https://github.com/TyOverby/bincode) - Binary encoder / decoder implementation in Rust.\n- [Hypercore](https://github.com/datrs/hypercore) - Secure, distributed, append-only log. ([Web](https://hypercore-protocol.org/)) ([HN](https://news.ycombinator.com/item?id=25407193))\n- [rust-rocksdb](https://github.com/rust-rocksdb/rust-rocksdb) - Rust wrapper for rocksdb.\n- [futures-rs](https://github.com/rust-lang-nursery/futures-rs) - Zero-cost asynchronous programming in Rust.\n- [hashbrown](https://github.com/Amanieu/hashbrown) - Rust port of Google's high-performance SwissTable hash map, adapted to make it a drop-in replacement for Rust's standard HashMap and HashSet types.\n- [Rust-WebSocket](https://github.com/websockets-rs/rust-websocket) - Provides a framework for dealing with WebSocket connections (both clients and servers).\n- [Ramhorns](https://github.com/maciejhirsz/ramhorns) - Experimental Mustache template engine implementation in pure Rust.\n- [rust-notifica](https://github.com/frewsxcv/rust-notifica) - Small, cross-platform Rust crate for sending system notifications.\n- [pulldown-cmark](https://github.com/raphlinus/pulldown-cmark) - Pull parser for CommonMark, written in Rust. It comes with a simple command-line tool, useful for rendering to HTML, and is also designed to be easy to use from as a library.\n- [Image](https://github.com/image-rs/image) - Encoding and decoding images in Rust.\n- [fern](https://github.com/daboross/fern) - Simple, efficient logging for Rust.\n- [Runtime](https://github.com/rustasync/runtime) - Empowering everyone to build asynchronous software.\n- [miri](https://github.com/rust-lang/miri) - Interpreter for Rust's mid-level intermediate representation.\n- [Tide](https://github.com/rustasync/tide) - Empowering everyone to build HTTP Services.\n- [fst](https://github.com/BurntSushi/fst) - Represent large sets and maps compactly with finite state transducers.\n- [maud](https://github.com/lambda-fairy/maud) - Compile-time HTML templates for Rust. ([HN](https://news.ycombinator.com/item?id=24552107))\n- [panic-never](https://github.com/japaric/panic-never) - This crate guarantees that your application is free of panicking branches.\n- [graphql_client](https://github.com/graphql-rust/graphql-client) - Typed, correct GraphQL requests and responses in Rust.\n- [daemonize](https://github.com/knsd/daemonize) - Library for writing system daemons.\n- [cc-rs](https://github.com/alexcrichton/cc-rs) - Rust library for build scripts to compile C/C++ code into a Rust library.\n- [nannou](https://github.com/nannou-org/nannou) - Creative Coding Framework for Rust. ([Web](https://nannou.cc/)) ([HN](https://news.ycombinator.com/item?id=25343356))\n- [Criterion.rs](https://github.com/bheisler/criterion.rs) - Statistics-driven benchmarking library for Rust.\n- [Cargo-fuzz](https://github.com/rust-fuzz/cargo-fuzz) - Command-line wrapper for using libFuzzer. Easy to use, no need to recompile LLVM.\n- [spade](https://github.com/Stoeoef/spade) - Spatial Data Structures for Rust.\n- [pg-extend-rs](https://github.com/bluejekyll/pg-extend-rs) - Rust based Postgres extension.\n- [Hiher](https://github.com/bodil/higher) - Higher kinded types and other bad ideas for Rust.\n- [cargo-geiger](https://github.com/anderejd/cargo-geiger) - Detects usage of unsafe Rust in a Rust crate and its dependencies.\n- [Surf](https://github.com/http-rs/surf) - Fast and friendly HTTP client framework for async Rust.\n- [async-std](https://github.com/async-rs/async-std) - Async version of the Rust standard library. ([Article](https://async.rs/blog/stop-worrying-about-blocking-the-new-async-std-runtime/))\n- [petgraph](https://github.com/bluss/petgraph) - Graph data structure library for Rust.\n- [Neon](https://github.com/neon-bindings/neon) - Rust bindings for writing safe and fast native Node.js modules. ([Web](https://neon-bindings.com/))\n- [Tauri](https://github.com/tauri-apps/tauri) - Electron alternative written in Rust. ([Web](https://tauri.studio/en/)) ([HN](https://news.ycombinator.com/item?id=23769424)) ([HN](https://news.ycombinator.com/item?id=26194990)) ([HN](https://news.ycombinator.com/item?id=27155831))\n- [Plotters](https://github.com/38/plotters) - Rust Drawing Library for Plotting.\n- [rust-GSL](https://github.com/GuillaumeGomez/rust-GSL) - Rust binding for the GSL library (the GNU Scientific Library).\n- [combine](https://github.com/Marwes/combine) - Parser combinator library for Rust.\n- [Syn](https://github.com/dtolnay/syn) - Parsing library for parsing a stream of Rust tokens into a syntax tree of Rust source code.\n- [Emu](https://github.com/calebwin/emu) - Framework/compiler for GPU acceleration of Rust, GPU programming.\n- [Coroutine I/O](https://github.com/zonyitoo/coio-rs) - Coroutine scheduling with work-stealing algorithm.\n- [tempfile](https://github.com/Stebalien/tempfile) - Temporary file library for rust.\n- [geo](https://github.com/georust/geo) - Geospatial primitives and algorithms for Rust.\n- [hashbrown](https://github.com/rust-lang/hashbrown) - Rust port of Google's SwissTable hash map.\n- [nalgebra](https://github.com/rustsim/nalgebra) - Linear algebra library for Rust.\n- [envy](https://github.com/softprops/envy) - Deserialize env vars into typesafe structs with rust.\n- [tiny-http](https://github.com/tiny-http/tiny-http) - Low level HTTP server library in Rust.\n- [petgraph](https://github.com/petgraph/petgraph) - Graph data structure library for Rust.\n- [Dataloader](https://github.com/cksac/dataloader-rs) - Rust implementation of Facebook's DataLoader using futures.\n- [Specs](https://github.com/amethyst/specs) - Entity-Component System written in Rust.\n- [euclid](https://github.com/servo/euclid) - Small library for geometric types with a focus on 2d graphics and layout.\n- [Notify](https://github.com/notify-rs/notify) - Cross-platform filesystem notification library for Rust.\n- [notify-rust](https://github.com/hoodie/notify-rust) - Send Desktop Notifications on linux and bsd.\n- [color-backtrace](https://github.com/athre0z/color-backtrace) - Colorful panic backtraces for Rust.\n- [r2d2](https://github.com/sfackler/r2d2) - Generic connection pool for Rust.\n- [Rust-PHF](https://github.com/sfackler/rust-phf) - Compile time static maps for Rust.\n- [Signal-hook](https://github.com/vorner/signal-hook) - Rust library allowing to register multiple handlers for the same signal.\n- [partial-io](https://github.com/facebookincubator/rust-partial-io) - Rust library that provides helpers for testing resilience of IO operations.\n- [Amadeus](https://github.com/constellation-rs/amadeus) - Harmonious distributed data analysis in Rust.\n- [Constellation](https://github.com/constellation-rs/constellation) - Distributed programming for Rust.\n- [ndarray](https://github.com/rust-ndarray/ndarray) - N-dimensional array with array views, multidimensional slicing, and efficient operations.\n- [Evcxr](https://github.com/google/evcxr) - Rust REPL and Jupyter Kernel. ([HN](https://news.ycombinator.com/item?id=25921894))\n- [Declarative Dataflow](https://github.com/comnik/declarative-dataflow) - Reactive query engine built on differential dataflow.\n- [refinery](https://github.com/rust-db/refinery) - Powerful SQL migration toolkit for Rust.\n- [Juggernaut](https://github.com/afshinm/juggernaut) - Experimental Neural Network written in Rust.\n- [Riker](https://github.com/riker-rs/riker) - Easily build efficient, highly concurrent and resilient applications. An Actor Framework for Rust.\n- [bitvec](https://github.com/myrrlyn/bitvec) - Crate for managing memory bit by bit.\n- [rust-cpython](https://github.com/dgrunwald/rust-cpython) - Rust <-> Python bindings.\n- [Vicuna](https://github.com/PocketDerm/vicuna) - AWS Lambdas in Rust made simple.\n- [quicksilver](https://github.com/ryanisaacg/quicksilver) - Simple game framework for 2D games on desktop and web.\n- [refpool](https://github.com/bodil/refpool) - Efficient memory pool mechanism for Rust.\n- [lol-html](https://github.com/cloudflare/lol-html) - Low output latency streaming HTML parser/rewriter with CSS selector-based API.\n- [mitosis](https://github.com/Manishearth/mitosis) - Spawn processes with arbitrary closures in rust.\n- [prettytable-rs](https://github.com/phsym/prettytable-rs) - Rust library to print aligned and formatted tables.\n- [unicode-width](https://github.com/unicode-rs/unicode-width) - Displayed width of Unicode characters and strings according to UAX#11 rules.\n- [Chrono](https://github.com/chronotope/chrono) - Date and time library for Rust.\n- [iqlusion crates](https://github.com/iqlusioninc/crates) - Collection of open source Rust crates from iqlusion.\n- [bnf](https://github.com/shnewto/bnf) - Parse BNF grammar definitions.\n- [quick-protobuf](https://github.com/tafia/quick-protobuf) - Rust implementation of protobuf parser.\n- [Deadpool](https://github.com/bikeshedder/deadpool) - Dead simple pool implementation for rust with async-await.\n- [cuneiform](https://github.com/vertexclique/cuneiform) - Cache optimizations for Rust, revived from the slabs of Sumer.\n- [insta](https://github.com/mitsuhiko/insta) - Snapshot testing library for rust.\n- [pretty.rs](https://github.com/Marwes/pretty.rs) - Wadler-style pretty-printing combinators in Rust.\n- [Rusty V8](https://github.com/denoland/rusty_v8) - V8 javascript bindings for Rust.\n- [WS-RS](https://github.com/housleyjk/ws-rs) - Lightweight, event-driven WebSockets for Rust.\n- [CXX](https://github.com/dtolnay/cxx) - Safe interop between Rust and C++. ([Docs](https://cxx.rs/))\n- [Duct](https://github.com/oconnor663/duct.rs) - Rust library for shelling out and making pipelines.\n- [crossterm](https://github.com/crossterm-rs/crossterm) - Cross platform terminal library rust.\n- [wgpu-rs](https://github.com/gfx-rs/wgpu-rs) - Rust bindings to wgpu native library. ([Awesome](https://github.com/rofrol/awesome-wgpu-rs))\n- [rio](https://github.com/spacejam/rio) - Pure rust io_uring library, built on libc, thread & async friendly, misuse resistant.\n- [dashmap](https://github.com/xacrimon/dashmap) - Blazing fast concurrent HashMap for Rust.\n- [Interact](https://github.com/interact-rs/interact) - Framework for friendly online introspection of the running program state in an intuitive command-line interactive way.\n- [faster](https://github.com/AdamNiederer/faster) - SIMD for humans.\n- [rust-crdt](https://github.com/rust-crdt/rust-crdt) - Collection of well-tested, serializable CRDTs for Rust. ([HN](https://news.ycombinator.com/item?id=24795001))\n- [JSON-RPC](https://github.com/paritytech/jsonrpc) - Rust implementation of JSON-RPC 2.0 Specification. Transport-agnostic core and transport servers for http, ipc, websockets and tcp.\n- [yaml-rust](https://github.com/chyh1990/yaml-rust) - Pure rust YAML implementation.\n- [directories](https://github.com/soc/directories-rs) - Mid-level library that provides config/cache/data paths, following the respective conventions on Linux, macOS and Windows.\n- [Bastion](https://github.com/bastion-rs/bastion) - Highly-available, fault-tolerant runtime system with dynamic, dispatch-oriented, lightweight process model. ([HN](https://news.ycombinator.com/item?id=22403713)) ([Web](https://bastion.rs/))\n- [Desse](https://github.com/devashishdxt/desse) - Ultra fast binary serialization and deserialization for types with a constant size (known at compile time).\n- [HdrHistogram](https://github.com/HdrHistogram/HdrHistogram_rust) - Port of HdrHistogram to Rust.\n- [ritual](https://github.com/rust-qt/ritual) - Use C++ libraries from Rust.\n- [RMP](https://github.com/3Hren/msgpack-rust) - Pure Rust MessagePack implementation.\n- [fasteval](https://github.com/likebike/fasteval) - Fast and safe evaluation of algebraic expressions.\n- [wasmparser](https://github.com/bytecodealliance/wasmparser) - Simple event-driven library for parsing WebAssembly binary files.\n- [RoaringBitmap](https://github.com/Nemo157/roaring-rs) - Roaring bitmap implementation for Rust.\n- [Graphlib](https://github.com/purpleprotocol/graphlib) - Simple but powerful graph library for Rust.\n- [Rowan](https://github.com/rust-analyzer/rowan) - Library for lossless syntax trees, inspired in part by Swift's libsyntax.\n- [Tera](https://github.com/Keats/tera) - Template engine for Rust based on Jinja2/Django.\n- [LibreAuth](https://github.com/breard-r/libreauth) - Collection of tools for user authentication.\n- [BoringAuth](https://github.com/ThinkAlexandria/BoringAuth) - Collection of tools for user authentication.\n- [log](https://github.com/rust-lang/log) - Logging implementation for Rust.\n- [typed-html](https://github.com/bodil/typed-html) - Type checked JSX for Rust.\n- [enigo](https://github.com/enigo-rs/enigo) - Cross platform input simulation in Rust.\n- [tracing](https://github.com/tokio-rs/tracing) - Application level tracing for Rust.\n- [GraphCore](https://github.com/metamolecular/graphcore) - Provides primitives and traversals for working with graphs.\n- [Async trait methods](https://github.com/dtolnay/async-trait) - Type erasure for async trait methods.\n- [compiler-builtins](https://github.com/rust-lang/compiler-builtins) - Porting `compiler-rt` intrinsics to Rust.\n- [gtk](https://github.com/gtk-rs/gtk) - Rust bindings and wrappers for GLib, GDK 3, GTK+ 3 and Cairo.\n- [tokio-beanstalkd](https://github.com/bIgBV/tokio-beanstalkd) - Asynchronous client library for interacting with the Beanstalkd work queue.\n- [octopus](https://github.com/jackdoe/octopus_query) - Query engine for arrays of integers.\n- [Serde YAML](https://github.com/dtolnay/serde-yaml) - Strongly typed YAML library for Rust.\n- [shiplift](https://github.com/softprops/shiplift) - Rust interface for maneuvering docker containers.\n- [Adapton](https://github.com/Adapton/adapton.rust) - General-purpose abstractions for incremental computing, in Rust.\n- [rust-objc](https://github.com/SSheldon/rust-objc) - Objective-C Runtime bindings and wrapper for Rust.\n- [rust-block](https://github.com/SSheldon/rust-block) - Rust interface for Apple's C language extension of blocks.\n- [rust-dispatch](https://github.com/SSheldon/rust-dispatch) - Rust wrapper for Apple's Grand Central Dispatch.\n- [indextree](https://github.com/saschagrunert/indextree) - Arena based tree structure by using indices instead of reference counted pointers.\n- [markedit](https://github.com/Michael-F-Bryan/markedit) - Library for manipulating unstructured Markdown documents.\n- [plotlib](https://github.com/milliams/plotlib) - Data plotting library for Rust.\n- [Parze](https://github.com/zesterer/parze) - Clean, efficient parser combinator.\n- [Flume](https://github.com/zesterer/flume) - Blazingly fast multi-producer, single-consumer channel.\n- [juniper-from-schema](https://github.com/davidpdrsn/juniper-from-schema) - Schema first GraphQL in Rust with Juniper.\n- [stringsext](https://github.com/getreu/stringsext) - Find multi-byte-encoded strings in binary data.\n- [byteorder](https://github.com/BurntSushi/byteorder) - Rust library for reading/writing numbers in big-endian and little-endian.\n- [genawaiter](https://github.com/whatisaphone/genawaiter) - Stackless generators on stable Rust.\n- [libpnet](https://github.com/libpnet/libpnet) - Cross-platform, low level networking using the Rust programming language.\n- [num](https://github.com/rust-num/num) - Collection of numeric types and traits for Rust.\n- [hecs](https://github.com/Ralith/hecs) - Provides a high-performance, minimalist entity-component-system (ECS) world.\n- [intrusive-collections](https://github.com/Amanieu/intrusive-rs) - Intrusive collections for Rust.\n- [froggy](https://github.com/kvark/froggy) - Component Graph System experiment.\n- [Legion](https://github.com/TomGillen/legion) - Aims to be a feature rich high performance ECS library for Rust game projects with minimal boilerplate.\n- [derive_more](https://github.com/JelteF/derive_more) - Some more derive(Trait) options.\n- [async-task](https://github.com/async-rs/async-task) - Task abstraction for building executors. ([Article](https://stjepang.github.io/2020/04/03/why-im-building-a-new-async-runtime.html))\n- [lz4 bindings](https://github.com/bozaro/lz4-rs) - LZ4 is a very fast lossless compression algorithm.\n- [SM](https://github.com/rustic-games/sm) - Static State Machine library.\n- [parity-common](https://github.com/paritytech/parity-common) - Collection of crates used in Parity projects.\n- [desert](https://github.com/substack/desert) - Traits for {de,}serializing compact binary formats.\n- [etcd](https://github.com/jimmycuadra/rust-etcd) - Etcd client library for Rust.\n- [RustGnuplot](https://github.com/SiegeLord/RustGnuplot) - Rust library for drawing plots, powered by Gnuplot.\n- [handlebars-rust](https://github.com/sunng87/handlebars-rust) - Rust templating with Handlebars.\n- [inventory](https://github.com/dtolnay/inventory) - Typed distributed plugin registration.\n- [rust-ctor](https://github.com/mmastrac/rust-ctor) - Module initialization/global constructor functions for Rust.\n- [CFG Aliases](https://github.com/katharostech/cfg_aliases) - Tiny utility to help save you a lot of effort with long winded `#[cfg()]` checks in Rust.\n- [salsa](https://github.com/salsa-rs/salsa) - Generic framework for on-demand, incrementalized computation.\n- [Bytes](https://github.com/tokio-rs/bytes) - Utility library for working with bytes.\n- [Internment](https://github.com/droundy/internment) - Interning of data in rust.\n- [merkle-tree-stream](https://github.com/datrs/merkle-tree-stream) - Stream that generates a merkle tree based on the incoming data.\n- [async-graphql](https://github.com/sunli829/async-graphql) - GraphQL server library that fully supports async/await and is easy to use.\n- [comrak](https://github.com/kivikakk/comrak) - CommonMark + GFM compatible Markdown parser and renderer.\n- [generational-arena](https://github.com/fitzgen/generational-arena) - Safe arena allocator that allows deletion without suffering from the ABA problem by using generational indices.\n- [printpdf](https://github.com/fschutt/printpdf) - Library designed for creating printable PDF documents.\n- [rust-prometheus](https://github.com/tikv/rust-prometheus) - Prometheus instrumentation library for Rust applications.\n- [llvm-ir](https://github.com/cdisselkoen/llvm-ir) - LLVM IR in natural Rust data structures.\n- [tinyvec](https://github.com/Lokathor/tinyvec) - 100% safe crate of vec-like types.\n- [time](https://github.com/time-rs/time) - Simple time handling in Rust.\n- [regex-automata](https://github.com/BurntSushi/regex-automata) - Low level regular expression library that uses deterministic finite automata.\n- [syntect](https://github.com/trishume/syntect) - Rust library for syntax highlighting using Sublime Text syntax definitions.\n- [glam](https://github.com/bitshifter/glam-rs) - Simple and fast linear algebra library for games and graphics.\n- [rust_minifb](https://github.com/emoon/rust_minifb) - Cross platform window and framebuffer crate for Rust.\n- [libloading](https://github.com/nagisa/rust_libloading) - Better library for loading dynamic libraries.\n- [NumToA](https://github.com/mmstick/numtoa) - Efficient method of heaplessly converting numbers into their string representations, storing the representation within a reusable byte array.\n- [OsStr Bytes](https://github.com/dylni/os_str_bytes) - Traits for converting between byte sequences and platform-native strings.\n- [biscuit](https://github.com/lawliet89/biscuit) - JOSE (JSON Web Token) Library for Rust.\n- [Nano ID](https://github.com/nikolay-govorov/nanoid) - Tiny, secure, URL-friendly, unique string ID generator for Rust.\n- [mac-notification-sys](https://github.com/h4llow3En/mac-notification-sys) - Simple wrapper to deliver or schedule macOS Notifications in Rust.\n- [semval](https://github.com/slowtec/semval) - Semantic validation for Rust.\n- [parking_lot](https://github.com/Amanieu/parking_lot) - Compact and efficient synchronization primitives for Rust. Also provides an API for creating custom synchronization primitives.\n- [gimli](https://github.com/gimli-rs/gimli) - Lazy, zero-copy parser for the DWARF debugging format.\n- [hamt-rs](https://github.com/michaelwoerister/hamt-rs) - Persistent Map Implementation based on Hash Array Mapped Tries.\n- [rust-native-tls](https://github.com/sfackler/rust-native-tls) - Abstraction over platform-specific TLS implementations.\n- [itertools](https://github.com/rust-itertools/itertools) - Extra iterator adaptors, iterator methods, free functions, and macros.\n- [validator](https://github.com/Keats/validator) - Simple validation for Rust structs.\n- [sv-parser](https://github.com/dalance/sv-parser) - SystemVerilog parser library fully complient with IEEE 1800-2017.\n- [Serde JSON](https://github.com/serde-rs/json) - Strongly typed JSON library for Rust.\n- [Rustbreak](https://github.com/TheNeikos/rustbreak) - Simple, fast and easy to use self-contained single file storage for Rust.\n- [Curryrs](https://github.com/mgattozzi/curryrs) - Bridge the gap between Haskell and Rust.\n- [libm](https://github.com/rust-lang/libm) - Port of MUSL's libm to Rust.\n- [smol](https://github.com/stjepang/smol) - Small and fast async runtime for Rust.\n- [Colorous](https://github.com/dtolnay/colorous) - Color schemes for charts and maps.\n- [Termion](https://github.com/redox-os/termion) - Pure Rust, bindless library for low-level handling, manipulating and reading information about terminals.\n- [object](https://github.com/gimli-rs/object) - Unified interface for reading and writing object file formats.\n- [no-panic](https://github.com/dtolnay/no-panic) - Attribute macro to require that the compiler prove a function can't ever panic.\n- [rustc-demangle](https://github.com/alexcrichton/rustc-demangle) - Demangling for Rust symbols, written in Rust.\n- [Rust Typed Builder](https://github.com/idanarye/rust-typed-builder) - Creates a compile-time verified builder.\n- [Tether](https://github.com/quadrupleslap/tether) - Barebones Electron-ish library for Rust.\n- [event-listener](https://github.com/stjepang/event-listener) - Notify async tasks or threads.\n- [cached](https://github.com/jaemk/cached) - Rust cache structures and easy function memoization.\n- [tsunami](https://github.com/jonhoo/tsunami) - Rust crate for running one-off cloud jobs.\n- [proc-macro2](https://github.com/alexcrichton/proc-macro2) - Wrapper around the procedural macro API of the compiler's proc_macro crate.\n- [Rust Quasi-Quoting](https://github.com/dtolnay/quote) - Provides the quote! macro for turning Rust syntax tree data structures into tokens of source code.\n- [displaydoc](https://github.com/yaahc/displaydoc) - Derive macro for implementing the display Trait via a doc comment and string interpolation.\n- [simple-mutex](https://github.com/stjepang/simple-mutex) - Simple mutex, faster than std and smaller than parking_lot.\n- [remem](https://github.com/rylev/remem) - Utility for reusing memory.\n- [aho-corasick](https://github.com/BurntSushi/aho-corasick) - Library for finding occurrences of many patterns at once with SIMD acceleration in some cases.\n- [inline-python](https://github.com/fusion-engineering/inline-python) - Inline Python code directly in your Rust code.\n- [socket2-rs](https://github.com/alexcrichton/socket2-rs) - Provide as direct as possible access to the system's functionality for sockets as possible.\n- [heapless](https://github.com/japaric/heapless) - Static friendly data structures that don't require dynamic memory allocation.\n- [Arise](https://github.com/learnmerust/arise) - Run a process \"forever\"; Run a process and spawn it when it dies.\n- [easy-parallel](https://github.com/stjepang/easy-parallel) - Run closures in parallel.\n- [Askama](https://github.com/djc/askama) - Type-safe, compiled Jinja-like templates for Rust.\n- [libprobe](https://github.com/cuviper/rust-libprobe) - Static probes for Rust.\n- [Multiversion](https://github.com/calebzulawski/multiversion) - Function multiversioning framework for Rust.\n- [Kuchiki](https://github.com/kuchiki-rs/kuchiki) - HTML/XML tree manipulation library for Rust.\n- [Deku](https://github.com/sharksforarms/deku) - Declarative binary reading and writing.\n- [Session Types](https://github.com/Munksgaard/session-types) - Implementation of session types for Rust.\n- [binread](https://github.com/jam1garner/binread) - Rust crate for helping parse structs from binary data using macro magic.\n- [simdeez](https://github.com/jackmott/simdeez) - Library that abstracts over SIMD instruction sets, including ones with differing widths.\n- [SIMDNoise](https://github.com/jackmott/rust-simd-noise) - Super fast SIMD noise library for Rust.\n- [Josephine](https://github.com/asajeffrey/josephine) - Using JavaScript to safely manage the lifetimes of Rust data.\n- [Colored](https://github.com/mackwic/colored) - Coloring terminal so simple you already know how to do it.\n- [Salva](https://github.com/rustsim/salva) - 2 and 3-dimensional particle-based fluid simulation engine for games and animations.\n- [hdf5](https://github.com/aldanor/hdf5-rust) - HDF5 for Rust.\n- [Schemars](https://github.com/GREsau/schemars) - Generate JSON Schema documents from Rust code.\n- [rusturn](https://github.com/sile/rusturn) - Rust Implementation of TURN server and client.\n- [safer_ffi](https://github.com/getditto/safer_ffi) - Write safer FFI code in Rust without polluting it with unsafe code.\n- [positioned-io](https://github.com/vasi/positioned-io) - Read and write from offsets in Rust.\n- [jlrs](https://github.com/Taaitaaiger/jlrs) - Julia bindings for Rust.\n- [json_typegen](https://github.com/evestera/json_typegen) - Rust types from JSON samples.\n- [pathfinding](https://github.com/samueltardieu/pathfinding) - Implements several pathfinding, flow, and graph algorithms in Rust.\n- [bstr](https://github.com/BurntSushi/bstr) - String type for Rust that is not required to be valid UTF-8.\n- [cron](https://github.com/zslayton/cron) - Cron expression parser in Rust.\n- [Lelet](https://github.com/win-t/lelet) - Task executor that inspired by golang runtime.\n- [relibc](https://github.com/redox-os/relibc) - Portable POSIX C standard library written in Rust. It is under heavy development, and currently supports Redox and Linux.\n- [wasm-mt](https://github.com/w3reality/wasm-mt) - Multithreading library for Rust and WebAssembly.\n- [Simba](https://github.com/rustsim/simba) - SIMD algebra for Rust.\n- [render](https://github.com/render-rs/render.rs) - Safe and simple template engine with the ergonomics of JSX.\n- [memmap2](https://github.com/RazrFalcon/memmap2-rs) - Cross-platform Rust API for memory mapped IO.\n- [bus](https://github.com/jonhoo/bus) - Efficient, lock-free, bounded Rust broadcast channel.\n- [sdfu](https://github.com/termhn/sdfu) - Signed Distance Field Utilities.\n- [webrtc-audio-processing](https://github.com/tonarino/webrtc-audio-processing) - Wrapper around PulseAudio's repackaging of WebRTC's AudioProcessing module.\n- [Elfkit](https://github.com/aep/elfkit) - Rust elf parsing, manipulation and (re)linking toolkit.\n- [owning-ref-rs](https://github.com/Kimundi/owning-ref-rs) - Library for creating references that carry their owner with them.\n- [Nuclei](https://github.com/vertexclique/nuclei) - Proactive IO system which is runtime agnostic and can work with any runtime. ([Lobsters](https://lobste.rs/s/qzuwsl/nuclei_proactive_io_runtime_system))\n- [Autocxx](https://github.com/google/autocxx) - Tool for calling C++ from Rust in a heavily automated, but safe, fashion. ([Reddit](https://www.reddit.com/r/rust/comments/iefeum/googleautocxx_calling_c_from_rust_in_a_heavily/))\n- [Scipio](https://github.com/DataDog/scipio) - Cooperative Thread-per-Core crate for Rust & Linux based on io_uring. ([Article](https://www.datadoghq.com/blog/engineering/introducing-scipio/)) ([HN](https://news.ycombinator.com/item?id=24976533))\n- [Rust command-line library](https://github.com/rust-shell-script/rust_cmd_lib) ([HN](https://news.ycombinator.com/item?id=24249646))\n- [rustcommon](https://github.com/twitter/rustcommon) - Common Twitter Rust lib.\n- [rust-dominator](https://github.com/Pauan/rust-dominator) - Zero cost declarative DOM library using FRP signals for Rust.\n- [maplit](https://github.com/bluss/maplit) - Rust container / collection literal macros for HashMap, HashSet, BTreeMap, BTreeSet.\n- [cio](https://github.com/oxidecomputer/cio) - Set of Rust libraries for accessing various APIs for doing CIO jobs. ([Automated CIO](https://blog.jessfraz.com/post/the-automated-cio/))\n- [ocaml-interop](https://github.com/simplestaking/ocaml-interop) - OCaml<->Rust FFI with an emphasis on safety.\n- [fs-err](https://github.com/andrewhickman/fs-err) - Simple wrapper around filesystem operations to provide more helpful error messages.\n- [ring-compat](https://github.com/RustCrypto/ring-compat) - Compatibility crate for using RustCrypto's traits with the cryptographic algorithm implementations from ring.\n- [untrusted.rs](https://github.com/briansmith/untrusted) - Safe, fast, zero-panic, zero-crashing, zero-allocation parsing of untrusted inputs in Rust.\n- [rust-dangerous](https://github.com/avitex/rust-dangerous) - Rust library for safely and explicitly parsing user-generated data.\n- [magick-rust](https://github.com/nlfiedler/magick-rust) - Rust bindings for ImageMagick.\n- [indoc](https://github.com/dtolnay/indoc) - Indented document literals for Rust.\n- [libgoblin](https://github.com/m4b/goblin) - Impish, cross-platform binary parsing crate, written in Rust.\n- [com-rs](https://github.com/microsoft/com-rs) - Rust Crate for Creating and Consuming COM APIs.\n- [Headcrab](https://github.com/headcrab-rs/headcrab) - Modern Rust debugging library. ([The Soul of a New Debugger](http://nbaksalyar.github.io/2020/07/12/soul-of-a-new-debugger.html))\n- [rust-dlopen](https://github.com/szymonwieloch/rust-dlopen) - Rust library for opening and working with dynamic link libraries.\n- [rust-lazysort](https://github.com/benashford/rust-lazysort) - Iterate in a lazily achieved sorted order.\n- [decimal](https://github.com/alkis/decimal) - Decimal Floating Point arithmetic for rust.\n- [declio](https://github.com/agausmann/declio) - Declarative I/O serialization library.\n- [rye](https://github.com/mpdn/rye) - Minimal, x86-64-only experiment into adding fibers to Rust.\n- [stdsimd](https://github.com/rust-lang/stdsimd) - Rust's standard library portable SIMD API.\n- [act-zero](https://github.com/Diggsey/act-zero) - Actor system for Rust.\n- [Scones](https://github.com/joshua-maros/scones) - Quick and powerful constructor/builder generation in Rust.\n- [rustls-native-certs](https://github.com/ctz/rustls-native-certs) - Integration with OS certificate stores for rustls.\n- [Tokio Tls](https://github.com/tokio-rs/tls) - Collection of Tokio based TLS libraries.\n- [shared-arena](https://github.com/sebastiencs/shared-arena) - Thread-safe & efficient memory pool.\n- [random_color](https://github.com/elementh/random_color) - Rust crate for generating random attractive colors.\n- [flexi_logger](https://github.com/emabee/flexi_logger) - Flexible logger for rust programs that can write to stderr or to log files.\n- [spin-rs](https://github.com/mvdnes/spin-rs) - Spin-based synchronization primitives.\n- [Tremor](https://github.com/tremor-rs/tremor-runtime) - Event processing system for unstructured data with rich support for structural pattern matching, filtering and transformation. ([Web](https://www.tremor.rs/)) ([v0.9 release](https://www.tremor.rs/blog/2020-10-16-v09-release/))\n- [uom](https://github.com/iliekturtles/uom) - Units of measurement -- type-safe zero-cost dimensional analysis.\n- [tar-rs](https://github.com/alexcrichton/tar-rs) - Tar file reading/writing for Rust.\n- [Rio](https://github.com/oxigraph/rio) - RDF parsers library.\n- [mles-rs](https://github.com/jq-rs/mles-rs) - Distributed publish-subscribe data service and Mles protocol reference implementation on Rust, Tokio and Serde.\n- [sharded-slab](https://github.com/hawkw/sharded-slab) - Lock-free concurrent slab. Provide pre-allocated storage for many instances of a single data type.\n- [inline-c](https://github.com/Hywan/inline-c-rs) - Write and execute C code inside Rust.\n- [includedir](https://github.com/tilpner/includedir) - Include a whole directory tree at compile time.\n- [strsim-rs](https://github.com/dguo/strsim-rs) - Rust implementations of string similarity metrics.\n- [uefi-rs](https://github.com/rust-osdev/uefi-rs) - Rust wrapper for UEFI. ([HN](https://news.ycombinator.com/item?id=24888307))\n- [OpenTelemetry-Rust](https://github.com/open-telemetry/opentelemetry-rust) - OpenTelemetry API and SDK for Rust.\n- [cap-std](https://github.com/bytecodealliance/cap-std) - Capability-oriented version of the Rust standard library. ([Article](https://blog.sunfishcode.online/introducing-cap-std/)) ([Lobsters](https://lobste.rs/s/rlwby3/introducing_cap_std_capability_based))\n- [Fuzzy Matcher](https://github.com/lotabout/fuzzy-matcher) - Fuzzy Matching Library for Rust.\n- [dirs-next](https://github.com/xdg-rs/dirs) - Low-level library that provides config/cache/data paths.\n- [generator-rs](https://github.com/Xudong-Huang/generator-rs) - Rust stackful generator library.\n- [image2](https://github.com/zshipko/image2-rs) - Image processing library for Rust.\n- [ZEXE](https://github.com/scipr-lab/zexe) - Rust library for decentralized private computation.\n- [cargo-flash](https://github.com/probe-rs/cargo-flash) - Cargo extension for programming microcontrollers.\n- [object](https://github.com/gimli-rs/object) - Unified interface for reading and writing object file formats.\n- [fancy-regex](https://github.com/fancy-regex/fancy-regex) - Rust library for regular expressions using \"fancy\" features like look-around and backreferences.\n- [rust-base64](https://github.com/marshallpierce/rust-base64) - base64, in rust.\n- [scraper](https://github.com/causal-agent/scraper) - HTML parsing and querying with CSS selectors.\n- [rust-gc](https://github.com/Manishearth/rust-gc) - Simple tracing (mark and sweep) garbage collector for Rust.\n- [anchors](https://github.com/lord/anchors) - Self adjusting computations in rust.\n- [gpu-allocator](https://github.com/Traverse-Research/gpu-allocator) - Memory allocator written in pure Rust for GPU memory in Vulkan and in the future DirectX 12.\n- [rspirv-reflect](https://github.com/Traverse-Research/rspirv-reflect) - Minimal SPIR-V reflection library.\n- [rkv](https://github.com/mozilla/rkv) - Simple, humane, typed Rust interface to LMDB.\n- [difference.rs](https://github.com/johannhof/difference.rs) - Rust text diffing library with built-in diffing assertion.\n- [liquid-rust](https://github.com/cobalt-org/liquid-rust) - Liquid templating for Rust.\n- [vmap-rs](https://github.com/kalamay/vmap-rs) - Cross-platform library for fast and safe memory-mapped IO in Rust.\n- [metrics](https://github.com/metrics-rs/metrics) - Metrics ecosystem for Rust.\n- [primordial](https://github.com/enarx/primordial) - Low-level CPU primitives.\n- [rkyv](https://github.com/djkoloski/rkyv) - Zero-copy deserialization framework for Rust.\n- [Sparse merkle tree](https://github.com/jjyr/sparse-merkle-tree) - Optimized sparse merkle tree.\n- [X.509 Parser](https://github.com/rusticata/x509-parser) - X.509 parser written in pure Rust. Fast, zero-copy, safe.\n- [swanky](https://github.com/GaloisInc/swanky) - Suite of rust libraries for secure multi-party computation.\n- [lingua-rs](https://github.com/pemistahl/lingua-rs) - Accurate natural language detection library in the Rust ecosystem, suitable for long and short text alike.\n- [fastrand](https://github.com/smol-rs/fastrand) - Simple and fast random number generator.\n- [Kompact](https://github.com/kompics/kompact) - Component System in Rust.\n- [faerie](https://github.com/m4b/faerie) - Magical ELF and Mach-o object file writer backend.\n- [extendr](https://github.com/extendr/extendr) - Low-level R library bindings.\n- [bumpalo](https://github.com/fitzgen/bumpalo) - Fast bump allocation arena for Rust.\n- [r0](https://github.com/rust-embedded/r0) - Memory initialization code written in Rust.\n- [Lunatic](https://github.com/lunatic-solutions/lunatic) - Erlang inspired runtime for WebAssembly. ([Web](https://lunatic.solutions/)) ([HN](https://news.ycombinator.com/item?id=26367029)) ([Lobsters](https://lobste.rs/s/2m7hak/lunatic_erlang_inspired_runtime_for_all)) ([HN](https://news.ycombinator.com/item?id=28008737))\n- [Kira](https://github.com/tesselode/kira) - Library for expressive game audio.\n- [rust-brotli](https://github.com/dropbox/rust-brotli) - Brotli compressor and decompressor written in rust that optionally avoids the stdlib.\n- [infer](https://github.com/bojand/infer) - Small crate to infer file and MIME type by checking the magic number signature.\n- [pretty-env-logger](https://github.com/seanmonstar/pretty-env-logger) - Pretty, easy-to-use logger for Rust.\n- [grmtools](https://github.com/softdevteam/grmtools) - Suite of Rust libraries and binaries for parsing text, both at compile-time, and run-time.\n- [HashRing](https://github.com/jeromefroe/hashring-rs) - Minimal implementation of consistent hashing.\n- [inherent](https://github.com/dtolnay/inherent) - Make trait methods callable without the trait in scope.\n- [nanoserde](https://github.com/not-fl3/nanoserde) - Serialisation library with zero dependencies.\n- [coca](https://github.com/teryror/coca) - Allocation-free data structures that make do with the memory they're given.\n- [typed-index-collections](https://github.com/zheland/typed-index-collections) - Typed index version of Rust slice and Vec containers.\n- [slotmap](https://github.com/orlp/slotmap) - Slotmap data structure for Rust.\n- [Erased Serde](https://github.com/dtolnay/erased-serde) - Type-erased Serialize, Serializer and Deserializer traits.\n- [hyphenation](https://github.com/tapeinosyne/hyphenation) - Text hyphenation for Rust.\n- [genovo](https://github.com/innoave/genevo) - Execute genetic algorithm (GA) simulations in a customizable and extensible way.\n- [dhat](https://github.com/nnethercote/dhat-rs) - Heap profiling and ad hoc profiling for Rust programs.\n- [Polonius](https://github.com/rust-lang/polonius) - Core library that models the borrow check.\n- [Thermite SIMD](https://github.com/raygon-renderer/thermite) - SIMD library focused on providing portable SIMD acceleration of SoA (Structure of Arrays) algorithms.\n- [generic-array](https://github.com/fizyk20/generic-array) - Generic array types in Rust.\n- [numeric-array](https://github.com/novacrazy/numeric-array) - Wrapper around generic-array that adds efficient numeric trait implementations.\n- [par-stream](https://github.com/jerry73204/par-stream) - Asynchronous Parallel Stream for Rust.\n- [triple-buffer](https://github.com/HadrienG2/triple-buffer) - Implementation of triple buffering written in Rust.\n- [linked-list-allocator](https://github.com/phil-opp/linked-list-allocator) - Create a static allocator.\n- [claim](https://github.com/svartalf/rust-claim) - Assertion macros toolkit for Rust.\n- [reformation](https://github.com/hukumka/reformation) - Parsing via regular expressions using format syntax.\n- [rust-fasthash](https://github.com/flier/rust-fasthash) - Suite of non-cryptographic hash functions for Rust.\n- [GilRs](https://github.com/Arvamer/gilrs) - Game Input Library for Rust.\n- [rendezvous_hash](https://github.com/sile/rendezvous_hash) - Rust implementation of Rendezvous hashing algorithm.\n- [quanta](https://github.com/metrics-rs/quanta) - Speed timing library, useful for getting the current time very quickly.\n- [JMESPath Rust](https://github.com/jmespath/jmespath.rs) - Rust implementation of JMESPath, a query language for JSON.\n- [stream-cancel](https://github.com/jonhoo/stream-cancel) - Rust library for interrupting asynchronous streams.\n- [Mutation](https://github.com/zesterer/mutation) - Unleash the power of nightly Rust to write code that's generic over mutation.\n- [evmap](https://github.com/jonhoo/evmap) - Lock-free, eventually consistent, concurrent multi-value map.\n- [RustFFT](https://github.com/ejmahler/RustFFT) - Mixed-radix FFT library written in pure Rust.\n- [RIPP (Rust Inner Pairing Products)](https://github.com/arkworks-rs/ripp) - Rust library for proofs about inner pairing products, and applications built atop these.\n- [fake-rs](https://github.com/cksac/fake-rs) - Rust library for generating fake data.\n- [Xactor](https://github.com/sunli829/xactor) - Rust actors framework based on async-std.\n- [Failsafe](https://github.com/dmexe/failsafe-rs) - Circuit breaker implementation for rust.\n- [rust-ascii](https://github.com/tomprogrammer/rust-ascii) - ASCII-only equivalents to `char`, `str` and `String`.\n- [varint-simd](https://github.com/as-com/varint-simd) - SIMD-accelerated varint encoder and decoder in Rust.\n- [ndarray-linalg](https://github.com/rust-ndarray/ndarray-linalg) - Linear algebra package for rust-ndarray using LAPACK binding.\n- [Merkle Storage](https://github.com/fafk/merkle_storage) - Key-value git-like storage with full history backed by RocksDB.\n- [arcode-rs](https://github.com/cgburgess/arcode-rs) - Arithmetic coder for Rust.\n- [heck](https://github.com/withoutboats/heck) - Case conversion library.\n- [kApp](https://github.com/kettle11/kapp) - Pure Rust window and input library for Windows, Mac, and Web.\n- [predicates-rs](https://github.com/assert-rs/predicates-rs) - Implementation of boolean-valued predicate functions in Rust.\n- [assert_cmd](https://github.com/assert-rs/assert_cmd) - Assert process::Command - Easy command initialization and assertions.\n- [toml-rs](https://github.com/alexcrichton/toml-rs) - TOML encoding/decoding library for Rust.\n- [Real-Time Ring Buffer](https://github.com/mgeier/rtrb) - Wait-free single-producer single-consumer ring buffer for Rust.\n- [daggy](https://github.com/mitchmindtree/daggy) - Directed acyclic graph data structure for Rust.\n- [LibHoare](https://github.com/nrc/libhoare) - Design by contract style assertions for Rust.\n- [crc32fast](https://github.com/srijs/rust-crc32fast) - Fast, SIMD-accelerated CRC32 (IEEE) checksum computation in Rust.\n- [Ouroboros](https://github.com/joshua-maros/ouroboros) - Easy self-referential struct generation for Rust.\n- [Gazebo](https://github.com/facebookincubator/gazebo) - Rust library containing a collection of small well-tested primitives.\n- [Arcon](https://github.com/cda-group/arcon) - Runtime for Writing Streaming Applications in Rust.\n- [joinery](https://github.com/Lucretiel/joinery) - Rust library for generically joining iterables with a separator.\n- [rpmalloc-rs](https://github.com/EmbarkStudios/rpmalloc-rs) - Cross-platform Rust global memory allocator using rpmalloc.\n- [shadow-rs](https://github.com/baoyachi/shadow-rs) - Build-time information stored in your binary.\n- [jni-rs](https://github.com/jni-rs/jni-rs) - Rust bindings to the Java Native Interface.\n- [Plotly](https://github.com/igiagkiozis/plotly) - Plotting library for Rust powered by Plotly.js\n- [Spiril](https://github.com/Jeffail/spiril) - Rust library for genetic algorithms.\n- [cstree](https://github.com/domenicquirl/cstree) - Library for creating and working with concrete syntax trees (CSTs).\n- [Cocoon](https://github.com/fadeevab/cocoon) - Simple and relyable secure storage with strong encryption and format validation.\n- [BitReader](https://github.com/irauta/bitreader) - Helper type to extract strings of bits from a slice of bytes.\n- [Rust FUSE](https://github.com/zargony/fuse-rs) - Rust library for filesystems in userspace (FUSE).\n- [bpfs](https://github.com/bparli/bpfs) - Rust In-Memory Filesystem.\n- [flize](https://github.com/xacrimon/flize) - Non global, configurable and fast concurrent resource reclamation.\n- [num-traits](https://github.com/rust-num/num-traits) - Numeric traits for generic mathematics in Rust.\n- [mlua](https://github.com/khvzak/mlua) - High level Lua bindings to Rust with async/await support..\n- [victoria-dom](https://github.com/khvzak/victoria-dom) - Minimalistic HTML parser with CSS selectors.\n- [MultiQueue2](https://github.com/abbychau/multiqueue2) - Fast MPMC Broadcast Queue.\n- [Linkme](https://github.com/dtolnay/linkme) - Safe cross-platform linker shenanigans.\n- [hold_my_beer](https://github.com/Jake-Shadle/hold_my_beer) - Don't let unsafe get you down.\n- [rusty-sandbox](https://github.com/myfreeweb/rusty-sandbox) - Sandboxing library for Rust.\n- [etcd-client](https://github.com/etcdv3/etcd-client) - etcd v3 API client for Rust. It provides asynchronous client backed by tokio and tonic.\n- [alga](https://github.com/dimforge/alga) - Abstract algebra for Rust.\n- [Postcard](https://github.com/jamesmunns/postcard) - no_std + serde compatible message library for Rust.\n- [soa-derive](https://github.com/lumol-org/soa-derive) - Array of Struct to Struct of Array helpers in Rust.\n- [bacon](https://github.com/aftix/bacon) - Scientific Computing in Rust. ([Article](https://aftix.xyz/home/bacon/))\n- [slab](https://github.com/carllerche/slab) - Pre-allocated storage for a uniform data type.\n- [Cuckoo Filter](https://github.com/axiomhq/rust-cuckoofilter) - Bloom filter replacement for approximated set-membership queries.\n- [QuantMath](https://github.com/MarcusRainbow/QuantMath) - Financial maths library for risk-neutral pricing and risk. ([HN](https://news.ycombinator.com/item?id=25814113))\n- [Egg](https://github.com/egraphs-good/egg) - Flexible, high-performance e-graph library. ([Web](https://egraphs-good.github.io/)) ([Talk](https://www.youtube.com/watch?v=LKELTEOFY-s)) ([HN](https://news.ycombinator.com/item?id=26587209))\n- [Codegen](https://github.com/carllerche/codegen) - Provides an builder API to assist in generating Rust code.\n- [similar](https://github.com/mitsuhiko/similar) - High level diffing library for rust based on diffs.\n- [x86_64](https://github.com/rust-osdev/x86_64) - Library to program x86_64 hardware.\n- [lz4_flex](https://github.com/PSeitz/lz4_flex) - Pure Rust implementation of raw LZ4 compression/decompression.\n- [Stakker](https://github.com/uazu/stakker) - Lightweight low-level single-threaded actor runtime.\n- [Vicis](https://github.com/maekawatoshiki/vicis) - Manipulate LLVM-IR in Pure Rust.\n- [tryhard](https://github.com/EmbarkStudios/tryhard) - Easily retry futures.\n- [visualizer2](https://github.com/Rahix/visualizer2) - Audio Visualization in Rust.\n- [rtt-target](https://github.com/mvirkkunen/rtt-target) - Target side implementation of the RTT (Real-Time Transfer) I/O protocol.\n- [shuffling-allocator](https://github.com/fitzgen/shuffling-allocator)\n- [governor](https://github.com/antifuchs/governor) - Library for regulating the flow of data.\n- [flurry](https://github.com/jonhoo/flurry) - Port of Java's ConcurrentHashMap to Rust.\n- [fast-float](https://github.com/aldanor/fast-float-rust) - Super-fast decimal number parser from strings into floats.\n- [saifish](https://github.com/Kogia-sima/sailfish) - Simple, small, and extremely fast template engine for Rust. ([Docs](https://sailfish.netlify.app/en/))\n- [async-task](https://github.com/smol-rs/async-task) - Task abstraction for building executors.\n- [Minitrace](https://github.com/tikv/minitrace-rust) - High-performance timeline tracing library for Rust, used by TiKV.\n- [freeverb-rs](https://github.com/irh/freeverb-rs) - Rust implementation of the Freeverb algorithm.\n- [Trie](https://github.com/paritytech/trie) - Generic implementation of the Base-16 Modified Merkle Tree (\"Trie\") data structure.\n- [config-rs](https://github.com/mehcode/config-rs) - Layered configuration system for Rust applications (with strong support for 12-factor applications).\n- [countme](https://github.com/matklad/countme) - Library to quickly get the live/total/max counts of allocated instances.\n- [btleplug](https://github.com/deviceplug/btleplug) - Rust Cross-Platform Host-Side Bluetooth LE Access Library.\n- [sysinfo](https://github.com/GuillaumeGomez/sysinfo) - System handler to interact with processes.\n- [Peroxide](https://github.com/Axect/Peroxide) - Rust numeric library contains linear algebra, numerical analysis, statistics and machine learning tools with R, MATLAB, Python like macros.\n- [Embassy](https://github.com/akiles/embassy) - Rust embedded async tools.\n- [uniffi](https://github.com/mozilla/uniffi-rs) - Multi-language bindings generator for rust.\n- [gaol](https://github.com/servo/gaol) - Cross-platform application sandboxing for Rust.\n- [auto_enums](https://github.com/taiki-e/auto_enums) - Library for to allow multiple return types by automatically generated enum.\n- [pin-project](https://github.com/taiki-e/pin-project) - Crate for safe and ergonomic pin-projection.\n- [deepspeech-rs](https://github.com/RustAudio/deepspeech-rs) - Rust bindings of Mozilla's DeepSpeech library.\n- [alloca-rs](https://github.com/playXE/alloca-rs) - Mostly safe no_std wrapper for alloca in Rust.\n- [CPAL](https://github.com/RustAudio/cpal) - Cross-platform audio I/O library in pure Rust.\n- [Tokenizer](https://github.com/meilisearch/Tokenizer) - Library used by Meilisearch to tokenize queries and documents.\n- [dtoa](https://github.com/dtolnay/dtoa) - Fast functions for printing floating-point primitives to an io::Write.\n- [Symphonia](https://github.com/pdeljanov/Symphonia) - Rust audio decoding and media demuxing library supporting OGG, FLAC, MP3, and WAV.\n- [treediff-rs](httops://github.com/Byron/treediff-rs) - Library to compare arbitrary structured data of the same type, efficiently.\n- [replace_with](https://github.com/alecmocatta/replace_with) - Temporarily take ownership of a value at a mutable location, and replace it with a new value based on the old one.\n- [Moka](https://github.com/moka-rs/moka) - Fast, concurrent cache library for Rust.\n- [nonblockinghashmap](https://github.com/rlei/nonblockinghashmap) - Non-blocking hash map in Rust.\n- [thread_io](https://github.com/markschl/thread_io) - Rust crate for performing I/O in background thread.\n- [LRU Cache](https://github.com/jeromefroe/lru-rs) - Implementation of a LRU cache in Rust.\n- [Aper](https://github.com/aper-dev/aper) - Synchronized state machines for Rust over WebSockets.\n- [Parry](https://github.com/dimforge/parry) - 2D and 3D collision-detection library for Rust.rs.\n- [meio](https://github.com/rillrate/meio) - Async actor framework for Rust.\n- [Decimal](https://github.com/paupino/rust-decimal) - Decimal Implementation written in pure Rust suitable for financial calculations.\n- [message-io](https://github.com/lemunozm/message-io) - Event-driven message library for building network applications easy and fast.\n- [GraphQL Parser](https://github.com/graphql-rust/graphql-parser) - Parser, formatter and AST for graphql query and schema definition language for rust.\n- [multer-rs](https://github.com/rousan/multer-rs) - Async parser for multipart/form-data content-type in Rust.\n- [conch-runtime](https://github.com/ipetkov/conch-runtime) - Rust library/runtime for executing Unix shell commands.\n- [rust-clipboard](https://github.com/aweinstock314/rust-clipboard) - System Clipboard interfacing library in Rust.\n- [async-io](https://github.com/smol-rs/async-io) - Async I/O and timers.\n- [stroke-rs](https://github.com/dorianprill/stroke-rs) - Zero-allocation library providing const-generic implementations of Bézier curves, B-Spline curves.\n- [j4rs](https://github.com/astonbitecode/j4rs) - Java for Rust.\n- [autocfg](https://github.com/cuviper/autocfg) - Rust library for build scripts to automatically configure code based on compiler support.\n- [Figment](https://github.com/SergioBenitez/Figment) - Semi-hierarchical configuration library for Rust.\n- [Arbitrary](https://github.com/rust-fuzz/arbitrary) - Trait for generating structured data from arbitrary, unstructured input.\n- [RRT](https://github.com/openrr/rrt) - Rapidly-exploring Random Tree library in Rust.\n- [storage-poc](https://github.com/matthieu-m/storage-poc) - Exploration of using Storage instead of Allocator to parameterize collections in Rust.\n- [safe-transmute-rs](https://github.com/nabijaczleweli/safe-transmute-rs) - Safe-guarded transmute for Rust.\n- [partialdebug](https://github.com/dimpolo/partialdebug) - Derive Debug for types where not all fields implement Debug.\n- [wide](https://github.com/Lokathor/wide) - Crate to help you go wide. By which I mean use SIMD stuff.\n- [Tailcall](https://github.com/alecdotninja/tailcall) - Safe, zero-cost tail recursion for stable Rust.\n- [async-imap](https://github.com/async-email/async-imap) - Async IMAP implementation in Rust.\n- [nachricht](https://github.com/yasammez/nachricht) - Self-describing data interchange format.\n- [Enumflags](https://github.com/NieDzejkob/enumflags2) - Rust library for efficiently representing sets of data-less enums.\n- [cooper](https://github.com/fpagliughi/cooper-rs) - Simple in-process Actor library in Rust.\n- [Mtrx](https://github.com/MayorMonty/mtrx) - Type-safe matrix operations using Rust's const generics.\n- [Rustwide](https://github.com/rust-lang/rustwide) - Execute your code on the Rust ecosystem.\n- [array-init](https://github.com/Manishearth/array-init) - Safe wrapper for initializing arrays.\n- [voladdress](https://github.com/rust-console/voladdress) - Crate to make volatile memory operations easy to work with.\n- [bb8](https://github.com/djc/bb8) - Full-featured connection pool, designed for asynchronous connections (using tokio).\n- [Sophia](https://github.com/pchampin/sophia_rs) - Rust toolkit for RDF and Linked Data.\n- [switchyard](https://github.com/BVE-Reborn/switchyard) - Real-time compute-focused async executor with job pools, thread-local data, and priorities.\n- [tokio-uring](https://github.com/tokio-rs/tokio-uring) - tokio-uring backed runtime for Rust.\n- [rust-iterators](https://github.com/rustomax/rust-iterators) - Basic Rust iterator usage.\n- [uluru](https://github.com/servo/uluru) - Simple, fast, LRU cache implementation.\n- [Typetag](https://github.com/dtolnay/typetag) - Serde serializable and deserializable trait objects.\n- [popol](https://github.com/cloudhead/popol) - Minimal non-blocking I/O for Rust.\n- [escher](https://github.com/petrosagg/escher) - Self-referencial structs using async stacks.\n- [dipa](https://github.com/chinedufn/dipa) - Makes it easy to efficiently delta encode large Rust data structures.\n- [Scribe](https://github.com/jmacdonald/scribe) - Text editor toolkit.\n- [mint](https://github.com/kvark/mint) - Math Interoperability Types.\n- [niffler](https://github.com/luizirber/niffler) - Simple and transparent support for compressed files.\n- [zstd-rs](https://github.com/gyscos/zstd-rs) - Rust binding for the zstd compression library.\n- [markup.rs](https://github.com/utkarshkukreti/markup.rs) - Blazing fast, type-safe template engine for Rust.\n- [argmin](https://github.com/argmin-rs/argmin) - Mathematical optimization in pure Rust.\n- [trait-set](https://github.com/popzxc/trait-set) - Trait aliases on stable Rust.\n- [String Interner](https://github.com/Robbepop/string-interner) - Data structure to efficiently intern, cache and restore strings.\n- [simdutf8](https://github.com/rusticstuff/simdutf8) - SIMD-accelerated UTF-8 validation for Rust.\n- [biquad](https://github.com/korken89/biquad-rs) - Rust library for digital second order IIR filtrers, also known as biquads.\n- [Deltoid](https://github.com/jjpe/deltoid) - Type-driven rust library that can be used to calculate deltas.\n- [ipc-channel](https://github.com/servo/ipc-channel) - Multiprocess drop-in replacement for Rust channels.\n- [Prepona](https://github.com/maminrayej/prepona) - Graph crate with simplicity in mind.\n- [delay-timer](https://github.com/BinChengZhao/delay-timer) - Time-manager of delayed tasks.\n- [jsonschema](https://github.com/Stranger6667/jsonschema-rs) - JSON Schema validation library.\n- [rstar](https://github.com/georust/rstar) - R\\*-tree library for the rust ecosystem.\n- [profiling](https://github.com/aclysma/profiling) - Provides a very thin abstraction over instrumented profiling crates like puffin, optick, tracy, and superluminal-perf.\n- [ocaml-rs](https://github.com/zshipko/ocaml-rs) - OCaml extensions in Rust.\n- [gumdrop](https://github.com/murarth/gumdrop) - Rust option parser with custom derive support.\n- [memchr](https://github.com/BurntSushi/memchr) - Optimized string search routines for Rust.\n- [Scalable Concurrent Containers](https://github.com/wvwwvwwv/scalable-concurrent-containers) - Scalable concurrent data structures for database management systems.\n- [lexical](https://github.com/Alexhuszagh/rust-lexical) - Fast lexical conversion routines for both std and no_std environments.\n- [Drop-Merge-Sort](https://github.com/emilk/drop-merge-sort) - Adaptive sorting algorithm.\n- [Sauce](https://github.com/DanCardin/sauce) - Context specific everything.\n- [tokio-console](https://github.com/tokio-rs/console) - Diagnostics and debugging tool for asynchronous Rust programs.\n- [jsonrpsee](https://github.com/paritytech/jsonrpsee) - Rust JSON-RPC library on top of async/await.\n- [bytemuck](https://github.com/Lokathor/bytemuck) - Crate for mucking around with piles of bytes.\n- [heed](https://github.com/Kerollmops/heed) - Fully typed LMDB/MDBX wrapper with minimum overhead.\n- [FUSE-Rust](https://github.com/cberner/fuser) - Rust library crate for easy implementation of FUSE filesystems in userspace.\n- [micromath](https://github.com/tarcieri/micromath) - Embedded Rust arithmetic, 2D/3D vector, and statistics library.\n- [Ordered Floats](https://github.com/reem/rust-ordered-float) - Provides several wrapper types for Ord and Eq implementations on f64.\n- [sorbus](https://github.com/CAD97/sorbus) - Generic \"green\" syntax tree implementation.\n- [Pointer Utils](https://github.com/CAD97/pointer-utils) - Collection of small utilities for working with pointer types in Rust.\n- [Valuable](https://github.com/tokio-rs/valuable) - Provides object-safe value inspection. Use cases include passing structured data to trait objects and object-safe serialization.\n- [semver](https://github.com/dtolnay/semver) - Parser and evaluator for Cargo's flavor of Semantic Versioning.\n- [hashed-permutation](https://github.com/afnanenayet/hashed-permutation) - An implementation of Kensler's hashed permutation algorithm.\n- [Array2D](https://github.com/HarrisonMc555/array2d) - Statically-sized two-dimensional array written in Rust.\n- [Ropey](https://github.com/cessen/ropey) - utf8 text rope for manipulating and editing large texts.\n- [Twoway](https://github.com/bluss/twoway) - Fast substring search for strings and byte strings, using the two-way algorithm.\n- [serde-diff](https://github.com/amethyst/serde-diff) - Utility for comparing two structs and re-applying the differences to other structs.\n- [Sluice](https://github.com/sagebind/sluice) - Asynchronous byte buffers and pipes for concurrent I/O programming.\n- [terminusdb-store](https://github.com/terminusdb/terminusdb-store) - Tokio-enabled data store for triple data.\n- [async-attributes](https://github.com/async-rs/async-attributes) - Experimental language-level polyfills for Async Rust.\n- [speedy](https://github.com/koute/speedy) - Fast binary serialization framework.\n- [serde_with](https://github.com/jonasbb/serde_with) - Custom de/serialization functions for Rust's serde using the with-annotation.\n- [tabled](https://github.com/zhiburt/tabled) - Easy to use library for pretty print tables of Rust structs and enums.\n- [async-stream](https://github.com/tokio-rs/async-stream) - Asynchronous streams for Rust using async & await notation.\n- [Concread](https://github.com/kanidm/concread) - Concurrently Readable Data Structures for Rust.\n- [cap](https://github.com/alecmocatta/cap) - Allocator that can track and limit memory usage.\n- [Instant Distance](https://github.com/InstantDomain/instant-distance) - Fast approximate nearest neighbor searching in Rust, based on HNSW index.\n- [static-rc](https://github.com/matthieu-m/static-rc) - Compile-time reference counting.\n- [async raft](https://github.com/async-raft/async-raft) - Implementation of the Raft distributed consensus protocol using the Tokio framework.\n- [arrow-rs](https://github.com/apache/arrow-rs) - Native Rust implementation of Apache Arrow.\n- [gtmpl-rust](https://github.com/fiji-flo/gtmpl-rust) - Go text/template for rust.\n- [rust-x86](https://github.com/gz/rust-x86) - Rust library to use x86 (amd64) specific functionality and registers.\n- [granne](https://github.com/granne/granne) - Graph-based Approximate Nearest Neighbor Search.\n- [Polars](https://github.com/pola-rs/polars) - Fast multi-threaded DataFrame library in Rust and Python.\n- [TransIter](https://github.com/neithernut/transiter) - Iterator suitable for navigating recursive structures and DAGs in rust.\n- [stdx](https://github.com/brson/stdx) - Missing batteries of Rust.\n- [Exocore](https://github.com/appaquet/exocore) - Distributed applications framework with private and encrypted data storage.\n- [rodio](https://github.com/RustAudio/rodio) - Rust audio playback library.\n- [segvec](https://github.com/mccolljr/segvec) - SegVec data structure for rust. Similar to Vec, but allocates memory in chunks of increasing size.\n- [confy](https://github.com/rust-cli/confy) - Zero-boilerplate configuration management in Rust.\n- [flatparse](https://github.com/AndrasKovacs/flatparse) - Fast parsing from bytestrings.\n- [Live Reload](https://github.com/porglezomp-misc/live-reloading-rs) - Live reloading for Rust programming.\n- [Iftree](https://github.com/evolutics/iftree) - Include many files in your Rust code for self-contained binaries.\n- [Ariadne](https://github.com/zesterer/ariadne) - Fancy error diagnostics & reporting crate.\n- [Chumsky](https://github.com/zesterer/chumsky) - Friendly parser combinator crate that makes writing LL(1) parsers with error recovery easy.\n- [async-backplane](https://github.com/irrustible/async-backplane) - Easy, Erlang-inspired fault-tolerance framework for Rust Futures.\n- [Eventuals](https://github.com/edgeandnode/eventuals) - Eventually consistent values for Rust.\n- [cargo-profile](https://github.com/kdy1/cargo-profile) - Profiling rust program made easy.\n- [Arrow2](https://github.com/jorgecarleitao/arrow2) - Transmute-free Rust library to work with the Arrow format.\n- [beef](https://github.com/maciejhirsz/beef) - Faster, more compact implementation of std::borrow::Cow.\n- [uuid](https://github.com/uuid-rs/uuid) - Generate and parse UUIDs.\n- [QuantLib](https://github.com/piquette/quantlib) - Idiomatic rust implementation of the QuantLib C++ quantitative finance library.\n- [dynamic_reload](https://github.com/emoon/dynamic_reload) - Dynamic reloading of shared libraries.\n- [rosc](https://github.com/klingtnet/rosc) - OSC library for Rust.\n- [Y CRDT](https://github.com/yjs/y-crdt)\n- [Hora](https://github.com/hora-search/hora) - Approximate nearest neighbor search algorithm library. ([Web](https://horasearch.com/))\n- [fork](https://github.com/immortal/fork) - Library for creating a new process detached from the controlling terminal (daemon) using the fork and setsid syscalls.\n- [peekread](https://github.com/orlp/peekread) - Allows you to take an arbitrary Read stream and 'peek ahead' into the stream without consuming the original stream.\n- [Dialectic](https://github.com/boltlabs-inc/dialectic) - Transport-polymorphic, asynchronous session types for Rust.\n- [MRML](https://github.com/jdrouet/mrml) - Reimplementation of the nice MJML markup language in Rust.\n- [p2panda](https://github.com/p2panda/p2panda) - Provides all tools required to write a client for the p2panda network.\n- [log4rs](https://github.com/estk/log4rs) - Highly configurable logging framework for Rust.\n- [executor](https://github.com/richardanaya/executor) - Minimalistic async/await executor for Rust.\n- [wait-timeout](https://github.com/alexcrichton/wait-timeout) - Waiting on a child process with a timeout in Rust.\n- [getrandom](https://github.com/rust-random/getrandom) - Small cross-platform library to securely get random data (entropy).\n- [stdarch](https://github.com/rust-lang/stdarch) - Rust's standard library SIMD components.\n- [Gallium](https://github.com/ComLarsic/gallium_ecs) - Simple entity-component-system crate for rust with serialization support.\n\n## Cargo Plugins\n\n- [cargo-instruments](https://github.com/cmyr/cargo-instruments) - Cargo plugin to generate Xcode Instruments trace files.\n- [cargo-c](https://github.com/lu-zero/cargo-c) - Cargo C-ABI helpers.\n- [cargo-deny](https://github.com/EmbarkStudios/cargo-deny) - Cargo plugin to help you manage large dependency graphs.\n- [cargo-edit](https://github.com/killercup/cargo-edit) - Utility for managing cargo dependencies from the command line.\n- [cargo-profiler](https://github.com/svenstaro/cargo-profiler) - Cargo subcommand to profile binaries.\n- [cargo-outdated](https://github.com/kbknapp/cargo-outdated) - Cargo subcommand for displaying when Rust dependencies are out of date.\n- [cargo-modules](https://github.com/regexident/cargo-modules) - Cargo plugin for showing a tree-like overview of a crate's modules.\n- [cargo-tree](https://github.com/sfackler/cargo-tree) - Cargo subcommand that visualizes a crate's dependency graph in a tree-like format.\n- [cargo cache](https://github.com/matthiaskrgr/cargo-cache) - Manage cargo cache (\\${CARGO_HOME}, ~/.cargo/), print sizes of dirs and remove dirs selectively.\n- [stack-sizes](https://github.com/japaric/stack-sizes) - Tools to print stack usage information emitted by LLVM in human readable format.\n- [cargo-spellcheck](https://github.com/drahnr/cargo-spellcheck) - Checks all your documentation for spelling mistakes.\n- [cargo-lipo](https://github.com/TimNN/cargo-lipo) - Cargo subcommand to automatically create universal libraries for iOS.\n- [cargo-expand](https://github.com/dtolnay/cargo-expand) - Subcommand to show result of macro expansion.\n- [rust-script](https://github.com/fornwall/rust-script) - Rust files and expressions as scripts without any setup or compilation step. ([Web](https://rust-script.org/))\n- [cargo-limit](https://github.com/alopatindev/cargo-limit) - Cargo with less noise: warnings are skipped until errors are fixed, etc.\n- [cargo-deadlinks](https://github.com/deadlinks/cargo-deadlinks) - Check your cargo doc documentation for broken links.\n- [cargo-osha](https://github.com/icefoxen/cargo-osha) - Cargo plugin to list unsafe code in a Rust project.\n- [Cargo Wipe](https://github.com/mihai-dinculescu/cargo-wipe) - Recursively finds and optionally wipes all \"target\" or \"node_modules\" folders that are found in the current path.\n- [cargo xtask](https://github.com/matklad/cargo-xtask) - Way to add free-form automation to a Rust project, a-la make, npm run or bespoke bash scripts.\n- [cargo-binutils](https://github.com/rust-embedded/cargo-binutils) - Cargo subcommands to invoke the LLVM tools shipped with the Rust toolchain.\n- [cargo-embed](https://github.com/probe-rs/cargo-embed) - Cargo extension for working with microcontrollers.\n- [cargo makedocs](https://github.com/Bunogi/cargo-makedocs) - Cargo subcommand to build documentation for development easier.\n- [cargo-hack](https://github.com/taiki-e/cargo-hack) - Cargo subcommand to provide some options useful for testing and continuous integration.\n- [probe-run](https://github.com/knurling-rs/probe-run) - Run embedded programs just like native ones.\n- [cargo-up](https://github.com/pksunkara/cargo-up) - Automatically upgrade breaking changes.\n- [cargo-update](https://github.com/nabijaczleweli/cargo-update) - cargo subcommand for checking and applying updates to installed executables.\n- [cargo-mobile](https://github.com/BrainiumLLC/cargo-mobile) - Rust on mobile made easy.\n- [Cargo-sweep](https://github.com/holmgr/cargo-sweep) - Cargo subcommand for cleaning up unused build files generated by Cargo.\n- [cargo-supply-chain](https://github.com/rust-secure-code/cargo-supply-chain) - Gather author, contributor and publisher data on crates in your dependency graph.\n- [Cargo Wharf](https://github.com/denzp/cargo-wharf) - Cacheable and efficient Docker images builder for Rust.\n- [cargo-deb](https://github.com/mmstick/cargo-deb) - Cargo subcommand that generates Debian packages from information in Cargo.toml.\n- [Cargo Remote](https://github.com/sgeisler/cargo-remote) - Cargo subcommand to compile rust projects remotely.\n- [cargo-breaking](https://github.com/iomentum/cargo-breaking) - Compares a crate's public API between two different branches, shows what changed, and suggests the next version according to semver.\n\n## Links\n\n- [Docs.rs](https://docs.rs/) - Search rust packages. ([Code](https://github.com/rust-lang/docs.rs))\n- [Lib.rs](https://lib.rs/) - Fast, lightweight, opinionated, unofficial alternative to crates.io.\n- [Some more rust packages](https://github.com/yoshuawuyts/knowledge/blob/dd5cbf2d68bb85fa2e150a607b3267c2d36bc37b/computers/rust/packages.md)\n- [Curated list of Rust code and resources that do NOT exist yet, but would be beneficial to the Rust community](https://github.com/not-yet-awesome-rust/not-yet-awesome-rust)\n- [Crates that don't exist, but should](https://github.com/dtolnay/request-for-implementation)\n- [Aelve Rust packages search](https://codesearch.aelve.com/rust) - Grep over package repositories.\n- [Overview of Rust error handling libraries (2019)](https://blog.yoshuawuyts.com/error-handling-survey/) ([HN](https://news.ycombinator.com/item?id=21606221))\n- [Quickly generate Dash docsets for third-party Rust crates](https://github.com/cmyr/rust-dash-docset-gen)\n- [Interact with crates.io from the command-line](https://github.com/Byron/crates-io-cli-rs)\n- [Rustsim](https://rustsim.org/) - Rust crates for numerical simulation.\n- [linkify](https://github.com/robinst/linkify) - Rust library to find links such as URLs and email addresses in plain text, handling surrounding punctuation correctly.\n- [cargo-udeps](https://github.com/est31/cargo-udeps) - Find unused dependencies in Cargo.toml\n- [cargo-workspaces](https://github.com/pksunkara/cargo-workspaces) - Tool for managing cargo workspaces and their packages, inspired by lerna.\n- [cargo-guppy](https://github.com/facebookincubator/cargo-guppy) - Track and query Cargo dependency graphs.\n- [Ktra](https://github.com/moriturus/ktra) - Your Little Cargo Registry.\n- [RustSec](https://rustsec.org/) - Security advisory database for Rust crates published through crates.io. ([Code](https://github.com/RustSec/advisory-db))\n- [Language development libraries for Rust](https://github.com/Kixiron/rust-langdev)\n- [cargo-cacher](https://github.com/ChrisMacNaughton/cargo-cacher) - Caching server for crates + cargo.\n- [Expose a Rust Library to Other Languages (2021)](https://sixtyfps.io/blog/expose-rust-library-to-other-languages.html)\n- [rust-semverver](https://github.com/rust-lang/rust-semverver) - Automatic checking for semantic versioning in library crates.\n- [Against Packaging Rust Crates (2021)](https://fy.blackhats.net.au/blog/html/2021/02/16/against_packaging_rust_crates.html) ([Lobsters](https://lobste.rs/s/unaq3j/against_packaging_rust_crates))\n- [Starter code for writing procedural macros in Rust](https://github.com/SergioBenitez/proc-macro-starter)\n- [crates.io database dum](https://github.com/dtolnay/db-dump) - Library for scripting analyses against crates.io's database dumps.\n- [Crater](https://github.com/rust-lang/crater) - Tool to run experiments across parts of the Rust ecosystem.\n- [Alexandrie](https://github.com/Hirevo/alexandrie) - Modular alternative crate registry for Rust suitable for use with Cargo.\n- [Cargo Release](https://github.com/sunng87/cargo-release) - Cargo subcommand \"release\": everything about releasing a rust crate.\n- [The most underrated but useful Rust standard library type (2021)](https://dev.to/thepuzzlemaker/the-most-underrated-but-useful-rust-standard-library-type-59b1) ([Lobsters](https://lobste.rs/s/8oq6km/most_underrated_useful_rust_standard))\n- [Carnet](https://github.com/kutometa/carnet) - Small tool that imposes additional security constraints on Rust's official package manager, Cargo.\n- [rust-trending](https://github.com/pbzweihander/rust-trending) - Twitter bot to tweet trending Rust libraries.\n- [nocargo](https://github.com/oxalica/nocargo) - Cargo in nix.\n- [What are the most \"professional\" crates? (2021)](https://www.reddit.com/r/rust/comments/nsvyxq/what_are_the_most_professional_crates/)\n- [Cargo tally](https://github.com/dtolnay/cargo-tally) - Graph the number of crates that depend on your crate over time.\n- [Awesome Cryptography Rust](https://github.com/rust-cc/awesome-cryptography-rust)\n- [Rust Libs Team](https://github.com/rust-lang/libs-team) - Maintains and manages the Rust standard library, and makes sure crates in the Rust organization are maintained.\n- [Doku](https://github.com/anixe/doku) - Framework for building documentation with code-as-data methodology in mind.\n- [nix-cargo-integration](https://github.com/yusdacra/nix-cargo-integration) - Library to easily and effortlessly integrate Cargo projects with Nix.\n- [version-sync](https://github.com/mgeisler/version-sync) - Keep your Version Numbers in Sync with Cargo.toml.\n","excerpt":"Rust libraries CLI slap  - Painless shell argument parsing and dependency check. dialoguer  - Rust utility library for nice command line pr…","outboundReferences":[],"inboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"summary\"\n  }, \"Summary\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Meta\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"meta/reference.md\"\n  }, \"Reference\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"sharing/sharing.md\"\n  }, \"Sharing\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"sharing/everything-I-know.md\"\n  }, \"Everything I know\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"sharing/my-workflow.md\"\n  }, \"My Workflow\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"sharing/my-github.md\"\n  }, \"My GitHub\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"sharing/my-articles.md\"\n  }, \"My Articles\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"sharing/my-notion.md\"\n  }, \"My Notion\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"sharing/tracking.md\"\n  }, \"Tracking\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"sharing/things.md\"\n  }, \"Things\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"ideas/ideas.md\"\n  }, \"Ideas\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"ideas/learn-anything.md\"\n  }, \"Learn Anything\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"focusing/focusing.md\"\n  }, \"Focusing\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"focusing/rules.md\"\n  }, \"Rules\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"focusing/goals.md\"\n  }, \"Goals\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"focusing/processes.md\"\n  }, \"Processes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"focusing/habits.md\"\n  }, \"Habits\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"minimalism/minimalism.md\"\n  }, \"Minimalism\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"research/research.md\"\n  }, \"Research\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"research/solving-problems.md\"\n  }, \"Solving problems\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"research/asking-questions.md\"\n  }, \"Asking questions\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"research/staying-on-top-of-things.md\"\n  }, \"Staying on top of things\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"research/blogs.md\"\n  }, \"Blogs\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"knowledge/knowledge.md\"\n  }, \"Knowledge\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"knowledge/knowledge-graphs.md\"\n  }, \"Knowledge graphs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"knowledge/knowledge-extraction.md\"\n  }, \"Knowledge extraction\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"knowledge/mental-models.md\"\n  }, \"Mental models\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"environment/environment.md\"\n  }, \"Environment\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"environment/zero-waste.md\"\n  }, \"Zero waste\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"environment/veganism.md\"\n  }, \"Veganism\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"environment/renewable-energy/renewable-energy.md\"\n  }, \"Renewable energy\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"environment/renewable-energy/nuclear-energy.md\"\n  }, \"Nuclear energy\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"environment/renewable-energy/batteries.md\"\n  }, \"Batteries\")))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"music/music.md\"\n  }, \"Music\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"music/music-playlists.md\"\n  }, \"Music playlists\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"music/music-artists.md\"\n  }, \"Music artists\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"music/music-albums.md\"\n  }, \"Music albums\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"music/song-covers.md\"\n  }, \"Song covers\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"music/music-production/music-production.md\"\n  }, \"Music production\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"music/music-production/ableton.md\"\n  }, \"Ableton\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"music/music-production/logic-pro.md\"\n  }, \"Logic Pro\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"music/music-production/synthesizers.md\"\n  }, \"Synthesizers\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"music/music-production/guitar.md\"\n  }, \"Guitar\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"music/singing.md\"\n  }, \"Singing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"music/ambient.md\"\n  }, \"Ambient Sounds\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"life/life.md\"\n  }, \"Life\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"life/happiness.md\"\n  }, \"Happiness\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"life/time.md\"\n  }, \"Time\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"life/memories.md\"\n  }, \"Memories\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"life/journaling.md\"\n  }, \"Journaling\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"life/compassion.md\"\n  }, \"Compassion\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"life/parenting.md\"\n  }, \"Parenting\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"life/success.md\"\n  }, \"Success\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"life/death.md\"\n  }, \"Death\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"writing/writing.md\"\n  }, \"Writing\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"writing/writing-prompts.md\"\n  }, \"Writing prompts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"writing/markdown.md\"\n  }, \"Markdown\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/macOS.md\"\n  }, \"macOS\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/macOS-apps.md\"\n  }, \"macOS Apps\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/alfred/alfred.md\"\n  }, \"Alfred\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/alfred/making-workflows.md\"\n  }, \"Making workflows\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/alfred/awgo.md\"\n  }, \"AwGo\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/karabiner/karabiner.md\"\n  }, \"Karabiner\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/keyboard-maestro/keyboard-maestro.md\"\n  }, \"Keyboard Maestro\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/keyboard-maestro/km-macros.md\"\n  }, \"KM macros\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/typinator.md\"\n  }, \"Typinator\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/mindnode.md\"\n  }, \"MindNode\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/hammerspoon.md\"\n  }, \"Hammerspoon\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/hazel.md\"\n  }, \"Hazel\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/2do.md\"\n  }, \"2Do\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/pixave.md\"\n  }, \"Pixave\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/iterm.md\"\n  }, \"iTerm\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/tweetbot.md\"\n  }, \"Tweetbot\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/textual.md\"\n  }, \"Textual\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/xcode/xcode.md\"\n  }, \"Xcode\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/xcode/xcode-extensions.md\"\n  }, \"Xcode extensions\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/trello.md\"\n  }, \"Trello\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/fantastical.md\"\n  }, \"Fantastical\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/bettertouchtool.md\"\n  }, \"BetterTouchTool\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/timing.md\"\n  }, \"Timing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/sketch.md\"\n  }, \"Sketch\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/contacts.md\"\n  }, \"Contacts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/keychain.md\"\n  }, \"Keychain\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/1password.md\"\n  }, \"1Password\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/little-snitch.md\"\n  }, \"Little Snitch\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/apps/affinity-designer.md\"\n  }, \"Affinity Designer\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/jxa.md\"\n  }, \"JXA\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"macOS/applescript.md\"\n  }, \"AppleScript\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"hardware/hardware.md\"\n  }, \"Hardware\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"hardware/cpu/cpu.md\"\n  }, \"CPU\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"hardware/cpu/risc-v.md\"\n  }, \"RISC-V\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"hardware/cpu/amd.md\"\n  }, \"AMD\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"hardware/gpu/gpu.md\"\n  }, \"GPU\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"hardware/neuromorphic-computing.md\"\n  }, \"Neuromorphic Computing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"hardware/circuit-design.md\"\n  }, \"Circuit design\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"hardware/fpga.md\"\n  }, \"FPGA\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"hardware/verilog.md\"\n  }, \"Verilog\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"hardware/firmware.md\"\n  }, \"Firmware\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"hardware/arduino.md\"\n  }, \"Arduino\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"hardware/raspberry-pi.md\"\n  }, \"Raspberry Pi\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"hardware/displays.md\"\n  }, \"Displays\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/math.md\"\n  }, \"Math\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/logic/logic.md\"\n  }, \"Logic\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/logic/combinatory-logic.md\"\n  }, \"Combinatory logic\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/logic/satisfiability-modulo-theories.md\"\n  }, \"Satisfiability modulo theories\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/logic/automated-theorem-proving/automated-theorem-proving.md\"\n  }, \"Automated theorem proving\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/logic/automated-theorem-proving/lean.md\"\n  }, \"Lean\")))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/linear-algebra/linear-algebra.md\"\n  }, \"Linear algebra\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/linear-algebra/vectors.md\"\n  }, \"Vectors\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/lambda-calculus.md\"\n  }, \"Lambda calculus\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/real-analysis.md\"\n  }, \"Real Analysis\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/type-theory/type-theory.md\"\n  }, \"Type Theory\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/type-theory/dependent-types.md\"\n  }, \"Dependent types\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/type-theory/cubical-type-theory.md\"\n  }, \"Cubical type theory\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/type-theory/computational-type-theory.md\"\n  }, \"Computational type theory\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/category-theory/category-theory.md\"\n  }, \"Category theory\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/statistics/statistics.md\"\n  }, \"Statistics\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/statistics/markov-chains.md\"\n  }, \"Markov chains\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/mathematical-optimization/mathematical-optimization.md\"\n  }, \"Mathematical optimization\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/mathematical-optimization/nearest-neighbor-search.md\"\n  }, \"Nearest neighbor search\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/mathematical-optimization/combinatorial-optimization.md\"\n  }, \"Combinatorial optimization\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/mathematical-optimization/gradient-descent.md\"\n  }, \"Gradient descent\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/geometry.md\"\n  }, \"Geometry\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/geometric-algebra.md\"\n  }, \"Geometric Algebra\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/algebraic-topology.md\"\n  }, \"Algebraic topology\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/fractals.md\"\n  }, \"Fractals\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/number-theory.md\"\n  }, \"Number theory\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/group-theory.md\"\n  }, \"Group theory\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/homotopy-theory.md\"\n  }, \"Homotopy theory\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/queueing-theory.md\"\n  }, \"Queueing theory\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/topology.md\"\n  }, \"Topology\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/differential-equations.md\"\n  }, \"Differential equations\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/graph-theory.md\"\n  }, \"Graph theory\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/calculus.md\"\n  }, \"Calculus\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/fourier-transform.md\"\n  }, \"Fourier transform\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/wolfram-alpha.md\"\n  }, \"Wolfram Alpha\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/automatic-differentiation.md\"\n  }, \"Automatic differentiation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/game-theory.md\"\n  }, \"Game theory\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"math/linear-programming.md\"\n  }, \"Linear Programming\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-science/computer-science.md\"\n  }, \"Computer Science\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-science/data-structures/data-structures.md\"\n  }, \"Data Structures\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-science/algorithms/algorithms.md\"\n  }, \"Algorithms\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-science/algorithms/compression.md\"\n  }, \"Compression\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-science/parsing.md\"\n  }, \"Parsing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-science/formal-verification/formal-verification.md\"\n  }, \"Formal verification\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-science/formal-verification/tla.md\"\n  }, \"TLA+\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-science/automata-theory.md\"\n  }, \"Automata theory\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-science/computer-architecture.md\"\n  }, \"Computer Architecture\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/programming.md\"\n  }, \"Programming\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/functional-programming/functional-programming.md\"\n  }, \"Functional programming\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/functional-programming/gadts.md\"\n  }, \"GADTs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/functional-programming/algebraic-effects.md\"\n  }, \"Algebraic effects\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/object-oriented-programming.md\"\n  }, \"Object-oriented programming\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/logic-programming.md\"\n  }, \"Logic programming\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/array-programming.md\"\n  }, \"Array programming\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/constraint-programming.md\"\n  }, \"Constraint programming\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/relational-programming.md\"\n  }, \"Relational programming\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/dynamic-programming.md\"\n  }, \"Dynamic programming\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/semantic-versioning.md\"\n  }, \"Semantic versioning\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/reverse-engineering.md\"\n  }, \"Reverse engineering\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/protocol-buffers.md\"\n  }, \"Protocol Buffers\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/coding-practice.md\"\n  }, \"Coding practice\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/serialization.md\"\n  }, \"Serialization\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/competitive-programming.md\"\n  }, \"Competitive Programming\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/design-patterns.md\"\n  }, \"Design patterns\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/system-design.md\"\n  }, \"System Design\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/continuous-integration.md\"\n  }, \"Continuous Integration\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/documentation.md\"\n  }, \"Documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/embedded-systems.md\"\n  }, \"Embedded systems\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/encoding.md\"\n  }, \"Encoding\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/version-control/version-control.md\"\n  }, \"Version control\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/version-control/git.md\"\n  }, \"Git\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/concurrency.md\"\n  }, \"Concurrency\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/memory-management/memory-management.md\"\n  }, \"Memory management\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/hashing.md\"\n  }, \"Hashing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/regex/regex.md\"\n  }, \"Regex\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/logging.md\"\n  }, \"Logging\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/interactive-computing/interactive-computing.md\"\n  }, \"Interactive computing\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/interactive-computing/jupyter-notebooks.md\"\n  }, \"Jupyter Notebooks\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/interactive-computing/google-colab.md\"\n  }, \"Google Colab\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/interactive-computing/mathematica.md\"\n  }, \"Mathematica\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/visual-programming.md\"\n  }, \"Visual programming\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/software-architecture/software-architecture.md\"\n  }, \"Software architecture\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/probabilistic-programming.md\"\n  }, \"Probabilistic programming\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/recursion.md\"\n  }, \"Recursion\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/reactive-programming.md\"\n  }, \"Reactive programming\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/program-synthesis.md\"\n  }, \"Program synthesis\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/structured-programming.md\"\n  }, \"Structured programming\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/agile-development.md\"\n  }, \"Agile development\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/stream-processing.md\"\n  }, \"Stream processing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/program-analysis.md\"\n  }, \"Program analysis\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/state-machines.md\"\n  }, \"State machines\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/software-testing/software-testing.md\"\n  }, \"Software testing\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/software-testing/fuzzing.md\"\n  }, \"Fuzzing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/software-testing/cypress.md\"\n  }, \"Cypress\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming/json.md\"\n  }, \"JSON\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/programming-languages.md\"\n  }, \"Programming languages\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/go/go.md\"\n  }, \"Go\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/go/go-libraries/go-libraries.md\"\n  }, \"Go libraries\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/python/python.md\"\n  }, \"Python\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/python/python-libraries/python-libraries.md\"\n  }, \"Python libraries\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/python/python-libraries/django.md\"\n  }, \"Django\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/python/python-libraries/numpy.md\"\n  }, \"NumPy\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/python/python-libraries/dask.md\"\n  }, \"Dask\")))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/swift/swift.md\"\n  }, \"Swift\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/swift/swift-libraries/swift-libraries.md\"\n  }, \"Swift libraries\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/swift/swift-libraries/swiftui.md\"\n  }, \"SwiftUI\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/swift/swift-libraries/combine.md\"\n  }, \"Combine\")))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/rust/rust.md\"\n  }, \"Rust\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/rust/rust-libraries/rust-libraries.md\"\n  }, \"Rust libraries\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/haskell/haskell.md\"\n  }, \"Haskell\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/haskell/haskell-libraries/haskell-libraries.md\"\n  }, \"Haskell libraries\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/javascript.md\"\n  }, \"JavaScript\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/js-libraries.md\"\n  }, \"JS libraries\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/react/react.md\"\n  }, \"React\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/react/react-components.md\"\n  }, \"React components\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/react/react-hooks.md\"\n  }, \"React Hooks\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/react/react-native.md\"\n  }, \"React Native\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/react/react-ssr.md\"\n  }, \"React Server Side Rendering\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/react/gatsby.md\"\n  }, \"Gatsby JS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/react/expo.md\"\n  }, \"Expo\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/react/mdx.md\"\n  }, \"MDX\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/react/relay.md\"\n  }, \"Relay\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/react/nextjs.md\"\n  }, \"Next.js\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/react/blitz.md\"\n  }, \"Blitz.js\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/eslint.md\"\n  }, \"ESLint\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/jest.md\"\n  }, \"Jest\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/redux.md\"\n  }, \"Redux\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/mobx.md\"\n  }, \"MobX\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/vue/vue.md\"\n  }, \"Vue.js\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/svelte.md\"\n  }, \"Svelte\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/d3js.md\"\n  }, \"D3.js\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/threejs.md\"\n  }, \"Three.js\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/babel.md\"\n  }, \"Babel\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/rxjs.md\"\n  }, \"RxJS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/javascript/js-libraries/ember.md\"\n  }, \"Ember\")))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/typescript/typescript.md\"\n  }, \"TypeScript\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/typescript/typescript-libraries/typescript-libraries.md\"\n  }, \"TypeScript libraries\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/scala/scala.md\"\n  }, \"Scala\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/scala/scala-libraries.md\"\n  }, \"Scala libraries\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/ocaml/ocaml.md\"\n  }, \"OCaml\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/ocaml/ocaml-libraries.md\"\n  }, \"OCaml libraries\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/reasonml/reasonml.md\"\n  }, \"ReasonML\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/reasonml/reasonml-libraries.md\"\n  }, \"ReasonML libraries\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/bash.md\"\n  }, \"Bash\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/clojure/clojure.md\"\n  }, \"Clojure\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/clojure/clojure-libraries.md\"\n  }, \"Clojure libraries\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/clojure/clojurescript.md\"\n  }, \"ClojureScript\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/erlang/erlang.md\"\n  }, \"Erlang\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/elixir/elixir.md\"\n  }, \"Elixir\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/elixir/elixir-libraries.md\"\n  }, \"Elixir libraries\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/elixir/phoenix.md\"\n  }, \"Phoenix\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/gleam.md\"\n  }, \"Gleam\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/java/java.md\"\n  }, \"Java\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/java/java-libraries.md\"\n  }, \"Java libraries\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/kotlin/kotlin.md\"\n  }, \"Kotlin\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/kotlin/kotlin-libraries.md\"\n  }, \"Kotlin libraries\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/lisp/lisp.md\"\n  }, \"Lisp\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/lisp/common-lisp.md\"\n  }, \"Common Lisp\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/lisp/scheme.md\"\n  }, \"Scheme\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/lisp/racket.md\"\n  }, \"Racket\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/c/c.md\"\n  }, \"C\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/c/c-libraries.md\"\n  }, \"C libraries\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/cpp/cpp.md\"\n  }, \"C++\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/cpp/cpp-libraries.md\"\n  }, \"C++ libraries\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/cpp/qt.md\"\n  }, \"Qt\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/objc/objc.md\"\n  }, \"Objective C\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/objc/objc-libraries.md\"\n  }, \"Objective C libraries\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/lua.md\"\n  }, \"Lua\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/ruby/ruby.md\"\n  }, \"Ruby\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/ruby/ruby-libraries.md\"\n  }, \"Ruby libraries\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/ruby/rails.md\"\n  }, \"Rails\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/crystal.md\"\n  }, \"Crystal\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/idris/idris.md\"\n  }, \"Idris\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/agda.md\"\n  }, \"Agda\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/coq/coq.md\"\n  }, \"Coq\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/julia/julia.md\"\n  }, \"Julia\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/julia/julia-libraries.md\"\n  }, \"Julia libraries\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/elm/elm.md\"\n  }, \"Elm\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/elm/elm-libraries.md\"\n  }, \"Elm libraries\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/dart/dart.md\"\n  }, \"Dart\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/dart/flutter.md\"\n  }, \"Flutter\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/r/r.md\"\n  }, \"R\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/r/r-packages.md\"\n  }, \"R packages\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/assembly.md\"\n  }, \"Assembly\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/nim/nim.md\"\n  }, \"Nim\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/nim/nim-libraries.md\"\n  }, \"Nim libraries\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/dhall.md\"\n  }, \"Dhall\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/processing/processing.md\"\n  }, \"Processing\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/processing/p5js.md\"\n  }, \"p5.js\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/prolog/prolog.md\"\n  }, \"Prolog\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/prolog/datalog.md\"\n  }, \"Datalog\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/purescript/purescript.md\"\n  }, \"PureScript\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/zig/zig.md\"\n  }, \"Zig\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/zig/zig-libraries.md\"\n  }, \"Zig libraries\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/apl/apl.md\"\n  }, \"APL\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/tcl.md\"\n  }, \"Tcl\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/php/php.md\"\n  }, \"PHP\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/smalltalk.md\"\n  }, \"Smalltalk\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/standard-ml.md\"\n  }, \"Standard ML\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/unison.md\"\n  }, \"Unison\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/d/d.md\"\n  }, \"D\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/forth.md\"\n  }, \"Forth\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/futhark.md\"\n  }, \"Futhark\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/pony.md\"\n  }, \"Pony\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/csharp.md\"\n  }, \"C#\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/fsharp.md\"\n  }, \"F#\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/ada.md\"\n  }, \"Ada\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/perl.md\"\n  }, \"Perl\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/pascal.md\"\n  }, \"Pascal\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/self.md\"\n  }, \"Self\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/factor.md\"\n  }, \"Factor\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/fortran.md\"\n  }, \"Fortran\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/ink.md\"\n  }, \"Ink\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/haxe/haxe.md\"\n  }, \"Haxe\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"programming-languages/language-server-protocol.md\"\n  }, \"Language Server Protocol\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"data-science/data-science.md\"\n  }, \"Data Science\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"data-science/data-visualization.md\"\n  }, \"Data Visualization\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"data-science/data-processing.md\"\n  }, \"Data Processing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"data-science/kafka.md\"\n  }, \"Kafka\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"open-source/open-source.md\"\n  }, \"Open Source\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"open-source/github/github.md\"\n  }, \"GitHub\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"open-source/github/github-actions.md\"\n  }, \"GitHub actions\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"open-source/github/github-bots.md\"\n  }, \"GitHub bots\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"open-source/gsoc.md\"\n  }, \"GSOC\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"languages/languages.md\"\n  }, \"Languages\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"languages/english/english.md\"\n  }, \"English\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"languages/russian.md\"\n  }, \"Russian\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"languages/chinese.md\"\n  }, \"Chinese\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"languages/internationalization.md\"\n  }, \"Internationalization\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"text-editors/text-editors.md\"\n  }, \"Text editors\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"text-editors/vs-code/vs-code.md\"\n  }, \"VS Code\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"text-editors/vs-code/vs-code-extensions.md\"\n  }, \"VS Code extensions\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"text-editors/vim/vim.md\"\n  }, \"Vim\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"text-editors/vim/vim-plugins.md\"\n  }, \"Vim plugins\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"text-editors/sublime-text/sublime-text.md\"\n  }, \"Sublime Text\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"text-editors/sublime-text/sublime-text-plugins.md\"\n  }, \"Sublime Text plugins\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"text-editors/emacs/emacs.md\"\n  }, \"Emacs\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"text-editors/emacs/emacs-packages.md\"\n  }, \"Emacs packages\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"text-editors/intellij.md\"\n  }, \"IntelliJ\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/operating-systems.md\"\n  }, \"Operating systems\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/linux/linux.md\"\n  }, \"Linux\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/linux/nixos.md\"\n  }, \"NixOS\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/ios/ios.md\"\n  }, \"iOS\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/ios/ios-shortcuts.md\"\n  }, \"iOS Shortcuts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/ios/ipad.md\"\n  }, \"iPad\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/ios/watchos.md\"\n  }, \"WatchOS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/ios/tvos.md\"\n  }, \"tvOS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/ios/coreml.md\"\n  }, \"CoreML\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/ios/homekit.md\"\n  }, \"HomeKit\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/android.md\"\n  }, \"Android\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/emulators.md\"\n  }, \"Emulators\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/containers/containers.md\"\n  }, \"Containers\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/containers/kubernetes/kubernetes.md\"\n  }, \"Kubernetes\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/containers/kubernetes/kubernetes-plugins.md\"\n  }, \"Kubernetes plugins\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/containers/docker.md\"\n  }, \"Docker\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/bsd/bsd.md\"\n  }, \"BSD\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/windows.md\"\n  }, \"Windows\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/fuchsia-os.md\"\n  }, \"Fuchsia OS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"operating-systems/file-systems.md\"\n  }, \"File systems\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"package-managers/package-managers.md\"\n  }, \"Package managers\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"package-managers/nix/nix.md\"\n  }, \"Nix\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"package-managers/nix/nix-darwin.md\"\n  }, \"Nix Darwin\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"package-managers/brew.md\"\n  }, \"Brew\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"devops/devops.md\"\n  }, \"DevOps\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"devops/site-reliability-engineering.md\"\n  }, \"Site Reliability Engineering\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"devops/observability.md\"\n  }, \"Observability\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"devops/terraform.md\"\n  }, \"Terraform\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"mindfulness/mindfulness.md\"\n  }, \"Mindfulness\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"mindfulness/meditation.md\"\n  }, \"Meditation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"mindfulness/buddhism.md\"\n  }, \"Buddhism\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"mindfulness/tao.md\"\n  }, \"Tao\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"compilers/compilers.md\"\n  }, \"Compilers\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"compilers/llvm.md\"\n  }, \"LLVM\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"compilers/build-systems/build-systems.md\"\n  }, \"Build systems\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"compilers/build-systems/bazel.md\"\n  }, \"Bazel\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"compilers/linters.md\"\n  }, \"Linters\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"physics/physics.md\"\n  }, \"Physics\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"physics/classical-mechanics.md\"\n  }, \"Classical mechanics\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"physics/quantum-physics/quantum-physics.md\"\n  }, \"Quantum physics\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"physics/quantum-physics/quantum-computing.md\"\n  }, \"Quantum computing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"physics/quantum-physics/quantum-gravity.md\"\n  }, \"Quantum gravity\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"physics/string-theory.md\"\n  }, \"String theory\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"physics/electrical-engineering/electrical-engineering.md\"\n  }, \"Electrical engineering\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"physics/electrical-engineering/signal-processing.md\"\n  }, \"Signal processing\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"physics/antimatter.md\"\n  }, \"Antimatter\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"physics/dark-matter.md\"\n  }, \"Dark matter\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"biology/biology.md\"\n  }, \"Biology\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"biology/viruses.md\"\n  }, \"Viruses\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"biology/evolution.md\"\n  }, \"Evolution\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"biology/genomics/genomics.md\"\n  }, \"Genomics\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"biology/genomics/dna.md\"\n  }, \"DNA\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"biology/bioinformatics/bioinformatics.md\"\n  }, \"Bioinformatics\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"biology/computational-biology.md\"\n  }, \"Computational biology\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"biology/immunology/immunology.md\"\n  }, \"Immunology\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"biology/immunology/immunotherapy.md\"\n  }, \"Immunotherapy\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"biology/bionics.md\"\n  }, \"Bionics\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"automation/automation.md\"\n  }, \"Automation\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"automation/home-automation.md\"\n  }, \"Home Automation\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"education/education.md\"\n  }, \"Education\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"education/university.md\"\n  }, \"University\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"education/learning.md\"\n  }, \"Learning\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"economy/economy.md\"\n  }, \"Economy\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"economy/investing.md\"\n  }, \"Investing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"economy/finance.md\"\n  }, \"Finance\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"economy/high-frequency-trading.md\"\n  }, \"High frequency trading\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"economy/basic-income.md\"\n  }, \"Basic Income\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"economy/e-commerce.md\"\n  }, \"E-commerce\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"governance/governance.md\"\n  }, \"Governance\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"governance/politics.md\"\n  }, \"Politics\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"governance/law.md\"\n  }, \"Law\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"consciousness/consciousness.md\"\n  }, \"Consciousness\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"consciousness/ego.md\"\n  }, \"Ego\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"drugs/drugs.md\"\n  }, \"Drugs\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"drugs/psychedelics/psychedelics.md\"\n  }, \"Psychedelics\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"drugs/psychedelics/tryptamines/tryptamines.md\"\n  }, \"Tryptamines\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"drugs/psychedelics/tryptamines/dmt.md\"\n  }, \"DMT\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"drugs/psychedelics/lysergamides/lysergamides.md\"\n  }, \"Lysergamides\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"drugs/psychedelics/lysergamides/lsd.md\"\n  }, \"LSD\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"drugs/psychedelics/phenethylamines/phenethylamines.md\"\n  }, \"Phenethylamines\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"drugs/psychedelics/salvia.md\"\n  }, \"Salvia\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"drugs/psychedelics/ketamine.md\"\n  }, \"Ketamine\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"drugs/psychedelics/trippy.md\"\n  }, \"Trippy\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"drugs/dissociatives.md\"\n  }, \"Dissociatives\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"drugs/cannabis.md\"\n  }, \"Cannabis\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"drugs/mdma.md\"\n  }, \"MDMA\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"drugs/nootropics.md\"\n  }, \"Nootropics\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"drugs/opiates.md\"\n  }, \"Opiates\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"drugs/research-chemicals.md\"\n  }, \"Research chemicals\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"drugs/psychedelics/microdosing.md\"\n  }, \"Microdosing\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"chemistry/chemistry.md\"\n  }, \"Chemistry\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"unix/unix.md\"\n  }, \"Unix\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"unix/shell/shell.md\"\n  }, \"Shell\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"unix/shell/zsh/zsh.md\"\n  }, \"Zsh\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"unix/shell/zsh/zsh-plugins.md\"\n  }, \"Zsh plugins\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"unix/shell/fish.md\"\n  }, \"Fish\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"unix/my-file-system.md\"\n  }, \"My file system\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"unix/dotfiles.md\"\n  }, \"Dotfiles\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"unix/config-management.md\"\n  }, \"Configuration management\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/web.md\"\n  }, \"Web\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/browsers/browsers.md\"\n  }, \"Browsers\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/browsers/safari.md\"\n  }, \"Safari\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/browsers/google-chrome/google-chrome.md\"\n  }, \"Google Chrome\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/browsers/google-chrome/chrome-dev-tools.md\"\n  }, \"Chrome DevTools\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/browsers/firefox.md\"\n  }, \"Firefox\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/browsers/bookmarklets.md\"\n  }, \"Bookmarklets\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/browsers/stylish-themes.md\"\n  }, \"Stylish themes\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/web-performance.md\"\n  }, \"Web performance\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/service-workers.md\"\n  }, \"Service workers\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/static-sites/static-sites.md\"\n  }, \"Static sites\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/static-sites/hugo.md\"\n  }, \"Hugo\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/static-sites/eleventy.md\"\n  }, \"Eleventy\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/static-sites/jekyll.md\"\n  }, \"Jekyll\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/nodejs/nodejs.md\"\n  }, \"Node.js\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/deno.md\"\n  }, \"Deno\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/webassembly.md\"\n  }, \"WebAssembly\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/seo.md\"\n  }, \"SEO\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/electron.md\"\n  }, \"Electron\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/webpack.md\"\n  }, \"Webpack\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/rollup.md\"\n  }, \"Rollup\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/webrtc.md\"\n  }, \"WebRTC\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/search-engines.md\"\n  }, \"Search engines\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/web-engines/web-engines.md\"\n  }, \"Web engines\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/web-engines/webkit.md\"\n  }, \"WebKit\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/progressive-web-apps.md\"\n  }, \"Progressive Web Apps\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/web-workers.md\"\n  }, \"Web workers\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/web-scraping.md\"\n  }, \"Web scraping\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/rss.md\"\n  }, \"RSS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/web-components.md\"\n  }, \"Web Components\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/web-accessibility.md\"\n  }, \"Web accessibility\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/cms.md\"\n  }, \"Content management systems\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/jamstack/jamstack.md\"\n  }, \"JAMstack\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"web/jamstack/redwood.md\"\n  }, \"Redwood\")))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cloud-computing/cloud-computing.md\"\n  }, \"Cloud computing\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cloud-computing/serverless-computing/serverless-computing.md\"\n  }, \"Serverless computing\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cloud-computing/serverless-computing/cloudflare-workers.md\"\n  }, \"Cloudflare workers\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cloud-computing/serverless-computing/aws-lambda.md\"\n  }, \"AWS Lambda\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cloud-computing/aws/aws.md\"\n  }, \"AWS\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cloud-computing/aws/aws-amplify.md\"\n  }, \"AWS Amplify\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cloud-computing/gcp/gcp.md\"\n  }, \"GCP\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cloud-computing/azure/azure.md\"\n  }, \"Azure\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"front-end/front-end.md\"\n  }, \"Front End\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"front-end/html.md\"\n  }, \"HTML\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"front-end/css/css.md\"\n  }, \"CSS\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"front-end/css/css-grid.md\"\n  }, \"CSS Grid\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"front-end/css/css-flexbox.md\"\n  }, \"CSS Flexbox\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"front-end/css/css-in-js.md\"\n  }, \"CSS in JS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"front-end/css/tailwind-css.md\"\n  }, \"Tailwind CSS\")))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"security/security.md\"\n  }, \"Security\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"security/cryptography/cryptography.md\"\n  }, \"Cryptography\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"security/cryptography/encryption.md\"\n  }, \"Encryption\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"security/cryptography/zero-knowledge-proofs.md\"\n  }, \"Zero knowledge proofs\")))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"social-networks/social-networks.md\"\n  }, \"Social networks\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"social-networks/scuttlebutt.md\"\n  }, \"Scuttlebutt\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"social-networks/mastodon.md\"\n  }, \"Mastodon\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/networking.md\"\n  }, \"Networking\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/http.md\"\n  }, \"HTTP\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/tcp.md\"\n  }, \"TCP\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/dns.md\"\n  }, \"DNS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/rest.md\"\n  }, \"REST\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/peer-to-peer/peer-to-peer.md\"\n  }, \"Peer to peer\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/peer-to-peer/ipfs.md\"\n  }, \"IPFS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/peer-to-peer/bittorrent.md\"\n  }, \"BitTorrent\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/iot/iot.md\"\n  }, \"Internet of things\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/iot/lorawan.md\"\n  }, \"LoRaWAN\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/microservices.md\"\n  }, \"Microservices\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/decentralization.md\"\n  }, \"Decentralization\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/matrix.md\"\n  }, \"Matrix\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/nginx.md\"\n  }, \"Nginx\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/vpn/vpn.md\"\n  }, \"VPN\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/vpn/wireguard.md\"\n  }, \"WireGuard\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/graphql/graphql.md\"\n  }, \"GraphQL\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/graphql/apollo-graphql.md\"\n  }, \"Apollo GraphQL\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/graphql/hasura.md\"\n  }, \"Hasura\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/ssh.md\"\n  }, \"SSH\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/tls.md\"\n  }, \"TLS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/caddy.md\"\n  }, \"Caddy\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/domains.md\"\n  }, \"Domains\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/quic.md\"\n  }, \"QUIC\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/websocket.md\"\n  }, \"WebSocket\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/file-sharing.md\"\n  }, \"File sharing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/rabbitmq.md\"\n  }, \"RabbitMQ\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/activitypub.md\"\n  }, \"ActivityPub\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/authentication.md\"\n  }, \"Authentication\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/mesh-networking.md\"\n  }, \"Mesh networking\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/wifi.md\"\n  }, \"Wi-Fi\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"networking/gemini.md\"\n  }, \"Gemini\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"health/health.md\"\n  }, \"Health\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"health/nutrition/nutrition.md\"\n  }, \"Nutrition\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"health/nutrition/foods.md\"\n  }, \"Foods\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"health/nutrition/drinks/drinks.md\"\n  }, \"Drinks\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"health/nutrition/drinks/tea.md\"\n  }, \"Tea\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"health/nutrition/drinks/coffee.md\"\n  }, \"Coffee\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"health/nutrition/cooking.md\"\n  }, \"Cooking\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"health/nutrition/recipes.md\"\n  }, \"Recipes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"health/nutrition/fasting.md\"\n  }, \"Fasting\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"health/nutrition/supplements.md\"\n  }, \"Supplements\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"health/nutrition/hydroponics.md\"\n  }, \"Hydroponics\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"health/ergonomics.md\"\n  }, \"Ergonomics\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"health/aging.md\"\n  }, \"Aging\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"health/skin-care.md\"\n  }, \"Skin care\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"health/depression.md\"\n  }, \"Depression\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"fitness/fitness.md\"\n  }, \"Fitness\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"fitness/strength-training.md\"\n  }, \"Strength training\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"fitness/exercises.md\"\n  }, \"Exercises\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"fitness/running.md\"\n  }, \"Running\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"fitness/yoga.md\"\n  }, \"Yoga\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"medicine/medicine.md\"\n  }, \"Medicine\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"medicine/diseases/diseases.md\"\n  }, \"Diseases\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"medicine/diseases/cancer.md\"\n  }, \"Cancer\")))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"history/history.md\"\n  }, \"History\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"history/anthropology.md\"\n  }, \"Anthropology\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/travel.md\"\n  }, \"Travel\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/nomad.md\"\n  }, \"Nomad\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/backpacks.md\"\n  }, \"Backpacks\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/finding-home.md\"\n  }, \"Finding home\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/transportation/transportation.md\"\n  }, \"Transportation\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/transportation/cycling.md\"\n  }, \"Cycling\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/transportation/planes.md\"\n  }, \"Planes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/transportation/boats.md\"\n  }, \"Boats\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/events.md\"\n  }, \"Events\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/visited/visited.md\"\n  }, \"Visited\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/visited/netherlands.md\"\n  }, \"Netherlands\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/visited/united-kingdom.md\"\n  }, \"United Kingdom\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/visited/united-states.md\"\n  }, \"United States\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/visited/russia.md\"\n  }, \"Russia\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/visited/germany.md\"\n  }, \"Germany\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/visited/japan.md\"\n  }, \"Japan\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/visited/china.md\"\n  }, \"China\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/visited/canada.md\"\n  }, \"Canada\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/visited/india.md\"\n  }, \"India\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/visited/ukraine.md\"\n  }, \"Ukraine\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/visited/austria.md\"\n  }, \"Austria\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/visited/sweden.md\"\n  }, \"Sweden\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/visited/norway.md\"\n  }, \"Norway\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/visited/finland.md\"\n  }, \"Finland\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/visited/korea.md\"\n  }, \"Korea\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/visited/kazakhstan.md\"\n  }, \"Kazakhstan\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/visited/europe.md\"\n  }, \"Europe\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/cities.md\"\n  }, \"Cities\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"travel/hiking.md\"\n  }, \"Hiking\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"geography/geography.md\"\n  }, \"Geography\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"geography/spatial-analysis.md\"\n  }, \"Spatial analysis\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"business/business.md\"\n  }, \"Business\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"business/startups/startups.md\"\n  }, \"Startups\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"business/startups/funding.md\"\n  }, \"Funding\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"business/startups/venture-capital.md\"\n  }, \"Venture capital\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"business/startups/marketplaces.md\"\n  }, \"Marketplaces\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"business/startups/values.md\"\n  }, \"Values\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"business/startups/onboarding.md\"\n  }, \"Onboarding\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"business/landing-pages.md\"\n  }, \"Landing pages\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"business/products.md\"\n  }, \"Products\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"business/pricing.md\"\n  }, \"Pricing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"business/startups/payroll.md\"\n  }, \"Payroll\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"business/restaurants.md\"\n  }, \"Restaurants\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"relationships/relationships.md\"\n  }, \"Relationships\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"relationships/seduction.md\"\n  }, \"Seduction\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"relationships/sex.md\"\n  }, \"Sex\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"3d-printing/3d-printing.md\"\n  }, \"3D Printing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"anki/anki.md\"\n  }, \"Anki\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"philosophy/philosophy.md\"\n  }, \"Philosophy\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"philosophy/effective-altruism.md\"\n  }, \"Effective altruism\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"philosophy/simulated-reality.md\"\n  }, \"Simulated reality\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"philosophy/ethics.md\"\n  }, \"Ethics\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"video/video.md\"\n  }, \"Video\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"video/cinematography.md\"\n  }, \"Cinematography\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"machine-learning/machine-learning.md\"\n  }, \"Machine learning\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"machine-learning/neural-networks/neural-networks.md\"\n  }, \"Neural networks\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"machine-learning/neural-networks/generative-adversarial-networks.md\"\n  }, \"Generative adversarial networks\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"machine-learning/neural-networks/graph-neural-networks.md\"\n  }, \"Graph Neural Networks\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"machine-learning/unsupervised-learning.md\"\n  }, \"Unsupervised learning\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"machine-learning/reinforcement-learning.md\"\n  }, \"Reinforcement learning\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"machine-learning/libraries/ml-libraries.md\"\n  }, \"ML Libraries\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"machine-learning/libraries/pytorch.md\"\n  }, \"PyTorch\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"machine-learning/libraries/keras.md\"\n  }, \"Keras\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"machine-learning/libraries/tensorflow.md\"\n  }, \"TensorFlow\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"machine-learning/datasets.md\"\n  }, \"Datasets\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"machine-learning/ml-models.md\"\n  }, \"ML Models\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"machine-learning/autonomous-driving.md\"\n  }, \"Autonomous driving\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"machine-learning/artificial-intelligence.md\"\n  }, \"Artificial intelligence\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"machine-learning/transfer-learning.md\"\n  }, \"Transfer learning\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-graphics/computer-graphics.md\"\n  }, \"Computer graphics\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-graphics/image-processing.md\"\n  }, \"Image processing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-graphics/computer-vision/computer-vision.md\"\n  }, \"Computer vision\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-graphics/computer-vision/ocr.md\"\n  }, \"OCR\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-graphics/procedural-generation.md\"\n  }, \"Procedural generation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-graphics/rendering.md\"\n  }, \"Rendering\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-graphics/shaders.md\"\n  }, \"Shaders\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-graphics/ray-tracing.md\"\n  }, \"Ray Tracing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-graphics/bezier-curves.md\"\n  }, \"Bezier curves\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-graphics/cuda.md\"\n  }, \"CUDA\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-graphics/webgpu.md\"\n  }, \"WebGPU\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-graphics/webgl.md\"\n  }, \"WebGL\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-graphics/metal.md\"\n  }, \"Metal\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-graphics/vulkan.md\"\n  }, \"Vulkan\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-graphics/opengl.md\"\n  }, \"OpenGL\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"computer-graphics/svg.md\"\n  }, \"SVG\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/tools.md\"\n  }, \"Tools\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/twitter.md\"\n  }, \"Twitter\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/obsidian.md\"\n  }, \"Obsidian\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/dendron.md\"\n  }, \"Dendron\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/gitbook.md\"\n  }, \"GitBook\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/codesandbox.md\"\n  }, \"CodeSandbox\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/dropbox.md\"\n  }, \"Dropbox\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/telegram.md\"\n  }, \"Telegram\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/reddit.md\"\n  }, \"Reddit\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/product-hunt.md\"\n  }, \"Product Hunt\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/duckduckgo.md\"\n  }, \"DuckDuckGo\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/ifttt.md\"\n  }, \"IFTTT\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/notion.md\"\n  }, \"Notion\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/roam-research.md\"\n  }, \"Roam Research\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/ansible.md\"\n  }, \"Ansible\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/dat.md\"\n  }, \"Dat\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/email.md\"\n  }, \"Email\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/slack.md\"\n  }, \"Slack\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/discord.md\"\n  }, \"Discord\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/zulip.md\"\n  }, \"Zulip\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/firebase.md\"\n  }, \"Firebase\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/elasticsearch.md\"\n  }, \"Elasticsearch\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/personal-setups.md\"\n  }, \"Personal setups\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/voice-assistants/voice-assistants.md\"\n  }, \"Voice assistants\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools/wordpress.md\"\n  }, \"Wordpress\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"design/design.md\"\n  }, \"Design\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"design/icons.md\"\n  }, \"Icons\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"design/fonts.md\"\n  }, \"Fonts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"design/design-inspiration.md\"\n  }, \"Design inspiration\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"design/interior-design.md\"\n  }, \"Interior Design\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"design/industrial-design.md\"\n  }, \"Industrial Design\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"design/user-experience.md\"\n  }, \"User Experience\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"design/3d-modeling.md\"\n  }, \"3D Modeling\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"design/blender.md\"\n  }, \"Blender\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"design/animation.md\"\n  }, \"Animation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"design/figma/figma.md\"\n  }, \"Figma\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"design/figma/figma-plugins.md\"\n  }, \"Figma plugins\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"design/framer.md\"\n  }, \"Framer\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"design/inkscape.md\"\n  }, \"Inkscape\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"design/design-systems.md\"\n  }, \"Design systems\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"design/logos.md\"\n  }, \"Logos\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"design/color.md\"\n  }, \"Color\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"keyboards/keyboards.md\"\n  }, \"Keyboards\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"keyboards/qmk.md\"\n  }, \"QMK\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"future/future.md\"\n  }, \"Future\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cryptocurrencies/cryptocurrencies.md\"\n  }, \"Cryptocurrencies\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cryptocurrencies/nano.md\"\n  }, \"Nano\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cryptocurrencies/bitcoin.md\"\n  }, \"Bitcoin\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cryptocurrencies/stellar.md\"\n  }, \"Stellar\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cryptocurrencies/libra.md\"\n  }, \"Libra\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cryptocurrencies/ton.md\"\n  }, \"TON\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cryptocurrencies/monero.md\"\n  }, \"Monero\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"privacy/privacy.md\"\n  }, \"Privacy\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"privacy/freedom.md\"\n  }, \"Freedom\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"privacy/self-hosting.md\"\n  }, \"Self hosting\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"privacy/adblocking.md\"\n  }, \"Ad blocking\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"privacy/tor.md\"\n  }, \"Tor\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"games/games.md\"\n  }, \"Games\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"games/gamedev/gamedev.md\"\n  }, \"Gamedev\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"games/gamedev/game-engines/game-engines.md\"\n  }, \"Game engines\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"games/gamedev/game-engines/godot.md\"\n  }, \"Godot\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"games/gamedev/game-engines/unity.md\"\n  }, \"Unity\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"games/gamedev/game-engines/unreal-engine.md\"\n  }, \"Unreal Engine\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"games/gamedev/game-engines/bevy.md\"\n  }, \"Bevy\")))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"games/board-games.md\"\n  }, \"Board games\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"games/chess.md\"\n  }, \"Chess\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"games/poker.md\"\n  }, \"Poker\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"games/sudoku.md\"\n  }, \"Sudoku\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"games/minecraft.md\"\n  }, \"Minecraft\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"games/golf.md\"\n  }, \"Golf\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"streaming/streaming.md\"\n  }, \"Streaming\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"talks/talks.md\"\n  }, \"Talks\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"talks/presentations.md\"\n  }, \"Presentations\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"analytics/analytics.md\"\n  }, \"Analytics\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/databases.md\"\n  }, \"Databases\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/postgresql.md\"\n  }, \"PostgreSQL\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/sqlite.md\"\n  }, \"SQLite\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/redis.md\"\n  }, \"Redis\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/dynamodb.md\"\n  }, \"DynamoDB\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/fauna.md\"\n  }, \"FaunaDB\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/foundationdb.md\"\n  }, \"FoundationDB\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/prometheus.md\"\n  }, \"Prometheus\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/mongodb.md\"\n  }, \"MongoDB\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/sql/sql.md\"\n  }, \"SQL\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/prisma.md\"\n  }, \"Prisma\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/memcached.md\"\n  }, \"Memcached\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/kdb.md\"\n  }, \"Kdb+\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/neo4j.md\"\n  }, \"Neo4j\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/dgraph.md\"\n  }, \"Dgraph\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/cassandra.md\"\n  }, \"Cassandra\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/mariadb.md\"\n  }, \"MariaDB\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/blockchain/blockchain.md\"\n  }, \"Blockchain\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/blockchain/ethereum.md\"\n  }, \"Ethereum\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/blockchain/uniswap.md\"\n  }, \"Uniswap\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/blockchain/tezos.md\"\n  }, \"Tezos\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/blockchain/polkadot.md\"\n  }, \"Polkadot\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/blockchain/cardano.md\"\n  }, \"Cardano\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/blockchain/arweave.md\"\n  }, \"Arweave\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"databases/blockchain/solana.md\"\n  }, \"Solana\")))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"art/art.md\"\n  }, \"Art\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"art/photography.md\"\n  }, \"Photography\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"art/drawing.md\"\n  }, \"Drawing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"art/pen-plotting.md\"\n  }, \"Pen plotting\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"art/sketching.md\"\n  }, \"Sketching\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"art/comics.md\"\n  }, \"Comics\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"art/anime.md\"\n  }, \"Anime\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"art/dancing.md\"\n  }, \"Dancing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"art/generative-art.md\"\n  }, \"Generative art\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"art/architecture.md\"\n  }, \"Architecture\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"art/tattoos.md\"\n  }, \"Tattoos\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"art/clothes.md\"\n  }, \"Clothes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"art/furniture.md\"\n  }, \"Furniture\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"api/api.md\"\n  }, \"API\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"distributed-systems/distributed-systems.md\"\n  }, \"Distributed systems\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"distributed-systems/rpcs/rpcs.md\"\n  }, \"RPCs\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"distributed-systems/rpcs/grpc.md\"\n  }, \"gRPC\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"distributed-systems/crdt.md\"\n  }, \"CRDTs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"distributed-systems/load-balancing.md\"\n  }, \"Load balancing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"distributed-systems/message-queue/message-queue.md\"\n  }, \"Message queue\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"distributed-systems/message-queue/zeromq.md\"\n  }, \"ZeroMQ\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"distributed-systems/message-queue/mqtt.md\"\n  }, \"MQTT\")))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"backups/backups.md\"\n  }, \"Backups\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"space/space.md\"\n  }, \"Space\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"space/black-holes.md\"\n  }, \"Black holes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"space/universe.md\"\n  }, \"Universe\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"space/rockets.md\"\n  }, \"Rockets\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"psychology/psychology.md\"\n  }, \"Psychology\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"psychology/addiction.md\"\n  }, \"Addiction\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"psychology/biases.md\"\n  }, \"Biases\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"psychology/negotiating.md\"\n  }, \"Negotiating\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"psychology/marketing.md\"\n  }, \"Marketing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"psychology/decision-making.md\"\n  }, \"Decision making\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"sleep/sleep.md\"\n  }, \"Sleep\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"sleep/dreaming.md\"\n  }, \"Dreaming\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"irc/irc.md\"\n  }, \"IRC\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"irc/znc.md\"\n  }, \"ZNC\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"work/work.md\"\n  }, \"Work\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"work/finding-work/finding-work.md\"\n  }, \"Finding work\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"work/finding-work/interviews.md\"\n  }, \"Interviews\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"work/finding-work/cv.md\"\n  }, \"CV\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"work/finding-work/hiring.md\"\n  }, \"Hiring\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"work/finding-work/freelancing.md\"\n  }, \"Freelancing\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"work/remote-work.md\"\n  }, \"Remote work\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"work/consultancies.md\"\n  }, \"Consultancies\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"work/communication.md\"\n  }, \"Communication\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"management/management.md\"\n  }, \"Management\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"management/product-management.md\"\n  }, \"Product Management\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"management/leadership.md\"\n  }, \"Leadership\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"latex/latex.md\"\n  }, \"LaTeX\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"robots/robots.md\"\n  }, \"Robots\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"robots/drones.md\"\n  }, \"Drones\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"nlp/nlp.md\"\n  }, \"NLP\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"nlp/speech-recognition.md\"\n  }, \"Speech recognition\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"nlp/virtual-assistant.md\"\n  }, \"Virtual assistant\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"nlp/speech-synthesis.md\"\n  }, \"Speech synthesis\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"nlp/sentiment-analysis.md\"\n  }, \"Sentiment Analysis\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"nlp/bots.md\"\n  }, \"Bots\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"virtual-reality/virtual-reality.md\"\n  }, \"Virtual Reality\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"augmented-reality/augmented-reality.md\"\n  }, \"Augmented Reality\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"augmented-reality/arkit.md\"\n  }, \"ARKit\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"neuroscience/neuroscience.md\"\n  }, \"Neuroscience\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"neuroscience/brain-computer-interfaces.md\"\n  }, \"Brain Computer Interfaces\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"neuroscience/cognition.md\"\n  }, \"Cognition\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cli/cli.md\"\n  }, \"CLI\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cli/sed.md\"\n  }, \"sed\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cli/tmux.md\"\n  }, \"tmux\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cli/ngrok.md\"\n  }, \"ngrok\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"humans/humans.md\"\n  }, \"Humans\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"humans/alan-watts.md\"\n  }, \"Alan Watts\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"philanthropy/philanthropy.md\"\n  }, \"Philanthropy\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"animals/animals.md\"\n  }, \"Animals\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"animals/birds.md\"\n  }, \"Birds\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"podcasts/podcasts.md\"\n  }, \"Podcasts\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"podcasts/podcast-recording.md\"\n  }, \"Podcast recording\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"documentaries/documentaries.md\"\n  }, \"Documentaries\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"movies/movies.md\"\n  }, \"Movies\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"movies/directors.md\"\n  }, \"Directors\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"movies/acting.md\"\n  }, \"Acting\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tv-series/tv-series.md\"\n  }, \"TV series\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"courses/courses.md\"\n  }, \"Courses\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"articles/articles.md\"\n  }, \"Articles\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"poems/poems.md\"\n  }, \"Poems\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"research-papers/research-papers.md\"\n  }, \"Research papers\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"research-papers/a-view-of-mathematics.md\"\n  }, \"A view of mathematics\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"books/books.md\"\n  }, \"Books\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"books/go-in-action.md\"\n  }, \"Go in action\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"books/ai-modern-approach.md\"\n  }, \"AI: Modern Approach\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"books/mind-for-numbers.md\"\n  }, \"Mind for Numbers\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"books/mindstorms.md\"\n  }, \"Mindstorms\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"books/cracking-the-coding-interview.md\"\n  }, \"Cracking the coding interview\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"books/programming-in-haskell.md\"\n  }, \"Programming in Haskell\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"books/rich-dad-poor-dad.md\"\n  }, \"Rich dad poor dad\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"books/elements-of-programming-interviews.md\"\n  }, \"Elements of programming interviews\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"books/crafting-interpreters.md\"\n  }, \"Crafting interpreters\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"books/brave-new-world.md\"\n  }, \"Brave new world\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"books/code-the-hidden-language.md\"\n  }, \"Code: hidden language of software\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"books/eloquent-ruby.md\"\n  }, \"Eloquent ruby\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"books/surely-you-are-joking-mr-feynman.md\"\n  }, \"Surely you are joking Mr Feynman\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"books/thinking-fast-and-slow.md\"\n  }, \"Thinking, fast and slow\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"other/other.md\"\n  }, \"Other\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"other/wiki-workflow.md\"\n  }, \"Wiki workflow\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"other/my-workflow-notation.md\"\n  }, \"My workflow notation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"other/queries.md\"\n  }, \"Queries\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"other/funny.md\"\n  }, \"Funny\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"other/standup.md\"\n  }, \"Standup\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"other/nsfw.md\"\n  }, \"NSFW\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"other/puzzles.md\"\n  }, \"Puzzles\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"other/woodworking.md\"\n  }, \"Woodworking\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"other/gardening.md\"\n  }, \"Gardening\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"other/real-estate.md\"\n  }, \"Real Estate\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"other/newsletters.md\"\n  }, \"Newsletters\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"other/used-hotkeys.md\"\n  }, \"Used hotkeys\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"other/mentions.md\"\n  }, \"Mentions\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"other/web-presence.md\"\n  }, \"Web presence\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"notes/notes.md\"\n  }, \"Notes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/looking-back.md\"\n  }, \"Looking back\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2017/2017.md\"\n  }, \"2017\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2018/2018.md\"\n  }, \"2018\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2018/2018-january.md\"\n  }, \"2018 January\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2018/2018-february.md\"\n  }, \"2018 February\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2018/2018-march.md\"\n  }, \"2018 March\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2018/2018-april.md\"\n  }, \"2018 April\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2018/2018-may.md\"\n  }, \"2018 May\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2018/2018-june.md\"\n  }, \"2018 June\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2018/2018-july.md\"\n  }, \"2018 July\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2018/2018-august.md\"\n  }, \"2018 August\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2018/2018-september.md\"\n  }, \"2018 September\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2018/2018-october.md\"\n  }, \"2018 October\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2018/2018-november.md\"\n  }, \"2018 November\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2018/2018-december.md\"\n  }, \"2018 December\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2019/2019.md\"\n  }, \"2019\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2019/2019-january.md\"\n  }, \"2019 January\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2019/2019-february.md\"\n  }, \"2019 February\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2019/2019-march.md\"\n  }, \"2019 March\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2019/2019-april.md\"\n  }, \"2019 April\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2019/2019-may.md\"\n  }, \"2019 May\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2019/2019-june.md\"\n  }, \"2019 June\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2019/2019-july.md\"\n  }, \"2019 July\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2019/2019-august.md\"\n  }, \"2019 August\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2019/2019-september.md\"\n  }, \"2019 September\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2019/2019-october.md\"\n  }, \"2019 October\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2019/2019-november.md\"\n  }, \"2019 November\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2019/2019-december.md\"\n  }, \"2019 December\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2020/2020.md\"\n  }, \"2020\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2020/2020-january.md\"\n  }, \"2020 January\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2020/2020-february.md\"\n  }, \"2020 February\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2020/2020-march.md\"\n  }, \"2020 March\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2020/2020-april.md\"\n  }, \"2020 April\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2020/2020-may.md\"\n  }, \"2020 May\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2020/2020-june.md\"\n  }, \"2020 June\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2020/2020-july.md\"\n  }, \"2020 July\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2020/2020-august.md\"\n  }, \"2020 August\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2020/2020-september.md\"\n  }, \"2020 September\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2020/2020-october.md\"\n  }, \"2020 October\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2020/2020-november.md\"\n  }, \"2020 November\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2020/2020-december.md\"\n  }, \"2020 December\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"2021\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2021/2021-january.md\"\n  }, \"2021 January\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2021/2021-february.md\"\n  }, \"2021 February\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2021/2021-march.md\"\n  }, \"2021 March\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2021/2021-april.md\"\n  }, \"2021 April\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2021/2021-may.md\"\n  }, \"2021 May\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2021/2021-june.md\"\n  }, \"2021 June\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"looking-back/2021/2021-july.md\"\n  }, \"2021 July\"))))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"fields":{"slug":"/SUMMARY/","title":"Summary"}}]},"tagsOutbound":{"nodes":[]}},"pageContext":{"tags":[],"slug":"/programming-languages/rust/rust-libraries/rust-libraries/","sidebarItems":[{"title":"","items":[{"title":"Meta","url":"","external":false,"items":[{"title":"Reference","url":"/meta/reference/","external":false,"items":[]}]},{"title":"Sharing","url":"/sharing/sharing/","external":false,"items":[{"title":"Everything I know","url":"/sharing/everything-I-know/","external":false,"items":[]},{"title":"My Workflow","url":"/sharing/my-workflow/","external":false,"items":[]},{"title":"My GitHub","url":"/sharing/my-github/","external":false,"items":[]},{"title":"My Articles","url":"/sharing/my-articles/","external":false,"items":[]},{"title":"My Notion","url":"/sharing/my-notion/","external":false,"items":[]},{"title":"Tracking","url":"/sharing/tracking/","external":false,"items":[]},{"title":"Things","url":"/sharing/things/","external":false,"items":[]}]},{"title":"Ideas","url":"/ideas/ideas/","external":false,"items":[{"title":"Learn Anything","url":"/ideas/learn-anything/","external":false,"items":[]}]},{"title":"Focusing","url":"/focusing/focusing/","external":false,"items":[{"title":"Rules","url":"/focusing/rules/","external":false,"items":[]},{"title":"Goals","url":"/focusing/goals/","external":false,"items":[]},{"title":"Processes","url":"/focusing/processes/","external":false,"items":[]},{"title":"Habits","url":"/focusing/habits/","external":false,"items":[]}]},{"title":"Minimalism","url":"/minimalism/minimalism/","external":false,"items":[]},{"title":"Research","url":"/research/research/","external":false,"items":[{"title":"Solving problems","url":"/research/solving-problems/","external":false,"items":[]},{"title":"Asking questions","url":"/research/asking-questions/","external":false,"items":[]},{"title":"Staying on top of things","url":"/research/staying-on-top-of-things/","external":false,"items":[]},{"title":"Blogs","url":"/research/blogs/","external":false,"items":[]}]},{"title":"Knowledge","url":"/knowledge/knowledge/","external":false,"items":[{"title":"Knowledge graphs","url":"/knowledge/knowledge-graphs/","external":false,"items":[]},{"title":"Knowledge extraction","url":"/knowledge/knowledge-extraction/","external":false,"items":[]},{"title":"Mental models","url":"/knowledge/mental-models/","external":false,"items":[]}]},{"title":"Environment","url":"/environment/environment/","external":false,"items":[{"title":"Zero waste","url":"/environment/zero-waste/","external":false,"items":[]},{"title":"Veganism","url":"/environment/veganism/","external":false,"items":[]},{"title":"Renewable energy","url":"/environment/renewable-energy/renewable-energy/","external":false,"items":[{"title":"Nuclear energy","url":"/environment/renewable-energy/nuclear-energy/","external":false,"items":[]},{"title":"Batteries","url":"/environment/renewable-energy/batteries/","external":false,"items":[]}]}]},{"title":"Music","url":"/music/music/","external":false,"items":[{"title":"Music playlists","url":"/music/music-playlists/","external":false,"items":[]},{"title":"Music artists","url":"/music/music-artists/","external":false,"items":[]},{"title":"Music albums","url":"/music/music-albums/","external":false,"items":[]},{"title":"Song covers","url":"/music/song-covers/","external":false,"items":[]},{"title":"Music production","url":"/music/music-production/music-production/","external":false,"items":[{"title":"Ableton","url":"/music/music-production/ableton/","external":false,"items":[]},{"title":"Logic Pro","url":"/music/music-production/logic-pro/","external":false,"items":[]},{"title":"Synthesizers","url":"/music/music-production/synthesizers/","external":false,"items":[]},{"title":"Guitar","url":"/music/music-production/guitar/","external":false,"items":[]}]},{"title":"Singing","url":"/music/singing/","external":false,"items":[]},{"title":"Ambient Sounds","url":"/music/ambient/","external":false,"items":[]}]},{"title":"Life","url":"/life/life/","external":false,"items":[{"title":"Happiness","url":"/life/happiness/","external":false,"items":[]},{"title":"Time","url":"/life/time/","external":false,"items":[]},{"title":"Memories","url":"/life/memories/","external":false,"items":[]},{"title":"Journaling","url":"/life/journaling/","external":false,"items":[]},{"title":"Compassion","url":"/life/compassion/","external":false,"items":[]},{"title":"Parenting","url":"/life/parenting/","external":false,"items":[]},{"title":"Success","url":"/life/success/","external":false,"items":[]},{"title":"Death","url":"/life/death/","external":false,"items":[]}]},{"title":"Writing","url":"/writing/writing/","external":false,"items":[{"title":"Writing prompts","url":"/writing/writing-prompts/","external":false,"items":[]},{"title":"Markdown","url":"/writing/markdown/","external":false,"items":[]}]},{"title":"macOS","url":"/macOS/macOS/","external":false,"items":[{"title":"macOS Apps","url":"/macOS/apps/macOS-apps/","external":false,"items":[{"title":"Alfred","url":"/macOS/apps/alfred/alfred/","external":false,"items":[{"title":"Making workflows","url":"/macOS/apps/alfred/making-workflows/","external":false},{"title":"AwGo","url":"/macOS/apps/alfred/awgo/","external":false}]},{"title":"Karabiner","url":"/macOS/apps/karabiner/karabiner/","external":false,"items":[]},{"title":"Keyboard Maestro","url":"/macOS/apps/keyboard-maestro/keyboard-maestro/","external":false,"items":[{"title":"KM macros","url":"/macOS/apps/keyboard-maestro/km-macros/","external":false}]},{"title":"Typinator","url":"/macOS/apps/typinator/","external":false,"items":[]},{"title":"MindNode","url":"/macOS/apps/mindnode/","external":false,"items":[]},{"title":"Hammerspoon","url":"/macOS/apps/hammerspoon/","external":false,"items":[]},{"title":"Hazel","url":"/macOS/apps/hazel/","external":false,"items":[]},{"title":"2Do","url":"/macOS/apps/2do/","external":false,"items":[]},{"title":"Pixave","url":"/macOS/apps/pixave/","external":false,"items":[]},{"title":"iTerm","url":"/macOS/apps/iterm/","external":false,"items":[]},{"title":"Tweetbot","url":"/macOS/apps/tweetbot/","external":false,"items":[]},{"title":"Textual","url":"/macOS/apps/textual/","external":false,"items":[]},{"title":"Xcode","url":"/macOS/apps/xcode/xcode/","external":false,"items":[{"title":"Xcode extensions","url":"/macOS/apps/xcode/xcode-extensions/","external":false}]},{"title":"Trello","url":"/macOS/apps/trello/","external":false,"items":[]},{"title":"Fantastical","url":"/macOS/apps/fantastical/","external":false,"items":[]},{"title":"BetterTouchTool","url":"/macOS/apps/bettertouchtool/","external":false,"items":[]},{"title":"Timing","url":"/macOS/apps/timing/","external":false,"items":[]},{"title":"Sketch","url":"/macOS/apps/sketch/","external":false,"items":[]},{"title":"Contacts","url":"/macOS/apps/contacts/","external":false,"items":[]},{"title":"Keychain","url":"/macOS/apps/keychain/","external":false,"items":[]},{"title":"1Password","url":"/macOS/apps/1password/","external":false,"items":[]},{"title":"Little Snitch","url":"/macOS/apps/little-snitch/","external":false,"items":[]},{"title":"Affinity Designer","url":"/macOS/apps/affinity-designer/","external":false,"items":[]}]},{"title":"JXA","url":"/macOS/jxa/","external":false,"items":[]},{"title":"AppleScript","url":"/macOS/applescript/","external":false,"items":[]}]},{"title":"Hardware","url":"/hardware/hardware/","external":false,"items":[{"title":"CPU","url":"/hardware/cpu/cpu/","external":false,"items":[{"title":"RISC-V","url":"/hardware/cpu/risc-v/","external":false,"items":[]},{"title":"AMD","url":"/hardware/cpu/amd/","external":false,"items":[]}]},{"title":"GPU","url":"/hardware/gpu/gpu/","external":false,"items":[]},{"title":"Neuromorphic Computing","url":"/hardware/neuromorphic-computing/","external":false,"items":[]},{"title":"Circuit design","url":"/hardware/circuit-design/","external":false,"items":[]},{"title":"FPGA","url":"/hardware/fpga/","external":false,"items":[]},{"title":"Verilog","url":"/hardware/verilog/","external":false,"items":[]},{"title":"Firmware","url":"/hardware/firmware/","external":false,"items":[]},{"title":"Arduino","url":"/hardware/arduino/","external":false,"items":[]},{"title":"Raspberry Pi","url":"/hardware/raspberry-pi/","external":false,"items":[]},{"title":"Displays","url":"/hardware/displays/","external":false,"items":[]}]},{"title":"Math","url":"/math/math/","external":false,"items":[{"title":"Logic","url":"/math/logic/logic/","external":false,"items":[{"title":"Combinatory logic","url":"/math/logic/combinatory-logic/","external":false,"items":[]},{"title":"Satisfiability modulo theories","url":"/math/logic/satisfiability-modulo-theories/","external":false,"items":[]},{"title":"Automated theorem proving","url":"/math/logic/automated-theorem-proving/automated-theorem-proving/","external":false,"items":[{"title":"Lean","url":"/math/logic/automated-theorem-proving/lean/","external":false}]}]},{"title":"Linear algebra","url":"/math/linear-algebra/linear-algebra/","external":false,"items":[{"title":"Vectors","url":"/math/linear-algebra/vectors/","external":false,"items":[]}]},{"title":"Lambda calculus","url":"/math/lambda-calculus/","external":false,"items":[]},{"title":"Real Analysis","url":"/math/real-analysis/","external":false,"items":[]},{"title":"Type Theory","url":"/math/type-theory/type-theory/","external":false,"items":[{"title":"Dependent types","url":"/math/type-theory/dependent-types/","external":false,"items":[]},{"title":"Cubical type theory","url":"/math/type-theory/cubical-type-theory/","external":false,"items":[]},{"title":"Computational type theory","url":"/math/type-theory/computational-type-theory/","external":false,"items":[]}]},{"title":"Category theory","url":"/math/category-theory/category-theory/","external":false,"items":[]},{"title":"Statistics","url":"/math/statistics/statistics/","external":false,"items":[{"title":"Markov chains","url":"/math/statistics/markov-chains/","external":false,"items":[]}]},{"title":"Mathematical optimization","url":"/math/mathematical-optimization/mathematical-optimization/","external":false,"items":[{"title":"Nearest neighbor search","url":"/math/mathematical-optimization/nearest-neighbor-search/","external":false,"items":[]},{"title":"Combinatorial optimization","url":"/math/mathematical-optimization/combinatorial-optimization/","external":false,"items":[]},{"title":"Gradient descent","url":"/math/mathematical-optimization/gradient-descent/","external":false,"items":[]}]},{"title":"Geometry","url":"/math/geometry/","external":false,"items":[]},{"title":"Geometric Algebra","url":"/math/geometric-algebra/","external":false,"items":[]},{"title":"Algebraic topology","url":"/math/algebraic-topology/","external":false,"items":[]},{"title":"Fractals","url":"/math/fractals/","external":false,"items":[]},{"title":"Number theory","url":"/math/number-theory/","external":false,"items":[]},{"title":"Group theory","url":"/math/group-theory/","external":false,"items":[]},{"title":"Homotopy theory","url":"/math/homotopy-theory/","external":false,"items":[]},{"title":"Queueing theory","url":"/math/queueing-theory/","external":false,"items":[]},{"title":"Topology","url":"/math/topology/","external":false,"items":[]},{"title":"Differential equations","url":"/math/differential-equations/","external":false,"items":[]},{"title":"Graph theory","url":"/math/graph-theory/","external":false,"items":[]},{"title":"Calculus","url":"/math/calculus/","external":false,"items":[]},{"title":"Fourier transform","url":"/math/fourier-transform/","external":false,"items":[]},{"title":"Wolfram Alpha","url":"/math/wolfram-alpha/","external":false,"items":[]},{"title":"Automatic differentiation","url":"/math/automatic-differentiation/","external":false,"items":[]},{"title":"Game theory","url":"/math/game-theory/","external":false,"items":[]},{"title":"Linear Programming","url":"/math/linear-programming/","external":false,"items":[]}]},{"title":"Computer Science","url":"/computer-science/computer-science/","external":false,"items":[{"title":"Data Structures","url":"/computer-science/data-structures/data-structures/","external":false,"items":[]},{"title":"Algorithms","url":"/computer-science/algorithms/algorithms/","external":false,"items":[{"title":"Compression","url":"/computer-science/algorithms/compression/","external":false,"items":[]}]},{"title":"Parsing","url":"/computer-science/parsing/","external":false,"items":[]},{"title":"Formal verification","url":"/computer-science/formal-verification/formal-verification/","external":false,"items":[{"title":"TLA+","url":"/computer-science/formal-verification/tla/","external":false,"items":[]}]},{"title":"Automata theory","url":"/computer-science/automata-theory/","external":false,"items":[]},{"title":"Computer Architecture","url":"/computer-science/computer-architecture/","external":false,"items":[]}]},{"title":"Programming","url":"/programming/programming/","external":false,"items":[{"title":"Functional programming","url":"/programming/functional-programming/functional-programming/","external":false,"items":[{"title":"GADTs","url":"/programming/functional-programming/gadts/","external":false,"items":[]},{"title":"Algebraic effects","url":"/programming/functional-programming/algebraic-effects/","external":false,"items":[]}]},{"title":"Object-oriented programming","url":"/programming/object-oriented-programming/","external":false,"items":[]},{"title":"Logic programming","url":"/programming/logic-programming/","external":false,"items":[]},{"title":"Array programming","url":"/programming/array-programming/","external":false,"items":[]},{"title":"Constraint programming","url":"/programming/constraint-programming/","external":false,"items":[]},{"title":"Relational programming","url":"/programming/relational-programming/","external":false,"items":[]},{"title":"Dynamic programming","url":"/programming/dynamic-programming/","external":false,"items":[]},{"title":"Semantic versioning","url":"/programming/semantic-versioning/","external":false,"items":[]},{"title":"Reverse engineering","url":"/programming/reverse-engineering/","external":false,"items":[]},{"title":"Protocol Buffers","url":"/programming/protocol-buffers/","external":false,"items":[]},{"title":"Coding practice","url":"/programming/coding-practice/","external":false,"items":[]},{"title":"Serialization","url":"/programming/serialization/","external":false,"items":[]},{"title":"Competitive Programming","url":"/programming/competitive-programming/","external":false,"items":[]},{"title":"Design patterns","url":"/programming/design-patterns/","external":false,"items":[]},{"title":"System Design","url":"/programming/system-design/","external":false,"items":[]},{"title":"Continuous Integration","url":"/programming/continuous-integration/","external":false,"items":[]},{"title":"Documentation","url":"/programming/documentation/","external":false,"items":[]},{"title":"Embedded systems","url":"/programming/embedded-systems/","external":false,"items":[]},{"title":"Encoding","url":"/programming/encoding/","external":false,"items":[]},{"title":"Version control","url":"/programming/version-control/version-control/","external":false,"items":[{"title":"Git","url":"/programming/version-control/git/","external":false,"items":[]}]},{"title":"Concurrency","url":"/programming/concurrency/","external":false,"items":[]},{"title":"Memory management","url":"/programming/memory-management/memory-management/","external":false,"items":[]},{"title":"Hashing","url":"/programming/hashing/","external":false,"items":[]},{"title":"Regex","url":"/programming/regex/regex/","external":false,"items":[]},{"title":"Logging","url":"/programming/logging/","external":false,"items":[]},{"title":"Interactive computing","url":"/programming/interactive-computing/interactive-computing/","external":false,"items":[{"title":"Jupyter Notebooks","url":"/programming/interactive-computing/jupyter-notebooks/","external":false,"items":[]},{"title":"Google Colab","url":"/programming/interactive-computing/google-colab/","external":false,"items":[]},{"title":"Mathematica","url":"/programming/interactive-computing/mathematica/","external":false,"items":[]}]},{"title":"Visual programming","url":"/programming/visual-programming/","external":false,"items":[]},{"title":"Software architecture","url":"/programming/software-architecture/software-architecture/","external":false,"items":[]},{"title":"Probabilistic programming","url":"/programming/probabilistic-programming/","external":false,"items":[]},{"title":"Recursion","url":"/programming/recursion/","external":false,"items":[]},{"title":"Reactive programming","url":"/programming/reactive-programming/","external":false,"items":[]},{"title":"Program synthesis","url":"/programming/program-synthesis/","external":false,"items":[]},{"title":"Structured programming","url":"/programming/structured-programming/","external":false,"items":[]},{"title":"Agile development","url":"/programming/agile-development/","external":false,"items":[]},{"title":"Stream processing","url":"/programming/stream-processing/","external":false,"items":[]},{"title":"Program analysis","url":"/programming/program-analysis/","external":false,"items":[]},{"title":"State machines","url":"/programming/state-machines/","external":false,"items":[]},{"title":"Software testing","url":"/programming/software-testing/software-testing/","external":false,"items":[{"title":"Fuzzing","url":"/programming/software-testing/fuzzing/","external":false,"items":[]},{"title":"Cypress","url":"/programming/software-testing/cypress/","external":false,"items":[]}]},{"title":"JSON","url":"/programming/json/","external":false,"items":[]}]},{"title":"Programming languages","url":"/programming-languages/programming-languages/","external":false,"items":[{"title":"Go","url":"/programming-languages/go/go/","external":false,"items":[{"title":"Go libraries","url":"/programming-languages/go/go-libraries/go-libraries/","external":false,"items":[]}]},{"title":"Python","url":"/programming-languages/python/python/","external":false,"items":[{"title":"Python libraries","url":"/programming-languages/python/python-libraries/python-libraries/","external":false,"items":[{"title":"Django","url":"/programming-languages/python/python-libraries/django/","external":false},{"title":"NumPy","url":"/programming-languages/python/python-libraries/numpy/","external":false},{"title":"Dask","url":"/programming-languages/python/python-libraries/dask/","external":false}]}]},{"title":"Swift","url":"/programming-languages/swift/swift/","external":false,"items":[{"title":"Swift libraries","url":"/programming-languages/swift/swift-libraries/swift-libraries/","external":false,"items":[{"title":"SwiftUI","url":"/programming-languages/swift/swift-libraries/swiftui/","external":false},{"title":"Combine","url":"/programming-languages/swift/swift-libraries/combine/","external":false}]}]},{"title":"Rust","url":"/programming-languages/rust/rust/","external":false,"items":[{"title":"Rust libraries","url":"/programming-languages/rust/rust-libraries/rust-libraries/","external":false,"items":[]}]},{"title":"Haskell","url":"/programming-languages/haskell/haskell/","external":false,"items":[{"title":"Haskell libraries","url":"/programming-languages/haskell/haskell-libraries/haskell-libraries/","external":false,"items":[]}]},{"title":"JavaScript","url":"/programming-languages/javascript/javascript/","external":false,"items":[{"title":"JS libraries","url":"/programming-languages/javascript/js-libraries/js-libraries/","external":false,"items":[{"title":"React","url":"/programming-languages/javascript/js-libraries/react/react/","external":false},{"title":"ESLint","url":"/programming-languages/javascript/eslint/","external":false},{"title":"Jest","url":"/programming-languages/javascript/js-libraries/jest/","external":false},{"title":"Redux","url":"/programming-languages/javascript/js-libraries/redux/","external":false},{"title":"MobX","url":"/programming-languages/javascript/js-libraries/mobx/","external":false},{"title":"Vue.js","url":"/programming-languages/javascript/js-libraries/vue/vue/","external":false},{"title":"Svelte","url":"/programming-languages/javascript/js-libraries/svelte/","external":false},{"title":"D3.js","url":"/programming-languages/javascript/js-libraries/d3js/","external":false},{"title":"Three.js","url":"/programming-languages/javascript/js-libraries/threejs/","external":false},{"title":"Babel","url":"/programming-languages/javascript/babel/","external":false},{"title":"RxJS","url":"/programming-languages/javascript/js-libraries/rxjs/","external":false},{"title":"Ember","url":"/programming-languages/javascript/js-libraries/ember/","external":false}]}]},{"title":"TypeScript","url":"/programming-languages/typescript/typescript/","external":false,"items":[{"title":"TypeScript libraries","url":"/programming-languages/typescript/typescript-libraries/typescript-libraries/","external":false,"items":[]}]},{"title":"Scala","url":"/programming-languages/scala/scala/","external":false,"items":[{"title":"Scala libraries","url":"/programming-languages/scala/scala-libraries/","external":false,"items":[]}]},{"title":"OCaml","url":"/programming-languages/ocaml/ocaml/","external":false,"items":[{"title":"OCaml libraries","url":"/programming-languages/ocaml/ocaml-libraries/","external":false,"items":[]}]},{"title":"ReasonML","url":"/programming-languages/reasonml/reasonml/","external":false,"items":[{"title":"ReasonML libraries","url":"/programming-languages/reasonml/reasonml-libraries/","external":false,"items":[]}]},{"title":"Bash","url":"/programming-languages/bash/","external":false,"items":[]},{"title":"Clojure","url":"/programming-languages/clojure/clojure/","external":false,"items":[{"title":"Clojure libraries","url":"/programming-languages/clojure/clojure-libraries/","external":false,"items":[]},{"title":"ClojureScript","url":"/programming-languages/clojure/clojurescript/","external":false,"items":[]}]},{"title":"Erlang","url":"/programming-languages/erlang/erlang/","external":false,"items":[]},{"title":"Elixir","url":"/programming-languages/elixir/elixir/","external":false,"items":[{"title":"Elixir libraries","url":"/programming-languages/elixir/elixir-libraries/","external":false,"items":[]},{"title":"Phoenix","url":"/programming-languages/elixir/phoenix/","external":false,"items":[]}]},{"title":"Gleam","url":"/programming-languages/gleam/","external":false,"items":[]},{"title":"Java","url":"/programming-languages/java/java/","external":false,"items":[{"title":"Java libraries","url":"/programming-languages/java/java-libraries/","external":false,"items":[]}]},{"title":"Kotlin","url":"/programming-languages/kotlin/kotlin/","external":false,"items":[{"title":"Kotlin libraries","url":"/programming-languages/kotlin/kotlin-libraries/","external":false,"items":[]}]},{"title":"Lisp","url":"/programming-languages/lisp/lisp/","external":false,"items":[{"title":"Common Lisp","url":"/programming-languages/lisp/common-lisp/","external":false,"items":[]},{"title":"Scheme","url":"/programming-languages/lisp/scheme/","external":false,"items":[]},{"title":"Racket","url":"/programming-languages/lisp/racket/","external":false,"items":[]}]},{"title":"C","url":"/programming-languages/c/c/","external":false,"items":[{"title":"C libraries","url":"/programming-languages/c/c-libraries/","external":false,"items":[]}]},{"title":"C++","url":"/programming-languages/cpp/cpp/","external":false,"items":[{"title":"C++ libraries","url":"/programming-languages/cpp/cpp-libraries/","external":false,"items":[]},{"title":"Qt","url":"/programming-languages/cpp/qt/","external":false,"items":[]}]},{"title":"Objective C","url":"/programming-languages/objc/objc/","external":false,"items":[{"title":"Objective C libraries","url":"/programming-languages/objc/objc-libraries/","external":false,"items":[]}]},{"title":"Lua","url":"/programming-languages/lua/","external":false,"items":[]},{"title":"Ruby","url":"/programming-languages/ruby/ruby/","external":false,"items":[{"title":"Ruby libraries","url":"/programming-languages/ruby/ruby-libraries/","external":false,"items":[]},{"title":"Rails","url":"/programming-languages/ruby/rails/","external":false,"items":[]}]},{"title":"Crystal","url":"/programming-languages/crystal/","external":false,"items":[]},{"title":"Idris","url":"/programming-languages/idris/idris/","external":false,"items":[]},{"title":"Agda","url":"/programming-languages/agda/","external":false,"items":[]},{"title":"Coq","url":"/programming-languages/coq/coq/","external":false,"items":[]},{"title":"Julia","url":"/programming-languages/julia/julia/","external":false,"items":[{"title":"Julia libraries","url":"/programming-languages/julia/julia-libraries/","external":false,"items":[]}]},{"title":"Elm","url":"/programming-languages/elm/elm/","external":false,"items":[{"title":"Elm libraries","url":"/programming-languages/elm/elm-libraries/","external":false,"items":[]}]},{"title":"Dart","url":"/programming-languages/dart/dart/","external":false,"items":[{"title":"Flutter","url":"/programming-languages/dart/flutter/","external":false,"items":[]}]},{"title":"R","url":"/programming-languages/r/r/","external":false,"items":[{"title":"R packages","url":"/programming-languages/r/r-packages/","external":false,"items":[]}]},{"title":"Assembly","url":"/programming-languages/assembly/","external":false,"items":[]},{"title":"Nim","url":"/programming-languages/nim/nim/","external":false,"items":[{"title":"Nim libraries","url":"/programming-languages/nim/nim-libraries/","external":false,"items":[]}]},{"title":"Dhall","url":"/programming-languages/dhall/","external":false,"items":[]},{"title":"Processing","url":"/programming-languages/processing/processing/","external":false,"items":[{"title":"p5.js","url":"/programming-languages/processing/p5js/","external":false,"items":[]}]},{"title":"Prolog","url":"/programming-languages/prolog/prolog/","external":false,"items":[{"title":"Datalog","url":"/programming-languages/prolog/datalog/","external":false,"items":[]}]},{"title":"PureScript","url":"/programming-languages/purescript/purescript/","external":false,"items":[]},{"title":"Zig","url":"/programming-languages/zig/zig/","external":false,"items":[{"title":"Zig libraries","url":"/programming-languages/zig/zig-libraries/","external":false,"items":[]}]},{"title":"APL","url":"/programming-languages/apl/apl/","external":false,"items":[]},{"title":"Tcl","url":"/programming-languages/tcl/","external":false,"items":[]},{"title":"PHP","url":"/programming-languages/php/php/","external":false,"items":[]},{"title":"Smalltalk","url":"/programming-languages/smalltalk/","external":false,"items":[]},{"title":"Standard ML","url":"/programming-languages/standard-ml/","external":false,"items":[]},{"title":"Unison","url":"/programming-languages/unison/","external":false,"items":[]},{"title":"D","url":"/programming-languages/d/d/","external":false,"items":[]},{"title":"Forth","url":"/programming-languages/forth/","external":false,"items":[]},{"title":"Futhark","url":"/programming-languages/futhark/","external":false,"items":[]},{"title":"Pony","url":"/programming-languages/pony/","external":false,"items":[]},{"title":"C#","url":"/programming-languages/csharp/","external":false,"items":[]},{"title":"F#","url":"/programming-languages/fsharp/","external":false,"items":[]},{"title":"Ada","url":"/programming-languages/ada/","external":false,"items":[]},{"title":"Perl","url":"/programming-languages/perl/","external":false,"items":[]},{"title":"Pascal","url":"/programming-languages/pascal/","external":false,"items":[]},{"title":"Self","url":"/programming-languages/self/","external":false,"items":[]},{"title":"Factor","url":"/programming-languages/factor/","external":false,"items":[]},{"title":"Fortran","url":"/programming-languages/fortran/","external":false,"items":[]},{"title":"Ink","url":"/programming-languages/ink/","external":false,"items":[]},{"title":"Haxe","url":"/programming-languages/haxe/haxe/","external":false,"items":[]},{"title":"Language Server Protocol","url":"/programming-languages/language-server-protocol/","external":false,"items":[]}]},{"title":"Data Science","url":"/data-science/data-science/","external":false,"items":[{"title":"Data Visualization","url":"/data-science/data-visualization/","external":false,"items":[]},{"title":"Data Processing","url":"/data-science/data-processing/","external":false,"items":[]},{"title":"Kafka","url":"/data-science/kafka/","external":false,"items":[]}]},{"title":"Open Source","url":"/open-source/open-source/","external":false,"items":[{"title":"GitHub","url":"/open-source/github/github/","external":false,"items":[{"title":"GitHub actions","url":"/open-source/github/github-actions/","external":false,"items":[]},{"title":"GitHub bots","url":"/open-source/github/github-bots/","external":false,"items":[]}]},{"title":"GSOC","url":"/open-source/gsoc/","external":false,"items":[]}]},{"title":"Languages","url":"/languages/languages/","external":false,"items":[{"title":"English","url":"/languages/english/english/","external":false,"items":[]},{"title":"Russian","url":"/languages/russian/","external":false,"items":[]},{"title":"Chinese","url":"/languages/chinese/","external":false,"items":[]},{"title":"Internationalization","url":"/languages/internationalization/","external":false,"items":[]}]},{"title":"Text editors","url":"/text-editors/text-editors/","external":false,"items":[{"title":"VS Code","url":"/text-editors/vs-code/vs-code/","external":false,"items":[{"title":"VS Code extensions","url":"/text-editors/vs-code/vs-code-extensions/","external":false,"items":[]}]},{"title":"Vim","url":"/text-editors/vim/vim/","external":false,"items":[{"title":"Vim plugins","url":"/text-editors/vim/vim-plugins/","external":false,"items":[]}]},{"title":"Sublime Text","url":"/text-editors/sublime-text/sublime-text/","external":false,"items":[{"title":"Sublime Text plugins","url":"/text-editors/sublime-text/sublime-text-plugins/","external":false,"items":[]}]},{"title":"Emacs","url":"/text-editors/emacs/emacs/","external":false,"items":[{"title":"Emacs packages","url":"/text-editors/emacs/emacs-packages/","external":false,"items":[]}]},{"title":"IntelliJ","url":"/text-editors/intellij/","external":false,"items":[]}]},{"title":"Operating systems","url":"/operating-systems/operating-systems/","external":false,"items":[{"title":"Linux","url":"/operating-systems/linux/linux/","external":false,"items":[{"title":"NixOS","url":"/operating-systems/linux/nixos/","external":false,"items":[]}]},{"title":"iOS","url":"/operating-systems/ios/ios/","external":false,"items":[{"title":"iOS Shortcuts","url":"/operating-systems/ios/ios-shortcuts/","external":false,"items":[]},{"title":"iPad","url":"/operating-systems/ios/ipad/","external":false,"items":[]},{"title":"WatchOS","url":"/operating-systems/ios/watchos/","external":false,"items":[]},{"title":"tvOS","url":"/operating-systems/ios/tvos/","external":false,"items":[]},{"title":"CoreML","url":"/operating-systems/ios/coreml/","external":false,"items":[]},{"title":"HomeKit","url":"/operating-systems/ios/homekit/","external":false,"items":[]}]},{"title":"Android","url":"/operating-systems/android/","external":false,"items":[]},{"title":"Emulators","url":"/operating-systems/emulators/","external":false,"items":[]},{"title":"Containers","url":"/operating-systems/containers/containers/","external":false,"items":[{"title":"Kubernetes","url":"/operating-systems/containers/kubernetes/kubernetes/","external":false,"items":[{"title":"Kubernetes plugins","url":"/operating-systems/containers/kubernetes/kubernetes-plugins/","external":false}]},{"title":"Docker","url":"/operating-systems/containers/docker/","external":false,"items":[]}]},{"title":"BSD","url":"/operating-systems/bsd/bsd/","external":false,"items":[]},{"title":"Windows","url":"/operating-systems/windows/","external":false,"items":[]},{"title":"Fuchsia OS","url":"/operating-systems/fuchsia-os/","external":false,"items":[]},{"title":"File systems","url":"/operating-systems/file-systems/","external":false,"items":[]}]},{"title":"Package managers","url":"/package-managers/package-managers/","external":false,"items":[{"title":"Nix","url":"/package-managers/nix/nix/","external":false,"items":[{"title":"Nix Darwin","url":"/package-managers/nix/nix-darwin/","external":false,"items":[]}]},{"title":"Brew","url":"/package-managers/brew/","external":false,"items":[]}]},{"title":"DevOps","url":"/devops/devops/","external":false,"items":[{"title":"Site Reliability Engineering","url":"/devops/site-reliability-engineering/","external":false,"items":[]},{"title":"Observability","url":"/devops/observability/","external":false,"items":[]},{"title":"Terraform","url":"/devops/terraform/","external":false,"items":[]}]},{"title":"Mindfulness","url":"/mindfulness/mindfulness/","external":false,"items":[{"title":"Meditation","url":"/mindfulness/meditation/","external":false,"items":[]},{"title":"Buddhism","url":"/mindfulness/buddhism/","external":false,"items":[]},{"title":"Tao","url":"/mindfulness/tao/","external":false,"items":[]}]},{"title":"Compilers","url":"/compilers/compilers/","external":false,"items":[{"title":"LLVM","url":"/compilers/llvm/","external":false,"items":[]},{"title":"Build systems","url":"/compilers/build-systems/build-systems/","external":false,"items":[{"title":"Bazel","url":"/compilers/build-systems/bazel/","external":false,"items":[]}]},{"title":"Linters","url":"/compilers/linters/","external":false,"items":[]}]},{"title":"Physics","url":"/physics/physics/","external":false,"items":[{"title":"Classical mechanics","url":"/physics/classical-mechanics/","external":false,"items":[]},{"title":"Quantum physics","url":"/physics/quantum-physics/quantum-physics/","external":false,"items":[{"title":"Quantum computing","url":"/physics/quantum-physics/quantum-computing/","external":false,"items":[]},{"title":"Quantum gravity","url":"/physics/quantum-physics/quantum-gravity/","external":false,"items":[]}]},{"title":"String theory","url":"/physics/string-theory/","external":false,"items":[]},{"title":"Electrical engineering","url":"/physics/electrical-engineering/electrical-engineering/","external":false,"items":[{"title":"Signal processing","url":"/physics/electrical-engineering/signal-processing/","external":false,"items":[]}]},{"title":"Antimatter","url":"/physics/antimatter/","external":false,"items":[]},{"title":"Dark matter","url":"/physics/dark-matter/","external":false,"items":[]}]},{"title":"Biology","url":"/biology/biology/","external":false,"items":[{"title":"Viruses","url":"/biology/viruses/","external":false,"items":[]},{"title":"Evolution","url":"/biology/evolution/","external":false,"items":[]},{"title":"Genomics","url":"/biology/genomics/genomics/","external":false,"items":[{"title":"DNA","url":"/biology/genomics/dna/","external":false,"items":[]}]},{"title":"Bioinformatics","url":"/biology/bioinformatics/bioinformatics/","external":false,"items":[]},{"title":"Computational biology","url":"/biology/computational-biology/","external":false,"items":[]},{"title":"Immunology","url":"/biology/immunology/immunology/","external":false,"items":[{"title":"Immunotherapy","url":"/biology/immunology/immunotherapy/","external":false,"items":[]}]},{"title":"Bionics","url":"/biology/bionics/","external":false,"items":[]}]},{"title":"Automation","url":"/automation/automation/","external":false,"items":[{"title":"Home Automation","url":"/automation/home-automation/","external":false,"items":[]}]},{"title":"Education","url":"/education/education/","external":false,"items":[{"title":"University","url":"/education/university/","external":false,"items":[]},{"title":"Learning","url":"/education/learning/","external":false,"items":[]}]},{"title":"Economy","url":"/economy/economy/","external":false,"items":[{"title":"Investing","url":"/economy/investing/","external":false,"items":[]},{"title":"Finance","url":"/economy/finance/","external":false,"items":[]},{"title":"High frequency trading","url":"/economy/high-frequency-trading/","external":false,"items":[]},{"title":"Basic Income","url":"/economy/basic-income/","external":false,"items":[]},{"title":"E-commerce","url":"/economy/e-commerce/","external":false,"items":[]}]},{"title":"Governance","url":"/governance/governance/","external":false,"items":[{"title":"Politics","url":"/governance/politics/","external":false,"items":[]},{"title":"Law","url":"/governance/law/","external":false,"items":[]}]},{"title":"Consciousness","url":"/consciousness/consciousness/","external":false,"items":[{"title":"Ego","url":"/consciousness/ego/","external":false,"items":[]}]},{"title":"Drugs","url":"/drugs/drugs/","external":false,"items":[{"title":"Psychedelics","url":"/drugs/psychedelics/psychedelics/","external":false,"items":[{"title":"Tryptamines","url":"/drugs/psychedelics/tryptamines/tryptamines/","external":false,"items":[{"title":"DMT","url":"/drugs/psychedelics/tryptamines/dmt/","external":false}]},{"title":"Lysergamides","url":"/drugs/psychedelics/lysergamides/lysergamides/","external":false,"items":[{"title":"LSD","url":"/drugs/psychedelics/lysergamides/lsd/","external":false}]},{"title":"Phenethylamines","url":"/drugs/psychedelics/phenethylamines/phenethylamines/","external":false,"items":[]},{"title":"Salvia","url":"/drugs/psychedelics/salvia/","external":false,"items":[]},{"title":"Ketamine","url":"/drugs/psychedelics/ketamine/","external":false,"items":[]},{"title":"Trippy","url":"/drugs/psychedelics/trippy/","external":false,"items":[]}]},{"title":"Dissociatives","url":"/drugs/dissociatives/","external":false,"items":[]},{"title":"Cannabis","url":"/drugs/cannabis/","external":false,"items":[]},{"title":"MDMA","url":"/drugs/mdma/","external":false,"items":[]},{"title":"Nootropics","url":"/drugs/nootropics/","external":false,"items":[]},{"title":"Opiates","url":"/drugs/opiates/","external":false,"items":[]},{"title":"Research chemicals","url":"/drugs/research-chemicals/","external":false,"items":[]},{"title":"Microdosing","url":"/drugs/psychedelics/microdosing/","external":false,"items":[]}]},{"title":"Chemistry","url":"/chemistry/chemistry/","external":false,"items":[]},{"title":"Unix","url":"/unix/unix/","external":false,"items":[{"title":"Shell","url":"/unix/shell/shell/","external":false,"items":[{"title":"Zsh","url":"/unix/shell/zsh/zsh/","external":false,"items":[{"title":"Zsh plugins","url":"/unix/shell/zsh/zsh-plugins/","external":false}]},{"title":"Fish","url":"/unix/shell/fish/","external":false,"items":[]}]},{"title":"My file system","url":"/unix/my-file-system/","external":false,"items":[]},{"title":"Dotfiles","url":"/unix/dotfiles/","external":false,"items":[]},{"title":"Configuration management","url":"/unix/config-management/","external":false,"items":[]}]},{"title":"Web","url":"/web/web/","external":false,"items":[{"title":"Browsers","url":"/web/browsers/browsers/","external":false,"items":[{"title":"Safari","url":"/web/browsers/safari/","external":false,"items":[]},{"title":"Google Chrome","url":"/web/browsers/google-chrome/google-chrome/","external":false,"items":[{"title":"Chrome DevTools","url":"/web/browsers/google-chrome/chrome-dev-tools/","external":false}]},{"title":"Firefox","url":"/web/browsers/firefox/","external":false,"items":[]},{"title":"Bookmarklets","url":"/web/browsers/bookmarklets/","external":false,"items":[]},{"title":"Stylish themes","url":"/web/browsers/stylish-themes/","external":false,"items":[]}]},{"title":"Web performance","url":"/web/web-performance/","external":false,"items":[]},{"title":"Service workers","url":"/web/service-workers/","external":false,"items":[]},{"title":"Static sites","url":"/web/static-sites/static-sites/","external":false,"items":[{"title":"Hugo","url":"/web/static-sites/hugo/","external":false,"items":[]},{"title":"Eleventy","url":"/web/static-sites/eleventy/","external":false,"items":[]},{"title":"Jekyll","url":"/web/static-sites/jekyll/","external":false,"items":[]}]},{"title":"Node.js","url":"/web/nodejs/nodejs/","external":false,"items":[]},{"title":"Deno","url":"/web/deno/","external":false,"items":[]},{"title":"WebAssembly","url":"/web/webassembly/","external":false,"items":[]},{"title":"SEO","url":"/web/seo/","external":false,"items":[]},{"title":"Electron","url":"/web/electron/","external":false,"items":[]},{"title":"Webpack","url":"/web/webpack/","external":false,"items":[]},{"title":"Rollup","url":"/web/rollup/","external":false,"items":[]},{"title":"WebRTC","url":"/web/webrtc/","external":false,"items":[]},{"title":"Search engines","url":"/web/search-engines/","external":false,"items":[]},{"title":"Web engines","url":"/web/web-engines/web-engines/","external":false,"items":[{"title":"WebKit","url":"/web/web-engines/webkit/","external":false,"items":[]}]},{"title":"Progressive Web Apps","url":"/web/progressive-web-apps/","external":false,"items":[]},{"title":"Web workers","url":"/web/web-workers/","external":false,"items":[]},{"title":"Web scraping","url":"/web/web-scraping/","external":false,"items":[]},{"title":"RSS","url":"/web/rss/","external":false,"items":[]},{"title":"Web Components","url":"/web/web-components/","external":false,"items":[]},{"title":"Web accessibility","url":"/web/web-accessibility/","external":false,"items":[]},{"title":"Content management systems","url":"/web/cms/","external":false,"items":[]},{"title":"JAMstack","url":"/web/jamstack/jamstack/","external":false,"items":[{"title":"Redwood","url":"/web/jamstack/redwood/","external":false,"items":[]}]}]},{"title":"Cloud computing","url":"/cloud-computing/cloud-computing/","external":false,"items":[{"title":"Serverless computing","url":"/cloud-computing/serverless-computing/serverless-computing/","external":false,"items":[{"title":"Cloudflare workers","url":"/cloud-computing/serverless-computing/cloudflare-workers/","external":false,"items":[]},{"title":"AWS Lambda","url":"/cloud-computing/serverless-computing/aws-lambda/","external":false,"items":[]}]},{"title":"AWS","url":"/cloud-computing/aws/aws/","external":false,"items":[{"title":"AWS Amplify","url":"/cloud-computing/aws/aws-amplify/","external":false,"items":[]}]},{"title":"GCP","url":"/cloud-computing/gcp/gcp/","external":false,"items":[]},{"title":"Azure","url":"/cloud-computing/azure/azure/","external":false,"items":[]}]},{"title":"Front End","url":"/front-end/front-end/","external":false,"items":[{"title":"HTML","url":"/front-end/html/","external":false,"items":[]},{"title":"CSS","url":"/front-end/css/css/","external":false,"items":[{"title":"CSS Grid","url":"/front-end/css/css-grid/","external":false,"items":[]},{"title":"CSS Flexbox","url":"/front-end/css/css-flexbox/","external":false,"items":[]},{"title":"CSS in JS","url":"/front-end/css/css-in-js/","external":false,"items":[]},{"title":"Tailwind CSS","url":"/front-end/css/tailwind-css/","external":false,"items":[]}]}]},{"title":"Security","url":"/security/security/","external":false,"items":[{"title":"Cryptography","url":"/security/cryptography/cryptography/","external":false,"items":[{"title":"Encryption","url":"/security/cryptography/encryption/","external":false,"items":[]},{"title":"Zero knowledge proofs","url":"/security/cryptography/zero-knowledge-proofs/","external":false,"items":[]}]}]},{"title":"Social networks","url":"/social-networks/social-networks/","external":false,"items":[{"title":"Scuttlebutt","url":"/social-networks/scuttlebutt/","external":false,"items":[]},{"title":"Mastodon","url":"/social-networks/mastodon/","external":false,"items":[]}]},{"title":"Networking","url":"/networking/networking/","external":false,"items":[{"title":"HTTP","url":"/networking/http/","external":false,"items":[]},{"title":"TCP","url":"/networking/tcp/","external":false,"items":[]},{"title":"DNS","url":"/networking/dns/","external":false,"items":[]},{"title":"REST","url":"/networking/rest/","external":false,"items":[]},{"title":"Peer to peer","url":"/networking/peer-to-peer/peer-to-peer/","external":false,"items":[{"title":"IPFS","url":"/networking/peer-to-peer/ipfs/","external":false,"items":[]},{"title":"BitTorrent","url":"/networking/peer-to-peer/bittorrent/","external":false,"items":[]}]},{"title":"Internet of things","url":"/networking/iot/iot/","external":false,"items":[{"title":"LoRaWAN","url":"/networking/iot/lorawan/","external":false,"items":[]}]},{"title":"Microservices","url":"/networking/microservices/","external":false,"items":[]},{"title":"Decentralization","url":"/networking/decentralization/","external":false,"items":[]},{"title":"Matrix","url":"/networking/matrix/","external":false,"items":[]},{"title":"Nginx","url":"/networking/nginx/","external":false,"items":[]},{"title":"VPN","url":"/networking/vpn/vpn/","external":false,"items":[{"title":"WireGuard","url":"/networking/vpn/wireguard/","external":false,"items":[]}]},{"title":"GraphQL","url":"/networking/graphql/graphql/","external":false,"items":[{"title":"Apollo GraphQL","url":"/networking/graphql/apollo-graphql/","external":false,"items":[]},{"title":"Hasura","url":"/networking/graphql/hasura/","external":false,"items":[]}]},{"title":"SSH","url":"/networking/ssh/","external":false,"items":[]},{"title":"TLS","url":"/networking/tls/","external":false,"items":[]},{"title":"Caddy","url":"/networking/caddy/","external":false,"items":[]},{"title":"Domains","url":"/networking/domains/","external":false,"items":[]},{"title":"QUIC","url":"/networking/quic/","external":false,"items":[]},{"title":"WebSocket","url":"/networking/websocket/","external":false,"items":[]},{"title":"File sharing","url":"/networking/file-sharing/","external":false,"items":[]},{"title":"RabbitMQ","url":"/networking/rabbitmq/","external":false,"items":[]},{"title":"ActivityPub","url":"/networking/activitypub/","external":false,"items":[]},{"title":"Authentication","url":"/networking/authentication/","external":false,"items":[]},{"title":"Mesh networking","url":"/networking/mesh-networking/","external":false,"items":[]},{"title":"Wi-Fi","url":"/networking/wifi/","external":false,"items":[]},{"title":"Gemini","url":"/networking/gemini/","external":false,"items":[]}]},{"title":"Health","url":"/health/health/","external":false,"items":[{"title":"Nutrition","url":"/health/nutrition/nutrition/","external":false,"items":[{"title":"Foods","url":"/health/nutrition/foods/","external":false,"items":[]},{"title":"Drinks","url":"/health/nutrition/drinks/drinks/","external":false,"items":[{"title":"Tea","url":"/health/nutrition/drinks/tea/","external":false},{"title":"Coffee","url":"/health/nutrition/drinks/coffee/","external":false}]},{"title":"Cooking","url":"/health/nutrition/cooking/","external":false,"items":[]},{"title":"Recipes","url":"/health/nutrition/recipes/","external":false,"items":[]},{"title":"Fasting","url":"/health/nutrition/fasting/","external":false,"items":[]},{"title":"Supplements","url":"/health/nutrition/supplements/","external":false,"items":[]},{"title":"Hydroponics","url":"/health/nutrition/hydroponics/","external":false,"items":[]}]},{"title":"Ergonomics","url":"/health/ergonomics/","external":false,"items":[]},{"title":"Aging","url":"/health/aging/","external":false,"items":[]},{"title":"Skin care","url":"/health/skin-care/","external":false,"items":[]},{"title":"Depression","url":"/health/depression/","external":false,"items":[]}]},{"title":"Fitness","url":"/fitness/fitness/","external":false,"items":[{"title":"Strength training","url":"/fitness/strength-training/","external":false,"items":[]},{"title":"Exercises","url":"/fitness/exercises/","external":false,"items":[]},{"title":"Running","url":"/fitness/running/","external":false,"items":[]},{"title":"Yoga","url":"/fitness/yoga/","external":false,"items":[]}]},{"title":"Medicine","url":"/medicine/medicine/","external":false,"items":[{"title":"Diseases","url":"/medicine/diseases/diseases/","external":false,"items":[{"title":"Cancer","url":"/medicine/diseases/cancer/","external":false,"items":[]}]}]},{"title":"History","url":"/history/history/","external":false,"items":[{"title":"Anthropology","url":"/history/anthropology/","external":false,"items":[]}]},{"title":"Travel","url":"/travel/travel/","external":false,"items":[{"title":"Nomad","url":"/travel/nomad/","external":false,"items":[]},{"title":"Backpacks","url":"/travel/backpacks/","external":false,"items":[]},{"title":"Finding home","url":"/travel/finding-home/","external":false,"items":[]},{"title":"Transportation","url":"/travel/transportation/transportation/","external":false,"items":[{"title":"Cycling","url":"/travel/transportation/cycling/","external":false,"items":[]},{"title":"Planes","url":"/travel/transportation/planes/","external":false,"items":[]},{"title":"Boats","url":"/travel/transportation/boats/","external":false,"items":[]}]},{"title":"Events","url":"/travel/events/","external":false,"items":[]},{"title":"Visited","url":"/travel/visited/visited/","external":false,"items":[{"title":"Netherlands","url":"/travel/visited/netherlands/","external":false,"items":[]},{"title":"United Kingdom","url":"/travel/visited/united-kingdom/","external":false,"items":[]},{"title":"United States","url":"/travel/visited/united-states/","external":false,"items":[]},{"title":"Russia","url":"/travel/visited/russia/","external":false,"items":[]},{"title":"Germany","url":"/travel/visited/germany/","external":false,"items":[]},{"title":"Japan","url":"/travel/visited/japan/","external":false,"items":[]},{"title":"China","url":"/travel/visited/china/","external":false,"items":[]},{"title":"Canada","url":"/travel/visited/canada/","external":false,"items":[]},{"title":"India","url":"/travel/visited/india/","external":false,"items":[]},{"title":"Ukraine","url":"/travel/visited/ukraine/","external":false,"items":[]},{"title":"Austria","url":"/travel/visited/austria/","external":false,"items":[]},{"title":"Sweden","url":"/travel/visited/sweden/","external":false,"items":[]},{"title":"Norway","url":"/travel/visited/norway/","external":false,"items":[]},{"title":"Finland","url":"/travel/visited/finland/","external":false,"items":[]},{"title":"Korea","url":"/travel/visited/korea/","external":false,"items":[]},{"title":"Kazakhstan","url":"/travel/visited/kazakhstan/","external":false,"items":[]},{"title":"Europe","url":"/travel/visited/europe/","external":false,"items":[]}]},{"title":"Cities","url":"/travel/cities/","external":false,"items":[]},{"title":"Hiking","url":"/travel/hiking/","external":false,"items":[]}]},{"title":"Geography","url":"/geography/geography/","external":false,"items":[{"title":"Spatial analysis","url":"/geography/spatial-analysis/","external":false,"items":[]}]},{"title":"Business","url":"/business/business/","external":false,"items":[{"title":"Startups","url":"/business/startups/startups/","external":false,"items":[{"title":"Funding","url":"/business/startups/funding/","external":false,"items":[]},{"title":"Venture capital","url":"/business/startups/venture-capital/","external":false,"items":[]},{"title":"Marketplaces","url":"/business/startups/marketplaces/","external":false,"items":[]},{"title":"Values","url":"/business/startups/values/","external":false,"items":[]},{"title":"Onboarding","url":"/business/startups/onboarding/","external":false,"items":[]}]},{"title":"Landing pages","url":"/business/landing-pages/","external":false,"items":[]},{"title":"Products","url":"/business/products/","external":false,"items":[]},{"title":"Pricing","url":"/business/pricing/","external":false,"items":[]},{"title":"Payroll","url":"/business/startups/payroll/","external":false,"items":[]},{"title":"Restaurants","url":"/business/restaurants/","external":false,"items":[]}]},{"title":"Relationships","url":"/relationships/relationships/","external":false,"items":[{"title":"Seduction","url":"/relationships/seduction/","external":false,"items":[]},{"title":"Sex","url":"/relationships/sex/","external":false,"items":[]}]},{"title":"3D Printing","url":"/3d-printing/3d-printing/","external":false,"items":[]},{"title":"Anki","url":"/anki/anki/","external":false,"items":[]},{"title":"Philosophy","url":"/philosophy/philosophy/","external":false,"items":[{"title":"Effective altruism","url":"/philosophy/effective-altruism/","external":false,"items":[]},{"title":"Simulated reality","url":"/philosophy/simulated-reality/","external":false,"items":[]},{"title":"Ethics","url":"/philosophy/ethics/","external":false,"items":[]}]},{"title":"Video","url":"/video/video/","external":false,"items":[{"title":"Cinematography","url":"/video/cinematography/","external":false,"items":[]}]},{"title":"Machine learning","url":"/machine-learning/machine-learning/","external":false,"items":[{"title":"Neural networks","url":"/machine-learning/neural-networks/neural-networks/","external":false,"items":[{"title":"Generative adversarial networks","url":"/machine-learning/neural-networks/generative-adversarial-networks/","external":false,"items":[]},{"title":"Graph Neural Networks","url":"/machine-learning/neural-networks/graph-neural-networks/","external":false,"items":[]}]},{"title":"Unsupervised learning","url":"/machine-learning/unsupervised-learning/","external":false,"items":[]},{"title":"Reinforcement learning","url":"/machine-learning/reinforcement-learning/","external":false,"items":[]},{"title":"ML Libraries","url":"/machine-learning/libraries/ml-libraries/","external":false,"items":[{"title":"PyTorch","url":"/machine-learning/libraries/pytorch/","external":false,"items":[]},{"title":"Keras","url":"/machine-learning/libraries/keras/","external":false,"items":[]},{"title":"TensorFlow","url":"/machine-learning/libraries/tensorflow/","external":false,"items":[]}]},{"title":"Datasets","url":"/machine-learning/datasets/","external":false,"items":[]},{"title":"ML Models","url":"/machine-learning/ml-models/","external":false,"items":[]},{"title":"Autonomous driving","url":"/machine-learning/autonomous-driving/","external":false,"items":[]},{"title":"Artificial intelligence","url":"/machine-learning/artificial-intelligence/","external":false,"items":[]},{"title":"Transfer learning","url":"/machine-learning/transfer-learning/","external":false,"items":[]}]},{"title":"Computer graphics","url":"/computer-graphics/computer-graphics/","external":false,"items":[{"title":"Image processing","url":"/computer-graphics/image-processing/","external":false,"items":[]},{"title":"Computer vision","url":"/computer-graphics/computer-vision/computer-vision/","external":false,"items":[{"title":"OCR","url":"/computer-graphics/computer-vision/ocr/","external":false,"items":[]}]},{"title":"Procedural generation","url":"/computer-graphics/procedural-generation/","external":false,"items":[]},{"title":"Rendering","url":"/computer-graphics/rendering/","external":false,"items":[]},{"title":"Shaders","url":"/computer-graphics/shaders/","external":false,"items":[]},{"title":"Ray Tracing","url":"/computer-graphics/ray-tracing/","external":false,"items":[]},{"title":"Bezier curves","url":"/computer-graphics/bezier-curves/","external":false,"items":[]},{"title":"CUDA","url":"/computer-graphics/cuda/","external":false,"items":[]},{"title":"WebGPU","url":"/computer-graphics/webgpu/","external":false,"items":[]},{"title":"WebGL","url":"/computer-graphics/webgl/","external":false,"items":[]},{"title":"Metal","url":"/computer-graphics/metal/","external":false,"items":[]},{"title":"Vulkan","url":"/computer-graphics/vulkan/","external":false,"items":[]},{"title":"OpenGL","url":"/computer-graphics/opengl/","external":false,"items":[]},{"title":"SVG","url":"/computer-graphics/svg/","external":false,"items":[]}]},{"title":"Tools","url":"/tools/tools/","external":false,"items":[{"title":"Twitter","url":"/tools/twitter/","external":false,"items":[]},{"title":"Obsidian","url":"/tools/obsidian/","external":false,"items":[]},{"title":"Dendron","url":"/tools/dendron/","external":false,"items":[]},{"title":"GitBook","url":"/tools/gitbook/","external":false,"items":[]},{"title":"CodeSandbox","url":"/tools/codesandbox/","external":false,"items":[]},{"title":"Dropbox","url":"/tools/dropbox/","external":false,"items":[]},{"title":"Telegram","url":"/tools/telegram/","external":false,"items":[]},{"title":"Reddit","url":"/tools/reddit/","external":false,"items":[]},{"title":"Product Hunt","url":"/tools/product-hunt/","external":false,"items":[]},{"title":"DuckDuckGo","url":"/tools/duckduckgo/","external":false,"items":[]},{"title":"IFTTT","url":"/tools/ifttt/","external":false,"items":[]},{"title":"Notion","url":"/tools/notion/","external":false,"items":[]},{"title":"Roam Research","url":"/tools/roam-research/","external":false,"items":[]},{"title":"Ansible","url":"/tools/ansible/","external":false,"items":[]},{"title":"Dat","url":"/tools/dat/","external":false,"items":[]},{"title":"Email","url":"/tools/email/","external":false,"items":[]},{"title":"Slack","url":"/tools/slack/","external":false,"items":[]},{"title":"Discord","url":"/tools/discord/","external":false,"items":[]},{"title":"Zulip","url":"/tools/zulip/","external":false,"items":[]},{"title":"Firebase","url":"/tools/firebase/","external":false,"items":[]},{"title":"Elasticsearch","url":"/tools/elasticsearch/","external":false,"items":[]},{"title":"Personal setups","url":"/tools/personal-setups/","external":false,"items":[]},{"title":"Voice assistants","url":"/tools/voice-assistants/voice-assistants/","external":false,"items":[]},{"title":"Wordpress","url":"/tools/wordpress/","external":false,"items":[]}]},{"title":"Design","url":"/design/design/","external":false,"items":[{"title":"Icons","url":"/design/icons/","external":false,"items":[]},{"title":"Fonts","url":"/design/fonts/","external":false,"items":[]},{"title":"Design inspiration","url":"/design/design-inspiration/","external":false,"items":[]},{"title":"Interior Design","url":"/design/interior-design/","external":false,"items":[]},{"title":"Industrial Design","url":"/design/industrial-design/","external":false,"items":[]},{"title":"User Experience","url":"/design/user-experience/","external":false,"items":[]},{"title":"3D Modeling","url":"/design/3d-modeling/","external":false,"items":[]},{"title":"Blender","url":"/design/blender/","external":false,"items":[]},{"title":"Animation","url":"/design/animation/","external":false,"items":[]},{"title":"Figma","url":"/design/figma/figma/","external":false,"items":[{"title":"Figma plugins","url":"/design/figma/figma-plugins/","external":false,"items":[]}]},{"title":"Framer","url":"/design/framer/","external":false,"items":[]},{"title":"Inkscape","url":"/design/inkscape/","external":false,"items":[]},{"title":"Design systems","url":"/design/design-systems/","external":false,"items":[]},{"title":"Logos","url":"/design/logos/","external":false,"items":[]},{"title":"Color","url":"/design/color/","external":false,"items":[]}]},{"title":"Keyboards","url":"/keyboards/keyboards/","external":false,"items":[{"title":"QMK","url":"/keyboards/qmk/","external":false,"items":[]}]},{"title":"Future","url":"/future/future/","external":false,"items":[]},{"title":"Cryptocurrencies","url":"/cryptocurrencies/cryptocurrencies/","external":false,"items":[{"title":"Nano","url":"/cryptocurrencies/nano/","external":false,"items":[]},{"title":"Bitcoin","url":"/cryptocurrencies/bitcoin/","external":false,"items":[]},{"title":"Stellar","url":"/cryptocurrencies/stellar/","external":false,"items":[]},{"title":"Libra","url":"/cryptocurrencies/libra/","external":false,"items":[]},{"title":"TON","url":"/cryptocurrencies/ton/","external":false,"items":[]},{"title":"Monero","url":"/cryptocurrencies/monero/","external":false,"items":[]}]},{"title":"Privacy","url":"/privacy/privacy/","external":false,"items":[{"title":"Freedom","url":"/privacy/freedom/","external":false,"items":[]},{"title":"Self hosting","url":"/privacy/self-hosting/","external":false,"items":[]},{"title":"Ad blocking","url":"/privacy/adblocking/","external":false,"items":[]},{"title":"Tor","url":"/privacy/tor/","external":false,"items":[]}]},{"title":"Games","url":"/games/games/","external":false,"items":[{"title":"Gamedev","url":"/games/gamedev/gamedev/","external":false,"items":[{"title":"Game engines","url":"/games/gamedev/game-engines/game-engines/","external":false,"items":[{"title":"Godot","url":"/games/gamedev/game-engines/godot/","external":false},{"title":"Unity","url":"/games/gamedev/game-engines/unity/","external":false},{"title":"Unreal Engine","url":"/games/gamedev/game-engines/unreal-engine/","external":false},{"title":"Bevy","url":"/games/gamedev/game-engines/bevy/","external":false}]}]},{"title":"Board games","url":"/games/board-games/","external":false,"items":[]},{"title":"Chess","url":"/games/chess/","external":false,"items":[]},{"title":"Poker","url":"/games/poker/","external":false,"items":[]},{"title":"Sudoku","url":"/games/sudoku/","external":false,"items":[]},{"title":"Minecraft","url":"/games/minecraft/","external":false,"items":[]},{"title":"Golf","url":"/games/golf/","external":false,"items":[]}]},{"title":"Streaming","url":"/streaming/streaming/","external":false,"items":[]},{"title":"Talks","url":"/talks/talks/","external":false,"items":[{"title":"Presentations","url":"/talks/presentations/","external":false,"items":[]}]},{"title":"Analytics","url":"/analytics/analytics/","external":false,"items":[]},{"title":"Databases","url":"/databases/databases/","external":false,"items":[{"title":"PostgreSQL","url":"/databases/postgresql/","external":false,"items":[]},{"title":"SQLite","url":"/databases/sqlite/","external":false,"items":[]},{"title":"Redis","url":"/databases/redis/","external":false,"items":[]},{"title":"DynamoDB","url":"/databases/dynamodb/","external":false,"items":[]},{"title":"FaunaDB","url":"/databases/fauna/","external":false,"items":[]},{"title":"FoundationDB","url":"/databases/foundationdb/","external":false,"items":[]},{"title":"Prometheus","url":"/databases/prometheus/","external":false,"items":[]},{"title":"MongoDB","url":"/databases/mongodb/","external":false,"items":[]},{"title":"SQL","url":"/databases/sql/sql/","external":false,"items":[]},{"title":"Prisma","url":"/databases/prisma/","external":false,"items":[]},{"title":"Memcached","url":"/databases/memcached/","external":false,"items":[]},{"title":"Kdb+","url":"/databases/kdb/","external":false,"items":[]},{"title":"Neo4j","url":"/databases/neo4j/","external":false,"items":[]},{"title":"Dgraph","url":"/databases/dgraph/","external":false,"items":[]},{"title":"Cassandra","url":"/databases/cassandra/","external":false,"items":[]},{"title":"MariaDB","url":"/databases/mariadb/","external":false,"items":[]},{"title":"Blockchain","url":"/databases/blockchain/blockchain/","external":false,"items":[{"title":"Ethereum","url":"/databases/blockchain/ethereum/","external":false,"items":[]},{"title":"Uniswap","url":"/databases/blockchain/uniswap/","external":false,"items":[]},{"title":"Tezos","url":"/databases/blockchain/tezos/","external":false,"items":[]},{"title":"Polkadot","url":"/databases/blockchain/polkadot/","external":false,"items":[]},{"title":"Cardano","url":"/databases/blockchain/cardano/","external":false,"items":[]},{"title":"Arweave","url":"/databases/blockchain/arweave/","external":false,"items":[]},{"title":"Solana","url":"/databases/blockchain/solana/","external":false,"items":[]}]}]},{"title":"Art","url":"/art/art/","external":false,"items":[{"title":"Photography","url":"/art/photography/","external":false,"items":[]},{"title":"Drawing","url":"/art/drawing/","external":false,"items":[]},{"title":"Pen plotting","url":"/art/pen-plotting/","external":false,"items":[]},{"title":"Sketching","url":"/art/sketching/","external":false,"items":[]},{"title":"Comics","url":"/art/comics/","external":false,"items":[]},{"title":"Anime","url":"/art/anime/","external":false,"items":[]},{"title":"Dancing","url":"/art/dancing/","external":false,"items":[]},{"title":"Generative art","url":"/art/generative-art/","external":false,"items":[]},{"title":"Architecture","url":"/art/architecture/","external":false,"items":[]},{"title":"Tattoos","url":"/art/tattoos/","external":false,"items":[]},{"title":"Clothes","url":"/art/clothes/","external":false,"items":[]},{"title":"Furniture","url":"/art/furniture/","external":false,"items":[]}]},{"title":"API","url":"/api/api/","external":false,"items":[]},{"title":"Distributed systems","url":"/distributed-systems/distributed-systems/","external":false,"items":[{"title":"RPCs","url":"/distributed-systems/rpcs/rpcs/","external":false,"items":[{"title":"gRPC","url":"/distributed-systems/rpcs/grpc/","external":false,"items":[]}]},{"title":"CRDTs","url":"/distributed-systems/crdt/","external":false,"items":[]},{"title":"Load balancing","url":"/distributed-systems/load-balancing/","external":false,"items":[]},{"title":"Message queue","url":"/distributed-systems/message-queue/message-queue/","external":false,"items":[{"title":"ZeroMQ","url":"/distributed-systems/message-queue/zeromq/","external":false,"items":[]},{"title":"MQTT","url":"/distributed-systems/message-queue/mqtt/","external":false,"items":[]}]}]},{"title":"Backups","url":"/backups/backups/","external":false,"items":[]},{"title":"Space","url":"/space/space/","external":false,"items":[{"title":"Black holes","url":"/space/black-holes/","external":false,"items":[]},{"title":"Universe","url":"/space/universe/","external":false,"items":[]},{"title":"Rockets","url":"/space/rockets/","external":false,"items":[]}]},{"title":"Psychology","url":"/psychology/psychology/","external":false,"items":[{"title":"Addiction","url":"/psychology/addiction/","external":false,"items":[]},{"title":"Biases","url":"/psychology/biases/","external":false,"items":[]},{"title":"Negotiating","url":"/psychology/negotiating/","external":false,"items":[]},{"title":"Marketing","url":"/psychology/marketing/","external":false,"items":[]},{"title":"Decision making","url":"/psychology/decision-making/","external":false,"items":[]}]},{"title":"Sleep","url":"/sleep/sleep/","external":false,"items":[{"title":"Dreaming","url":"/sleep/dreaming/","external":false,"items":[]}]},{"title":"IRC","url":"/irc/irc/","external":false,"items":[{"title":"ZNC","url":"/irc/znc/","external":false,"items":[]}]},{"title":"Work","url":"/work/work/","external":false,"items":[{"title":"Finding work","url":"/work/finding-work/finding-work/","external":false,"items":[{"title":"Interviews","url":"/work/finding-work/interviews/","external":false,"items":[]},{"title":"CV","url":"/work/finding-work/cv/","external":false,"items":[]},{"title":"Hiring","url":"/work/finding-work/hiring/","external":false,"items":[]},{"title":"Freelancing","url":"/work/finding-work/freelancing/","external":false,"items":[]}]},{"title":"Remote work","url":"/work/remote-work/","external":false,"items":[]},{"title":"Consultancies","url":"/work/consultancies/","external":false,"items":[]},{"title":"Communication","url":"/work/communication/","external":false,"items":[]}]},{"title":"Management","url":"/management/management/","external":false,"items":[{"title":"Product Management","url":"/management/product-management/","external":false,"items":[]},{"title":"Leadership","url":"/management/leadership/","external":false,"items":[]}]},{"title":"LaTeX","url":"/latex/latex/","external":false,"items":[]},{"title":"Robots","url":"/robots/robots/","external":false,"items":[{"title":"Drones","url":"/robots/drones/","external":false,"items":[]}]},{"title":"NLP","url":"/nlp/nlp/","external":false,"items":[{"title":"Speech recognition","url":"/nlp/speech-recognition/","external":false,"items":[]},{"title":"Virtual assistant","url":"/nlp/virtual-assistant/","external":false,"items":[]},{"title":"Speech synthesis","url":"/nlp/speech-synthesis/","external":false,"items":[]},{"title":"Sentiment Analysis","url":"/nlp/sentiment-analysis/","external":false,"items":[]},{"title":"Bots","url":"/nlp/bots/","external":false,"items":[]}]},{"title":"Virtual Reality","url":"/virtual-reality/virtual-reality/","external":false,"items":[]},{"title":"Augmented Reality","url":"/augmented-reality/augmented-reality/","external":false,"items":[{"title":"ARKit","url":"/augmented-reality/arkit/","external":false,"items":[]}]},{"title":"Neuroscience","url":"/neuroscience/neuroscience/","external":false,"items":[{"title":"Brain Computer Interfaces","url":"/neuroscience/brain-computer-interfaces/","external":false,"items":[]},{"title":"Cognition","url":"/neuroscience/cognition/","external":false,"items":[]}]},{"title":"CLI","url":"/cli/cli/","external":false,"items":[{"title":"sed","url":"/cli/sed/","external":false,"items":[]},{"title":"tmux","url":"/cli/tmux/","external":false,"items":[]},{"title":"ngrok","url":"/cli/ngrok/","external":false,"items":[]}]},{"title":"Humans","url":"/humans/humans/","external":false,"items":[{"title":"Alan Watts","url":"/humans/alan-watts/","external":false,"items":[]}]},{"title":"Philanthropy","url":"/philanthropy/philanthropy/","external":false,"items":[]},{"title":"Animals","url":"/animals/animals/","external":false,"items":[{"title":"Birds","url":"/animals/birds/","external":false,"items":[]}]},{"title":"Podcasts","url":"/podcasts/podcasts/","external":false,"items":[{"title":"Podcast recording","url":"/podcasts/podcast-recording/","external":false,"items":[]}]},{"title":"Documentaries","url":"/documentaries/documentaries/","external":false,"items":[]},{"title":"Movies","url":"/movies/movies/","external":false,"items":[{"title":"Directors","url":"/movies/directors/","external":false,"items":[]},{"title":"Acting","url":"/movies/acting/","external":false,"items":[]}]},{"title":"TV series","url":"/tv-series/tv-series/","external":false,"items":[]},{"title":"Courses","url":"/courses/courses/","external":false,"items":[]},{"title":"Articles","url":"/articles/articles/","external":false,"items":[]},{"title":"Poems","url":"/poems/poems/","external":false,"items":[]},{"title":"Research papers","url":"/research-papers/research-papers/","external":false,"items":[{"title":"A view of mathematics","url":"/research-papers/a-view-of-mathematics/","external":false,"items":[]}]},{"title":"Books","url":"/books/books/","external":false,"items":[{"title":"Go in action","url":"/books/go-in-action/","external":false,"items":[]},{"title":"AI: Modern Approach","url":"/books/ai-modern-approach/","external":false,"items":[]},{"title":"Mind for Numbers","url":"/books/mind-for-numbers/","external":false,"items":[]},{"title":"Mindstorms","url":"/books/mindstorms/","external":false,"items":[]},{"title":"Cracking the coding interview","url":"/books/cracking-the-coding-interview/","external":false,"items":[]},{"title":"Programming in Haskell","url":"/books/programming-in-haskell/","external":false,"items":[]},{"title":"Rich dad poor dad","url":"/books/rich-dad-poor-dad/","external":false,"items":[]},{"title":"Elements of programming interviews","url":"/books/elements-of-programming-interviews/","external":false,"items":[]},{"title":"Crafting interpreters","url":"/books/crafting-interpreters/","external":false,"items":[]},{"title":"Brave new world","url":"/books/brave-new-world/","external":false,"items":[]},{"title":"Code: hidden language of software","url":"/books/code-the-hidden-language/","external":false,"items":[]},{"title":"Eloquent ruby","url":"/books/eloquent-ruby/","external":false,"items":[]},{"title":"Surely you are joking Mr Feynman","url":"/books/surely-you-are-joking-mr-feynman/","external":false,"items":[]},{"title":"Thinking, fast and slow","url":"/books/thinking-fast-and-slow/","external":false,"items":[]}]},{"title":"Other","url":"/other/other/","external":false,"items":[{"title":"Wiki workflow","url":"/other/wiki-workflow/","external":false,"items":[]},{"title":"My workflow notation","url":"/other/my-workflow-notation/","external":false,"items":[]},{"title":"Queries","url":"/other/queries/","external":false,"items":[]},{"title":"Funny","url":"/other/funny/","external":false,"items":[]},{"title":"Standup","url":"/other/standup/","external":false,"items":[]},{"title":"NSFW","url":"/other/nsfw/","external":false,"items":[]},{"title":"Puzzles","url":"/other/puzzles/","external":false,"items":[]},{"title":"Woodworking","url":"/other/woodworking/","external":false,"items":[]},{"title":"Gardening","url":"/other/gardening/","external":false,"items":[]},{"title":"Real Estate","url":"/other/real-estate/","external":false,"items":[]},{"title":"Newsletters","url":"/other/newsletters/","external":false,"items":[]},{"title":"Used hotkeys","url":"/other/used-hotkeys/","external":false,"items":[]},{"title":"Mentions","url":"/other/mentions/","external":false,"items":[]},{"title":"Web presence","url":"/other/web-presence/","external":false,"items":[]}]},{"title":"Notes","url":"/notes/notes/","external":false,"items":[]},{"title":"Looking back","url":"/looking-back/looking-back/","external":false,"items":[{"title":"2017","url":"/looking-back/2017/2017/","external":false,"items":[]},{"title":"2018","url":"/looking-back/2018/2018/","external":false,"items":[{"title":"2018 January","url":"/looking-back/2018/2018-january/","external":false,"items":[]},{"title":"2018 February","url":"/looking-back/2018/2018-february/","external":false,"items":[]},{"title":"2018 March","url":"/looking-back/2018/2018-march/","external":false,"items":[]},{"title":"2018 April","url":"/looking-back/2018/2018-april/","external":false,"items":[]},{"title":"2018 May","url":"/looking-back/2018/2018-may/","external":false,"items":[]},{"title":"2018 June","url":"/looking-back/2018/2018-june/","external":false,"items":[]},{"title":"2018 July","url":"/looking-back/2018/2018-july/","external":false,"items":[]},{"title":"2018 August","url":"/looking-back/2018/2018-august/","external":false,"items":[]},{"title":"2018 September","url":"/looking-back/2018/2018-september/","external":false,"items":[]},{"title":"2018 October","url":"/looking-back/2018/2018-october/","external":false,"items":[]},{"title":"2018 November","url":"/looking-back/2018/2018-november/","external":false,"items":[]},{"title":"2018 December","url":"/looking-back/2018/2018-december/","external":false,"items":[]}]},{"title":"2019","url":"/looking-back/2019/2019/","external":false,"items":[{"title":"2019 January","url":"/looking-back/2019/2019-january/","external":false,"items":[]},{"title":"2019 February","url":"/looking-back/2019/2019-february/","external":false,"items":[]},{"title":"2019 March","url":"/looking-back/2019/2019-march/","external":false,"items":[]},{"title":"2019 April","url":"/looking-back/2019/2019-april/","external":false,"items":[]},{"title":"2019 May","url":"/looking-back/2019/2019-may/","external":false,"items":[]},{"title":"2019 June","url":"/looking-back/2019/2019-june/","external":false,"items":[]},{"title":"2019 July","url":"/looking-back/2019/2019-july/","external":false,"items":[]},{"title":"2019 August","url":"/looking-back/2019/2019-august/","external":false,"items":[]},{"title":"2019 September","url":"/looking-back/2019/2019-september/","external":false,"items":[]},{"title":"2019 October","url":"/looking-back/2019/2019-october/","external":false,"items":[]},{"title":"2019 November","url":"/looking-back/2019/2019-november/","external":false,"items":[]},{"title":"2019 December","url":"/looking-back/2019/2019-december/","external":false,"items":[]}]},{"title":"2020","url":"/looking-back/2020/2020/","external":false,"items":[{"title":"2020 January","url":"/looking-back/2020/2020-january/","external":false,"items":[]},{"title":"2020 February","url":"/looking-back/2020/2020-february/","external":false,"items":[]},{"title":"2020 March","url":"/looking-back/2020/2020-march/","external":false,"items":[]},{"title":"2020 April","url":"/looking-back/2020/2020-april/","external":false,"items":[]},{"title":"2020 May","url":"/looking-back/2020/2020-may/","external":false,"items":[]},{"title":"2020 June","url":"/looking-back/2020/2020-june/","external":false,"items":[]},{"title":"2020 July","url":"/looking-back/2020/2020-july/","external":false,"items":[]},{"title":"2020 August","url":"/looking-back/2020/2020-august/","external":false,"items":[]},{"title":"2020 September","url":"/looking-back/2020/2020-september/","external":false,"items":[]},{"title":"2020 October","url":"/looking-back/2020/2020-october/","external":false,"items":[]},{"title":"2020 November","url":"/looking-back/2020/2020-november/","external":false,"items":[]},{"title":"2020 December","url":"/looking-back/2020/2020-december/","external":false,"items":[]}]},{"title":"2021","url":"","external":false,"items":[{"title":"2021 January","url":"/looking-back/2021/2021-january/","external":false,"items":[]},{"title":"2021 February","url":"/looking-back/2021/2021-february/","external":false,"items":[]},{"title":"2021 March","url":"/looking-back/2021/2021-march/","external":false,"items":[]},{"title":"2021 April","url":"/looking-back/2021/2021-april/","external":false,"items":[]},{"title":"2021 May","url":"/looking-back/2021/2021-may/","external":false,"items":[]},{"title":"2021 June","url":"/looking-back/2021/2021-june/","external":false,"items":[]},{"title":"2021 July","url":"/looking-back/2021/2021-july/","external":false,"items":[]}]}]}]}],"tagsGroups":[]}},
    "staticQueryHashes": ["2220803758","2320115945","3495835395","451533639"]}